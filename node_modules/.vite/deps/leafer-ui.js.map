{
  "version": 3,
  "sources": ["../../@leafer/core/lib/core.esm.js", "../../@leafer-ui/draw/lib/draw.esm.js", "../../@leafer-ui/core/lib/core.esm.js", "../../leafer-ui/dist/web.esm.js"],
  "sourcesContent": ["const Platform = {\n    toURL(text, fileType) {\n        let url = encodeURIComponent(text);\n        if (fileType === 'text')\n            url = 'data:text/plain;charset=utf-8,' + url;\n        else if (fileType === 'svg')\n            url = 'data:image/svg+xml,' + url;\n        return url;\n    },\n    image: {\n        hitCanvasSize: 100,\n        maxCacheSize: 2560 * 1600,\n        maxPatternSize: 4096 * 2160,\n        crossOrigin: 'anonymous',\n        getRealURL(url) {\n            const { prefix, suffix } = Platform.image;\n            if (suffix && !url.startsWith('data:') && !url.startsWith('blob:'))\n                url += (url.includes(\"?\") ? \"&\" : \"?\") + suffix;\n            if (prefix && url[0] === '/')\n                url = prefix + url;\n            return url;\n        }\n    }\n};\n\nconst Creator = {};\n\nconst IncrementId = {\n    RUNTIME: 'runtime',\n    LEAF: 'leaf',\n    TASK: 'task',\n    CNAVAS: 'canvas',\n    IMAGE: 'image',\n    types: {},\n    create(typeName) {\n        const { types } = I$1;\n        if (types[typeName]) {\n            return types[typeName]++;\n        }\n        else {\n            types[typeName] = 1;\n            return 0;\n        }\n    }\n};\nconst I$1 = IncrementId;\n\nconst { round, pow: pow$1, PI: PI$2 } = Math;\nconst MathHelper = {\n    within(value, min, max) {\n        if (typeof min === 'object')\n            max = min.max, min = min.min;\n        if (min !== undefined && value < min)\n            value = min;\n        if (max !== undefined && value > max)\n            value = max;\n        return value;\n    },\n    fourNumber(num, maxValue) {\n        let data;\n        if (num instanceof Array) {\n            switch (num.length) {\n                case 4:\n                    data = maxValue === undefined ? num : [...num];\n                    break;\n                case 2:\n                    data = [num[0], num[1], num[0], num[1]];\n                    break;\n                case 3:\n                    data = [num[0], num[1], num[2], num[1]];\n                    break;\n                case 1:\n                    num = num[0];\n                    break;\n                default:\n                    num = 0;\n            }\n        }\n        if (!data)\n            data = [num, num, num, num];\n        if (maxValue)\n            for (let i = 0; i < 4; i++)\n                if (data[i] > maxValue)\n                    data[i] = maxValue;\n        return data;\n    },\n    formatRotation(rotation, unsign) {\n        rotation %= 360;\n        if (unsign) {\n            if (rotation < 0)\n                rotation += 360;\n        }\n        else {\n            if (rotation > 180)\n                rotation -= 360;\n            if (rotation < -180)\n                rotation += 360;\n        }\n        return MathHelper.float(rotation);\n    },\n    getGapRotation(addRotation, gap, oldRotation = 0) {\n        let rotation = addRotation + oldRotation;\n        if (gap > 1) {\n            const r = Math.abs(rotation % gap);\n            if (r < 1 || r > gap - 1)\n                rotation = Math.round(rotation / gap) * gap;\n        }\n        return rotation - oldRotation;\n    },\n    float(num, maxLength) {\n        const a = maxLength !== undefined ? pow$1(10, maxLength) : 1000000000000;\n        num = round(num * a) / a;\n        return num === -0 ? 0 : num;\n    },\n    getScaleData(scale, size, originSize, scaleData) {\n        if (!scaleData)\n            scaleData = {};\n        if (size) {\n            scaleData.scaleX = (typeof size === 'number' ? size : size.width) / originSize.width;\n            scaleData.scaleY = (typeof size === 'number' ? size : size.height) / originSize.height;\n        }\n        else if (scale)\n            MathHelper.assignScale(scaleData, scale);\n        return scaleData;\n    },\n    assignScale(scaleData, scale) {\n        if (typeof scale === 'number') {\n            scaleData.scaleX = scaleData.scaleY = scale;\n        }\n        else {\n            scaleData.scaleX = scale.x;\n            scaleData.scaleY = scale.y;\n        }\n    }\n};\nconst OneRadian = PI$2 / 180;\nconst PI2 = PI$2 * 2;\nconst PI_2 = PI$2 / 2;\nfunction getPointData() { return { x: 0, y: 0 }; }\nfunction getBoundsData() { return { x: 0, y: 0, width: 0, height: 0 }; }\nfunction getMatrixData() { return { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }; }\n\nconst { sin: sin$3, cos: cos$3, acos, sqrt: sqrt$3 } = Math;\nconst { float: float$1 } = MathHelper;\nconst tempPoint$3 = {};\nfunction getWorld() {\n    return Object.assign(Object.assign(Object.assign({}, getMatrixData()), getBoundsData()), { scaleX: 1, scaleY: 1, rotation: 0, skewX: 0, skewY: 0 });\n}\nconst MatrixHelper = {\n    defaultMatrix: getMatrixData(),\n    defaultWorld: getWorld(),\n    tempMatrix: {},\n    set(t, a = 1, b = 0, c = 0, d = 1, e = 0, f = 0) {\n        t.a = a;\n        t.b = b;\n        t.c = c;\n        t.d = d;\n        t.e = e;\n        t.f = f;\n    },\n    get: getMatrixData,\n    getWorld,\n    copy(t, matrix) {\n        t.a = matrix.a;\n        t.b = matrix.b;\n        t.c = matrix.c;\n        t.d = matrix.d;\n        t.e = matrix.e;\n        t.f = matrix.f;\n    },\n    translate(t, x, y) {\n        t.e += x;\n        t.f += y;\n    },\n    translateInner(t, x, y, hasOrigin) {\n        t.e += t.a * x + t.c * y;\n        t.f += t.b * x + t.d * y;\n        if (hasOrigin)\n            t.e -= x, t.f -= y;\n    },\n    scale(t, scaleX, scaleY = scaleX) {\n        t.a *= scaleX;\n        t.b *= scaleX;\n        t.c *= scaleY;\n        t.d *= scaleY;\n    },\n    scaleOfOuter(t, origin, scaleX, scaleY) {\n        M$6.toInnerPoint(t, origin, tempPoint$3);\n        M$6.scaleOfInner(t, tempPoint$3, scaleX, scaleY);\n    },\n    scaleOfInner(t, origin, scaleX, scaleY = scaleX) {\n        M$6.translateInner(t, origin.x, origin.y);\n        M$6.scale(t, scaleX, scaleY);\n        M$6.translateInner(t, -origin.x, -origin.y);\n    },\n    rotate(t, rotation) {\n        const { a, b, c, d } = t;\n        rotation *= OneRadian;\n        const cosR = cos$3(rotation);\n        const sinR = sin$3(rotation);\n        t.a = a * cosR - b * sinR;\n        t.b = a * sinR + b * cosR;\n        t.c = c * cosR - d * sinR;\n        t.d = c * sinR + d * cosR;\n    },\n    rotateOfOuter(t, origin, rotation) {\n        M$6.toInnerPoint(t, origin, tempPoint$3);\n        M$6.rotateOfInner(t, tempPoint$3, rotation);\n    },\n    rotateOfInner(t, origin, rotation) {\n        M$6.translateInner(t, origin.x, origin.y);\n        M$6.rotate(t, rotation);\n        M$6.translateInner(t, -origin.x, -origin.y);\n    },\n    skew(t, skewX, skewY) {\n        const { a, b, c, d } = t;\n        if (skewY) {\n            skewY *= OneRadian;\n            t.a = a + c * skewY;\n            t.b = b + d * skewY;\n        }\n        if (skewX) {\n            skewX *= OneRadian;\n            t.c = c + a * skewX;\n            t.d = d + b * skewX;\n        }\n    },\n    skewOfOuter(t, origin, skewX, skewY) {\n        M$6.toInnerPoint(t, origin, tempPoint$3);\n        M$6.skewOfInner(t, tempPoint$3, skewX, skewY);\n    },\n    skewOfInner(t, origin, skewX, skewY = 0) {\n        M$6.translateInner(t, origin.x, origin.y);\n        M$6.skew(t, skewX, skewY);\n        M$6.translateInner(t, -origin.x, -origin.y);\n    },\n    multiply(t, child) {\n        const { a, b, c, d, e, f } = t;\n        t.a = child.a * a + child.b * c;\n        t.b = child.a * b + child.b * d;\n        t.c = child.c * a + child.d * c;\n        t.d = child.c * b + child.d * d;\n        t.e = child.e * a + child.f * c + e;\n        t.f = child.e * b + child.f * d + f;\n    },\n    multiplyParent(t, parent, to, abcdChanged, childScaleData, scrollData) {\n        let { e, f } = t;\n        if (scrollData)\n            e += scrollData.scrollX, f += scrollData.scrollY;\n        to || (to = t);\n        if (abcdChanged === undefined)\n            abcdChanged = t.a !== 1 || t.b || t.c || t.d !== 1;\n        if (abcdChanged) {\n            const { a, b, c, d } = t;\n            to.a = a * parent.a + b * parent.c;\n            to.b = a * parent.b + b * parent.d;\n            to.c = c * parent.a + d * parent.c;\n            to.d = c * parent.b + d * parent.d;\n            if (childScaleData) {\n                to.scaleX = parent.scaleX * childScaleData.scaleX;\n                to.scaleY = parent.scaleY * childScaleData.scaleY;\n            }\n        }\n        else {\n            to.a = parent.a;\n            to.b = parent.b;\n            to.c = parent.c;\n            to.d = parent.d;\n            if (childScaleData) {\n                to.scaleX = parent.scaleX;\n                to.scaleY = parent.scaleY;\n            }\n        }\n        to.e = e * parent.a + f * parent.c + parent.e;\n        to.f = e * parent.b + f * parent.d + parent.f;\n    },\n    divide(t, child) {\n        M$6.multiply(t, M$6.tempInvert(child));\n    },\n    divideParent(t, parent) {\n        M$6.multiplyParent(t, M$6.tempInvert(parent));\n    },\n    tempInvert(t) {\n        const { tempMatrix } = M$6;\n        M$6.copy(tempMatrix, t);\n        M$6.invert(tempMatrix);\n        return tempMatrix;\n    },\n    invert(t) {\n        const { a, b, c, d, e, f } = t;\n        if (!b && !c) {\n            if (a === 1 && d === 1) {\n                t.e = -e;\n                t.f = -f;\n            }\n            else {\n                const s = 1 / (a * d);\n                t.a = d * s;\n                t.d = a * s;\n                t.e = -e * d * s;\n                t.f = -f * a * s;\n            }\n        }\n        else {\n            const s = 1 / (a * d - b * c);\n            t.a = d * s;\n            t.b = -b * s;\n            t.c = -c * s;\n            t.d = a * s;\n            t.e = -(e * d - f * c) * s;\n            t.f = -(f * a - e * b) * s;\n        }\n    },\n    toOuterPoint(t, inner, to, distance) {\n        const { x, y } = inner;\n        to || (to = inner);\n        to.x = x * t.a + y * t.c;\n        to.y = x * t.b + y * t.d;\n        if (!distance) {\n            to.x += t.e;\n            to.y += t.f;\n        }\n    },\n    toInnerPoint(t, outer, to, distance) {\n        const { a, b, c, d } = t;\n        const s = 1 / (a * d - b * c);\n        const { x, y } = outer;\n        to || (to = outer);\n        to.x = (x * d - y * c) * s;\n        to.y = (y * a - x * b) * s;\n        if (!distance) {\n            const { e, f } = t;\n            to.x -= (e * d - f * c) * s;\n            to.y -= (f * a - e * b) * s;\n        }\n    },\n    setLayout(t, layout, origin, around, bcChanged) {\n        const { x, y, scaleX, scaleY } = layout;\n        if (bcChanged === undefined)\n            bcChanged = layout.rotation || layout.skewX || layout.skewY;\n        if (bcChanged) {\n            const { rotation, skewX, skewY } = layout;\n            const r = rotation * OneRadian;\n            const cosR = cos$3(r);\n            const sinR = sin$3(r);\n            if (skewX || skewY) {\n                const sx = skewX * OneRadian;\n                const sy = skewY * OneRadian;\n                t.a = (cosR + sy * -sinR) * scaleX;\n                t.b = (sinR + sy * cosR) * scaleX;\n                t.c = (-sinR + sx * cosR) * scaleY;\n                t.d = (cosR + sx * sinR) * scaleY;\n            }\n            else {\n                t.a = cosR * scaleX;\n                t.b = sinR * scaleX;\n                t.c = -sinR * scaleY;\n                t.d = cosR * scaleY;\n            }\n        }\n        else {\n            t.a = scaleX;\n            t.b = 0;\n            t.c = 0;\n            t.d = scaleY;\n        }\n        t.e = x;\n        t.f = y;\n        if (origin = origin || around)\n            M$6.translateInner(t, -origin.x, -origin.y, !around);\n    },\n    getLayout(t, origin, around, firstSkewY) {\n        const { a, b, c, d, e, f } = t;\n        let x = e, y = f, scaleX, scaleY, rotation, skewX, skewY;\n        if (b || c) {\n            const s = a * d - b * c;\n            if (c && !firstSkewY) {\n                scaleX = sqrt$3(a * a + b * b);\n                scaleY = s / scaleX;\n                const cosR = a / scaleX;\n                rotation = b > 0 ? acos(cosR) : -acos(cosR);\n            }\n            else {\n                scaleY = sqrt$3(c * c + d * d);\n                scaleX = s / scaleY;\n                const cosR = c / scaleY;\n                rotation = PI_2 - (d > 0 ? acos(-cosR) : -acos(cosR));\n            }\n            const cosR = float$1(cos$3(rotation));\n            const sinR = sin$3(rotation);\n            scaleX = float$1(scaleX), scaleY = float$1(scaleY);\n            skewX = cosR ? float$1((c / scaleY + sinR) / cosR / OneRadian, 9) : 0;\n            skewY = cosR ? float$1((b / scaleX - sinR) / cosR / OneRadian, 9) : 0;\n            rotation = float$1(rotation / OneRadian);\n        }\n        else {\n            scaleX = a;\n            scaleY = d;\n            rotation = skewX = skewY = 0;\n        }\n        if (origin = around || origin) {\n            x += origin.x * a + origin.y * c;\n            y += origin.x * b + origin.y * d;\n            if (!around)\n                x -= origin.x, y -= origin.y;\n        }\n        return { x, y, scaleX, scaleY, rotation, skewX, skewY };\n    },\n    withScale(t, scaleX, scaleY = scaleX) {\n        const world = t;\n        if (!scaleX || !scaleY) {\n            const { a, b, c, d } = t;\n            if (b || c) {\n                scaleX = sqrt$3(a * a + b * b);\n                scaleY = (a * d - b * c) / scaleX;\n            }\n            else {\n                scaleX = a;\n                scaleY = d;\n            }\n        }\n        world.scaleX = scaleX;\n        world.scaleY = scaleY;\n        return world;\n    },\n    reset(t) {\n        M$6.set(t);\n    }\n};\nconst M$6 = MatrixHelper;\n\nconst { toInnerPoint: toInnerPoint$2, toOuterPoint: toOuterPoint$3 } = MatrixHelper;\nconst { sin: sin$2, cos: cos$2, abs: abs$2, sqrt: sqrt$2, atan2: atan2$2, min: min$1, PI: PI$1 } = Math;\nconst PointHelper = {\n    defaultPoint: getPointData(),\n    tempPoint: {},\n    tempRadiusPoint: {},\n    set(t, x = 0, y = 0) {\n        t.x = x;\n        t.y = y;\n    },\n    setRadius(t, x, y) {\n        t.radiusX = x;\n        t.radiusY = y === undefined ? x : y;\n    },\n    copy(t, point) {\n        t.x = point.x;\n        t.y = point.y;\n    },\n    copyFrom(t, x, y) {\n        t.x = x;\n        t.y = y;\n    },\n    move(t, x, y) {\n        t.x += x;\n        t.y += y;\n    },\n    scale(t, scaleX, scaleY = scaleX) {\n        if (t.x)\n            t.x *= scaleX;\n        if (t.y)\n            t.y *= scaleY;\n    },\n    scaleOf(t, origin, scaleX, scaleY = scaleX) {\n        t.x += (t.x - origin.x) * (scaleX - 1);\n        t.y += (t.y - origin.y) * (scaleY - 1);\n    },\n    rotate(t, rotation, origin) {\n        if (!origin)\n            origin = P$5.defaultPoint;\n        rotation *= OneRadian;\n        const cosR = cos$2(rotation);\n        const sinR = sin$2(rotation);\n        const rx = t.x - origin.x;\n        const ry = t.y - origin.y;\n        t.x = origin.x + rx * cosR - ry * sinR;\n        t.y = origin.y + rx * sinR + ry * cosR;\n    },\n    tempToInnerOf(t, matrix) {\n        const { tempPoint: temp } = P$5;\n        copy$7(temp, t);\n        toInnerPoint$2(matrix, temp, temp);\n        return temp;\n    },\n    tempToOuterOf(t, matrix) {\n        const { tempPoint: temp } = P$5;\n        copy$7(temp, t);\n        toOuterPoint$3(matrix, temp, temp);\n        return temp;\n    },\n    tempToInnerRadiusPointOf(t, matrix) {\n        const { tempRadiusPoint: temp } = P$5;\n        copy$7(temp, t);\n        P$5.toInnerRadiusPointOf(t, matrix, temp);\n        return temp;\n    },\n    toInnerRadiusPointOf(t, matrix, to) {\n        to || (to = t);\n        toInnerPoint$2(matrix, t, to);\n        to.radiusX = Math.abs(t.radiusX / matrix.scaleX);\n        to.radiusY = Math.abs(t.radiusY / matrix.scaleY);\n    },\n    toInnerOf(t, matrix, to) {\n        toInnerPoint$2(matrix, t, to);\n    },\n    toOuterOf(t, matrix, to) {\n        toOuterPoint$3(matrix, t, to);\n    },\n    getCenter(t, to) {\n        return { x: t.x + (to.x - t.x) / 2, y: t.y + (to.y - t.y) / 2 };\n    },\n    getCenterX(x1, x2) {\n        return x1 + (x2 - x1) / 2;\n    },\n    getCenterY(y1, y2) {\n        return y1 + (y2 - y1) / 2;\n    },\n    getDistance(t, point) {\n        return getDistanceFrom(t.x, t.y, point.x, point.y);\n    },\n    getDistanceFrom(x1, y1, x2, y2) {\n        const x = abs$2(x2 - x1);\n        const y = abs$2(y2 - y1);\n        return sqrt$2(x * x + y * y);\n    },\n    getMinDistanceFrom(x1, y1, x2, y2, x3, y3) {\n        return min$1(getDistanceFrom(x1, y1, x2, y2), getDistanceFrom(x2, y2, x3, y3));\n    },\n    getAngle(t, to) {\n        return getAtan2(t, to) / OneRadian;\n    },\n    getRotation(t, origin, to, toOrigin) {\n        if (!toOrigin)\n            toOrigin = origin;\n        return P$5.getRadianFrom(t.x, t.y, origin.x, origin.y, to.x, to.y, toOrigin.x, toOrigin.y) / OneRadian;\n    },\n    getRadianFrom(fromX, fromY, originX, originY, toX, toY, toOriginX, toOriginY) {\n        if (toOriginX === undefined)\n            toOriginX = originX, toOriginY = originY;\n        let fromAngle = atan2$2(fromY - originY, fromX - originX);\n        let toAngle = atan2$2(toY - toOriginY, toX - toOriginX);\n        const radian = toAngle - fromAngle;\n        return radian < -PI$1 ? radian + PI2 : radian;\n    },\n    getAtan2(t, to) {\n        return atan2$2(to.y - t.y, to.x - t.x);\n    },\n    getDistancePoint(t, to, distance, changeTo) {\n        const r = getAtan2(t, to);\n        to = changeTo ? to : {};\n        to.x = t.x + cos$2(r) * distance;\n        to.y = t.y + sin$2(r) * distance;\n        return to;\n    },\n    toNumberPoints(originPoints) {\n        let points = originPoints;\n        if (typeof originPoints[0] === 'object')\n            points = [], originPoints.forEach(p => points.push(p.x, p.y));\n        return points;\n    },\n    reset(t) {\n        P$5.reset(t);\n    }\n};\nconst P$5 = PointHelper;\nconst { getDistanceFrom, copy: copy$7, getAtan2 } = P$5;\n\nclass Point {\n    constructor(x, y) {\n        this.set(x, y);\n    }\n    set(x, y) {\n        typeof x === 'object' ? PointHelper.copy(this, x) : PointHelper.set(this, x, y);\n        return this;\n    }\n    get() {\n        const { x, y } = this;\n        return { x, y };\n    }\n    clone() {\n        return new Point(this);\n    }\n    move(x, y) {\n        PointHelper.move(this, x, y);\n        return this;\n    }\n    scale(scaleX, scaleY) {\n        PointHelper.scale(this, scaleX, scaleY);\n        return this;\n    }\n    scaleOf(origin, scaleX, scaleY) {\n        PointHelper.scaleOf(this, origin, scaleX, scaleY);\n        return this;\n    }\n    rotate(rotation, origin) {\n        PointHelper.rotate(this, rotation, origin);\n        return this;\n    }\n    rotateOf(origin, rotation) {\n        PointHelper.rotate(this, rotation, origin);\n        return this;\n    }\n    getRotation(origin, to, toOrigin) {\n        return PointHelper.getRotation(this, origin, to, toOrigin);\n    }\n    toInnerOf(matrix, to) {\n        PointHelper.toInnerOf(this, matrix, to);\n        return this;\n    }\n    toOuterOf(matrix, to) {\n        PointHelper.toOuterOf(this, matrix, to);\n        return this;\n    }\n    getCenter(to) {\n        return new Point(PointHelper.getCenter(this, to));\n    }\n    getDistance(to) {\n        return PointHelper.getDistance(this, to);\n    }\n    getDistancePoint(to, distance, changeTo) {\n        return new Point(PointHelper.getDistancePoint(this, to, distance, changeTo));\n    }\n    getAngle(to) {\n        return PointHelper.getAngle(this, to);\n    }\n    getAtan2(to) {\n        return PointHelper.getAtan2(this, to);\n    }\n    reset() {\n        PointHelper.reset(this);\n        return this;\n    }\n}\nconst tempPoint$2 = new Point();\n\nclass Matrix {\n    constructor(a, b, c, d, e, f) {\n        this.set(a, b, c, d, e, f);\n    }\n    set(a, b, c, d, e, f) {\n        typeof a === 'object' ? MatrixHelper.copy(this, a) : MatrixHelper.set(this, a, b, c, d, e, f);\n        return this;\n    }\n    setWith(dataWithScale) {\n        MatrixHelper.copy(this, dataWithScale);\n        this.scaleX = dataWithScale.scaleX;\n        this.scaleY = dataWithScale.scaleY;\n        return this;\n    }\n    get() {\n        const { a, b, c, d, e, f } = this;\n        return { a, b, c, d, e, f };\n    }\n    clone() {\n        return new Matrix(this);\n    }\n    translate(x, y) {\n        MatrixHelper.translate(this, x, y);\n        return this;\n    }\n    translateInner(x, y) {\n        MatrixHelper.translateInner(this, x, y);\n        return this;\n    }\n    scale(x, y) {\n        MatrixHelper.scale(this, x, y);\n        return this;\n    }\n    scaleWith(x, y) {\n        MatrixHelper.scale(this, x, y);\n        this.scaleX *= x;\n        this.scaleY *= y || x;\n        return this;\n    }\n    scaleOfOuter(origin, x, y) {\n        MatrixHelper.scaleOfOuter(this, origin, x, y);\n        return this;\n    }\n    scaleOfInner(origin, x, y) {\n        MatrixHelper.scaleOfInner(this, origin, x, y);\n        return this;\n    }\n    rotate(angle) {\n        MatrixHelper.rotate(this, angle);\n        return this;\n    }\n    rotateOfOuter(origin, angle) {\n        MatrixHelper.rotateOfOuter(this, origin, angle);\n        return this;\n    }\n    rotateOfInner(origin, angle) {\n        MatrixHelper.rotateOfInner(this, origin, angle);\n        return this;\n    }\n    skew(x, y) {\n        MatrixHelper.skew(this, x, y);\n        return this;\n    }\n    skewOfOuter(origin, x, y) {\n        MatrixHelper.skewOfOuter(this, origin, x, y);\n        return this;\n    }\n    skewOfInner(origin, x, y) {\n        MatrixHelper.skewOfInner(this, origin, x, y);\n        return this;\n    }\n    multiply(child) {\n        MatrixHelper.multiply(this, child);\n        return this;\n    }\n    multiplyParent(parent) {\n        MatrixHelper.multiplyParent(this, parent);\n        return this;\n    }\n    divide(child) {\n        MatrixHelper.divide(this, child);\n        return this;\n    }\n    divideParent(parent) {\n        MatrixHelper.divideParent(this, parent);\n        return this;\n    }\n    invert() {\n        MatrixHelper.invert(this);\n        return this;\n    }\n    invertWith() {\n        MatrixHelper.invert(this);\n        this.scaleX = 1 / this.scaleX;\n        this.scaleY = 1 / this.scaleY;\n        return this;\n    }\n    toOuterPoint(inner, to, distance) {\n        MatrixHelper.toOuterPoint(this, inner, to, distance);\n    }\n    toInnerPoint(outer, to, distance) {\n        MatrixHelper.toInnerPoint(this, outer, to, distance);\n    }\n    setLayout(data, origin, around) {\n        MatrixHelper.setLayout(this, data, origin, around);\n        return this;\n    }\n    getLayout(origin, around, firstSkewY) {\n        return MatrixHelper.getLayout(this, origin, around, firstSkewY);\n    }\n    withScale(scaleX, scaleY) {\n        return MatrixHelper.withScale(this, scaleX, scaleY);\n    }\n    reset() {\n        MatrixHelper.reset(this);\n    }\n}\nconst tempMatrix = new Matrix();\n\nconst TwoPointBoundsHelper = {\n    tempPointBounds: {},\n    setPoint(t, minX, minY) {\n        t.minX = t.maxX = minX;\n        t.minY = t.maxY = minY;\n    },\n    addPoint(t, x, y) {\n        t.minX = x < t.minX ? x : t.minX;\n        t.minY = y < t.minY ? y : t.minY;\n        t.maxX = x > t.maxX ? x : t.maxX;\n        t.maxY = y > t.maxY ? y : t.maxY;\n    },\n    addBounds(t, x, y, width, height) {\n        addPoint$3(t, x, y);\n        addPoint$3(t, x + width, y + height);\n    },\n    copy(t, pb) {\n        t.minX = pb.minX;\n        t.minY = pb.minY;\n        t.maxX = pb.maxX;\n        t.maxY = pb.maxY;\n    },\n    addPointBounds(t, pb) {\n        t.minX = pb.minX < t.minX ? pb.minX : t.minX;\n        t.minY = pb.minY < t.minY ? pb.minY : t.minY;\n        t.maxX = pb.maxX > t.maxX ? pb.maxX : t.maxX;\n        t.maxY = pb.maxY > t.maxY ? pb.maxY : t.maxY;\n    },\n    toBounds(t, setBounds) {\n        setBounds.x = t.minX;\n        setBounds.y = t.minY;\n        setBounds.width = t.maxX - t.minX;\n        setBounds.height = t.maxY - t.minY;\n    }\n};\nconst { addPoint: addPoint$3 } = TwoPointBoundsHelper;\n\nconst { tempPointBounds: tempPointBounds$1, setPoint: setPoint$2, addPoint: addPoint$2, toBounds: toBounds$2 } = TwoPointBoundsHelper;\nconst { toOuterPoint: toOuterPoint$2 } = MatrixHelper;\nconst { float, fourNumber } = MathHelper;\nconst { floor, ceil: ceil$1 } = Math;\nlet right, bottom, boundsRight, boundsBottom;\nconst point = {};\nconst toPoint$2 = {};\nconst BoundsHelper = {\n    tempBounds: {},\n    set(t, x = 0, y = 0, width = 0, height = 0) {\n        t.x = x;\n        t.y = y;\n        t.width = width;\n        t.height = height;\n    },\n    copy(t, bounds) {\n        t.x = bounds.x;\n        t.y = bounds.y;\n        t.width = bounds.width;\n        t.height = bounds.height;\n    },\n    copyAndSpread(t, bounds, spread, isShrink, side) {\n        const { x, y, width, height } = bounds;\n        if (spread instanceof Array) {\n            const four = fourNumber(spread);\n            isShrink\n                ? B.set(t, x + four[3], y + four[0], width - four[1] - four[3], height - four[2] - four[0])\n                : B.set(t, x - four[3], y - four[0], width + four[1] + four[3], height + four[2] + four[0]);\n        }\n        else {\n            if (isShrink)\n                spread = -spread;\n            B.set(t, x - spread, y - spread, width + spread * 2, height + spread * 2);\n        }\n        if (side) {\n            if (side === 'width')\n                t.y = y, t.height = height;\n            else\n                t.x = x, t.width = width;\n        }\n    },\n    minX(t) { return t.width > 0 ? t.x : t.x + t.width; },\n    minY(t) { return t.height > 0 ? t.y : t.y + t.height; },\n    maxX(t) { return t.width > 0 ? t.x + t.width : t.x; },\n    maxY(t) { return t.height > 0 ? t.y + t.height : t.y; },\n    move(t, x, y) {\n        t.x += x;\n        t.y += y;\n    },\n    getByMove(t, x, y) {\n        t = Object.assign({}, t);\n        B.move(t, x, y);\n        return t;\n    },\n    toOffsetOutBounds(t, to, parent) {\n        if (!to) {\n            to = t;\n        }\n        else {\n            copy$6(to, t);\n        }\n        if (parent) {\n            to.offsetX = -(B.maxX(parent) - t.x);\n            to.offsetY = -(B.maxY(parent) - t.y);\n        }\n        else {\n            to.offsetX = t.x + t.width;\n            to.offsetY = t.y + t.height;\n        }\n        B.move(to, -to.offsetX, -to.offsetY);\n    },\n    scale(t, scaleX, scaleY = scaleX) {\n        PointHelper.scale(t, scaleX, scaleY);\n        t.width *= scaleX;\n        t.height *= scaleY;\n    },\n    scaleOf(t, origin, scaleX, scaleY = scaleX) {\n        PointHelper.scaleOf(t, origin, scaleX, scaleY);\n        t.width *= scaleX;\n        t.height *= scaleY;\n    },\n    tempToOuterOf(t, matrix) {\n        B.copy(B.tempBounds, t);\n        B.toOuterOf(B.tempBounds, matrix);\n        return B.tempBounds;\n    },\n    getOuterOf(t, matrix) {\n        t = Object.assign({}, t);\n        B.toOuterOf(t, matrix);\n        return t;\n    },\n    toOuterOf(t, matrix, to) {\n        to || (to = t);\n        if (matrix.b === 0 && matrix.c === 0) {\n            const { a, d } = matrix;\n            if (a > 0) {\n                to.width = t.width * a;\n                to.x = matrix.e + t.x * a;\n            }\n            else {\n                to.width = t.width * -a;\n                to.x = matrix.e + t.x * a - to.width;\n            }\n            if (d > 0) {\n                to.height = t.height * d;\n                to.y = matrix.f + t.y * d;\n            }\n            else {\n                to.height = t.height * -d;\n                to.y = matrix.f + t.y * d - to.height;\n            }\n        }\n        else {\n            point.x = t.x;\n            point.y = t.y;\n            toOuterPoint$2(matrix, point, toPoint$2);\n            setPoint$2(tempPointBounds$1, toPoint$2.x, toPoint$2.y);\n            point.x = t.x + t.width;\n            toOuterPoint$2(matrix, point, toPoint$2);\n            addPoint$2(tempPointBounds$1, toPoint$2.x, toPoint$2.y);\n            point.y = t.y + t.height;\n            toOuterPoint$2(matrix, point, toPoint$2);\n            addPoint$2(tempPointBounds$1, toPoint$2.x, toPoint$2.y);\n            point.x = t.x;\n            toOuterPoint$2(matrix, point, toPoint$2);\n            addPoint$2(tempPointBounds$1, toPoint$2.x, toPoint$2.y);\n            toBounds$2(tempPointBounds$1, to);\n        }\n    },\n    toInnerOf(t, matrix, to) {\n        to || (to = t);\n        B.move(to, -matrix.e, -matrix.f);\n        B.scale(to, 1 / matrix.a, 1 / matrix.d);\n    },\n    getFitMatrix(t, put, baseScale = 1) {\n        const scale = Math.min(baseScale, Math.min(t.width / put.width, t.height / put.height));\n        return new Matrix(scale, 0, 0, scale, -put.x * scale, -put.y * scale);\n    },\n    getSpread(t, spread, side) {\n        const n = {};\n        B.copyAndSpread(n, t, spread, false, side);\n        return n;\n    },\n    spread(t, spread, side) {\n        B.copyAndSpread(t, t, spread, false, side);\n    },\n    shrink(t, shrink, side) {\n        B.copyAndSpread(t, t, shrink, true, side);\n    },\n    ceil(t) {\n        const { x, y } = t;\n        t.x = floor(t.x);\n        t.y = floor(t.y);\n        t.width = x > t.x ? ceil$1(t.width + x - t.x) : ceil$1(t.width);\n        t.height = y > t.y ? ceil$1(t.height + y - t.y) : ceil$1(t.height);\n    },\n    unsign(t) {\n        if (t.width < 0) {\n            t.x += t.width;\n            t.width = -t.width;\n        }\n        if (t.height < 0) {\n            t.y += t.height;\n            t.height = -t.height;\n        }\n    },\n    float(t, maxLength) {\n        t.x = float(t.x, maxLength);\n        t.y = float(t.y, maxLength);\n        t.width = float(t.width, maxLength);\n        t.height = float(t.height, maxLength);\n    },\n    add(t, bounds, isPoint) {\n        right = t.x + t.width;\n        bottom = t.y + t.height;\n        boundsRight = bounds.x;\n        boundsBottom = bounds.y;\n        if (!isPoint) {\n            boundsRight += bounds.width;\n            boundsBottom += bounds.height;\n        }\n        right = right > boundsRight ? right : boundsRight;\n        bottom = bottom > boundsBottom ? bottom : boundsBottom;\n        t.x = t.x < bounds.x ? t.x : bounds.x;\n        t.y = t.y < bounds.y ? t.y : bounds.y;\n        t.width = right - t.x;\n        t.height = bottom - t.y;\n    },\n    addList(t, list) {\n        B.setListWithFn(t, list, undefined, true);\n    },\n    setList(t, list, addMode = false) {\n        B.setListWithFn(t, list, undefined, addMode);\n    },\n    addListWithFn(t, list, boundsDataFn) {\n        B.setListWithFn(t, list, boundsDataFn, true);\n    },\n    setListWithFn(t, list, boundsDataFn, addMode = false) {\n        let bounds, first = true;\n        for (let i = 0, len = list.length; i < len; i++) {\n            bounds = boundsDataFn ? boundsDataFn(list[i]) : list[i];\n            if (bounds && (bounds.width || bounds.height)) {\n                if (first) {\n                    first = false;\n                    if (!addMode)\n                        copy$6(t, bounds);\n                }\n                else {\n                    add(t, bounds);\n                }\n            }\n        }\n        if (first)\n            B.reset(t);\n    },\n    setPoints(t, points) {\n        points.forEach((point, index) => index === 0 ? setPoint$2(tempPointBounds$1, point.x, point.y) : addPoint$2(tempPointBounds$1, point.x, point.y));\n        toBounds$2(tempPointBounds$1, t);\n    },\n    setPoint(t, point) {\n        B.set(t, point.x, point.y);\n    },\n    addPoint(t, point) {\n        add(t, point, true);\n    },\n    getPoints(t) {\n        const { x, y, width, height } = t;\n        return [\n            { x, y },\n            { x: x + width, y },\n            { x: x + width, y: y + height },\n            { x, y: y + height }\n        ];\n    },\n    hitRadiusPoint(t, point, pointMatrix) {\n        if (pointMatrix)\n            point = PointHelper.tempToInnerRadiusPointOf(point, pointMatrix);\n        return (point.x >= t.x - point.radiusX && point.x <= t.x + t.width + point.radiusX) && (point.y >= t.y - point.radiusY && point.y <= t.y + t.height + point.radiusY);\n    },\n    hitPoint(t, point, pointMatrix) {\n        if (pointMatrix)\n            point = PointHelper.tempToInnerOf(point, pointMatrix);\n        return (point.x >= t.x && point.x <= t.x + t.width) && (point.y >= t.y && point.y <= t.y + t.height);\n    },\n    hit(t, other, otherMatrix) {\n        if (otherMatrix)\n            other = B.tempToOuterOf(other, otherMatrix);\n        return !((t.y + t.height < other.y) || (other.y + other.height < t.y) || (t.x + t.width < other.x) || (other.x + other.width < t.x));\n    },\n    includes(t, other, otherMatrix) {\n        if (otherMatrix)\n            other = B.tempToOuterOf(other, otherMatrix);\n        return (t.x <= other.x) && (t.y <= other.y) && (t.x + t.width >= other.x + other.width) && (t.y + t.height >= other.y + other.height);\n    },\n    getIntersectData(t, other, otherMatrix) {\n        if (otherMatrix)\n            other = B.tempToOuterOf(other, otherMatrix);\n        if (!B.hit(t, other))\n            return getBoundsData();\n        let { x, y, width, height } = other;\n        right = x + width;\n        bottom = y + height;\n        boundsRight = t.x + t.width;\n        boundsBottom = t.y + t.height;\n        x = x > t.x ? x : t.x;\n        y = y > t.y ? y : t.y;\n        right = right < boundsRight ? right : boundsRight;\n        bottom = bottom < boundsBottom ? bottom : boundsBottom;\n        width = right - x;\n        height = bottom - y;\n        return { x, y, width, height };\n    },\n    intersect(t, other, otherMatrix) {\n        B.copy(t, B.getIntersectData(t, other, otherMatrix));\n    },\n    isSame(t, bounds) {\n        return t.x === bounds.x && t.y === bounds.y && t.width === bounds.width && t.height === bounds.height;\n    },\n    isEmpty(t) {\n        return t.x === 0 && t.y === 0 && t.width === 0 && t.height === 0;\n    },\n    reset(t) {\n        B.set(t);\n    }\n};\nconst B = BoundsHelper;\nconst { add, copy: copy$6 } = B;\n\nclass Bounds {\n    get minX() { return BoundsHelper.minX(this); }\n    get minY() { return BoundsHelper.minY(this); }\n    get maxX() { return BoundsHelper.maxX(this); }\n    get maxY() { return BoundsHelper.maxY(this); }\n    constructor(x, y, width, height) {\n        this.set(x, y, width, height);\n    }\n    set(x, y, width, height) {\n        typeof x === 'object' ? BoundsHelper.copy(this, x) : BoundsHelper.set(this, x, y, width, height);\n        return this;\n    }\n    get() {\n        const { x, y, width, height } = this;\n        return { x, y, width, height };\n    }\n    clone() {\n        return new Bounds(this);\n    }\n    move(x, y) {\n        BoundsHelper.move(this, x, y);\n        return this;\n    }\n    scale(scaleX, scaleY) {\n        BoundsHelper.scale(this, scaleX, scaleY);\n        return this;\n    }\n    scaleOf(origin, scaleX, scaleY) {\n        BoundsHelper.scaleOf(this, origin, scaleX, scaleY);\n        return this;\n    }\n    toOuterOf(matrix, to) {\n        BoundsHelper.toOuterOf(this, matrix, to);\n        return this;\n    }\n    toInnerOf(matrix, to) {\n        BoundsHelper.toInnerOf(this, matrix, to);\n        return this;\n    }\n    getFitMatrix(put, baseScale) {\n        return BoundsHelper.getFitMatrix(this, put, baseScale);\n    }\n    spread(fourNumber, side) {\n        BoundsHelper.spread(this, fourNumber, side);\n        return this;\n    }\n    shrink(fourNumber, side) {\n        BoundsHelper.shrink(this, fourNumber, side);\n        return this;\n    }\n    ceil() {\n        BoundsHelper.ceil(this);\n        return this;\n    }\n    unsign() {\n        BoundsHelper.unsign(this);\n        return this;\n    }\n    float(maxLength) {\n        BoundsHelper.float(this, maxLength);\n        return this;\n    }\n    add(bounds) {\n        BoundsHelper.add(this, bounds);\n        return this;\n    }\n    addList(boundsList) {\n        BoundsHelper.setList(this, boundsList, true);\n        return this;\n    }\n    setList(boundsList) {\n        BoundsHelper.setList(this, boundsList);\n        return this;\n    }\n    addListWithFn(list, boundsDataFn) {\n        BoundsHelper.setListWithFn(this, list, boundsDataFn, true);\n        return this;\n    }\n    setListWithFn(list, boundsDataFn) {\n        BoundsHelper.setListWithFn(this, list, boundsDataFn);\n        return this;\n    }\n    setPoint(point) {\n        BoundsHelper.setPoint(this, point);\n        return this;\n    }\n    setPoints(points) {\n        BoundsHelper.setPoints(this, points);\n        return this;\n    }\n    addPoint(point) {\n        BoundsHelper.addPoint(this, point);\n        return this;\n    }\n    getPoints() {\n        return BoundsHelper.getPoints(this);\n    }\n    hitPoint(point, pointMatrix) {\n        return BoundsHelper.hitPoint(this, point, pointMatrix);\n    }\n    hitRadiusPoint(point, pointMatrix) {\n        return BoundsHelper.hitRadiusPoint(this, point, pointMatrix);\n    }\n    hit(bounds, boundsMatrix) {\n        return BoundsHelper.hit(this, bounds, boundsMatrix);\n    }\n    includes(bounds, boundsMatrix) {\n        return BoundsHelper.includes(this, bounds, boundsMatrix);\n    }\n    intersect(bounds, boundsMatrix) {\n        BoundsHelper.intersect(this, bounds, boundsMatrix);\n        return this;\n    }\n    getIntersect(bounds, boundsMatrix) {\n        return new Bounds(BoundsHelper.getIntersectData(this, bounds, boundsMatrix));\n    }\n    isSame(bounds) {\n        return BoundsHelper.isSame(this, bounds);\n    }\n    isEmpty() {\n        return BoundsHelper.isEmpty(this);\n    }\n    reset() {\n        BoundsHelper.reset(this);\n    }\n}\nconst tempBounds = new Bounds();\n\nclass AutoBounds {\n    constructor(top, right, bottom, left, width, height) {\n        typeof top === 'object' ? this.copy(top) : this.set(top, right, bottom, left, width, height);\n    }\n    set(top = 0, right = 0, bottom = 0, left = 0, width = 0, height = 0) {\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n    }\n    copy(autoSize) {\n        const { top, right, bottom, left, width, height } = autoSize;\n        this.set(top, right, bottom, left, width, height);\n    }\n    getBoundsFrom(parent) {\n        const { top, right, bottom, left, width, height } = this;\n        return new Bounds(left, top, width ? width : parent.width - left - right, height ? height : parent.height - top - bottom);\n    }\n}\n\nvar Direction4;\n(function (Direction4) {\n    Direction4[Direction4[\"top\"] = 0] = \"top\";\n    Direction4[Direction4[\"right\"] = 1] = \"right\";\n    Direction4[Direction4[\"bottom\"] = 2] = \"bottom\";\n    Direction4[Direction4[\"left\"] = 3] = \"left\";\n})(Direction4 || (Direction4 = {}));\nvar Direction9;\n(function (Direction9) {\n    Direction9[Direction9[\"topLeft\"] = 0] = \"topLeft\";\n    Direction9[Direction9[\"top\"] = 1] = \"top\";\n    Direction9[Direction9[\"topRight\"] = 2] = \"topRight\";\n    Direction9[Direction9[\"right\"] = 3] = \"right\";\n    Direction9[Direction9[\"bottomRight\"] = 4] = \"bottomRight\";\n    Direction9[Direction9[\"bottom\"] = 5] = \"bottom\";\n    Direction9[Direction9[\"bottomLeft\"] = 6] = \"bottomLeft\";\n    Direction9[Direction9[\"left\"] = 7] = \"left\";\n    Direction9[Direction9[\"center\"] = 8] = \"center\";\n    Direction9[Direction9[\"top-left\"] = 0] = \"top-left\";\n    Direction9[Direction9[\"top-right\"] = 2] = \"top-right\";\n    Direction9[Direction9[\"bottom-right\"] = 4] = \"bottom-right\";\n    Direction9[Direction9[\"bottom-left\"] = 6] = \"bottom-left\";\n})(Direction9 || (Direction9 = {}));\n\nconst directionData = [\n    { x: 0, y: 0 },\n    { x: 0.5, y: 0 },\n    { x: 1, y: 0 },\n    { x: 1, y: 0.5 },\n    { x: 1, y: 1 },\n    { x: 0.5, y: 1 },\n    { x: 0, y: 1 },\n    { x: 0, y: 0.5 },\n    { x: 0.5, y: 0.5 }\n];\ndirectionData.forEach(item => item.type = 'percent');\nconst AroundHelper = {\n    directionData,\n    tempPoint: {},\n    get,\n    toPoint(around, bounds, to, onlySize, pointBounds) {\n        const point = get(around);\n        to.x = point.x;\n        to.y = point.y;\n        if (point.type === 'percent') {\n            to.x *= bounds.width;\n            to.y *= bounds.height;\n            if (pointBounds) {\n                to.x -= pointBounds.x;\n                to.y -= pointBounds.y;\n                if (point.x)\n                    to.x -= (point.x === 1) ? pointBounds.width : (point.x === 0.5 ? point.x * pointBounds.width : 0);\n                if (point.y)\n                    to.y -= (point.y === 1) ? pointBounds.height : (point.y === 0.5 ? point.y * pointBounds.height : 0);\n            }\n        }\n        if (!onlySize) {\n            to.x += bounds.x;\n            to.y += bounds.y;\n        }\n    }\n};\nfunction get(around) {\n    return typeof around === 'string' ? directionData[Direction9[around]] : around;\n}\n\nconst { toPoint: toPoint$1 } = AroundHelper;\nconst AlignHelper = {\n    toPoint(align, contentBounds, bounds, to, onlySize) {\n        toPoint$1(align, bounds, to, onlySize, contentBounds);\n    }\n};\n\nconst StringNumberMap = {\n    '0': 1,\n    '1': 1,\n    '2': 1,\n    '3': 1,\n    '4': 1,\n    '5': 1,\n    '6': 1,\n    '7': 1,\n    '8': 1,\n    '9': 1,\n    '.': 1,\n    'e': 1,\n    'E': 1\n};\n\nclass Debug {\n    constructor(name) {\n        this.repeatMap = {};\n        this.name = name;\n    }\n    static get(name) {\n        return new Debug(name);\n    }\n    static set filter(name) {\n        this.filterList = getNameList(name);\n    }\n    static set exclude(name) {\n        this.excludeList = getNameList(name);\n    }\n    log(...messages) {\n        if (D$4.enable) {\n            if (D$4.filterList.length && D$4.filterList.every(name => name !== this.name))\n                return;\n            if (D$4.excludeList.length && D$4.excludeList.some(name => name === this.name))\n                return;\n            console.log('%c' + this.name, 'color:#21ae62', ...messages);\n        }\n    }\n    tip(...messages) {\n        if (D$4.enable)\n            this.warn(...messages);\n    }\n    warn(...messages) {\n        if (D$4.showWarn)\n            console.warn(this.name, ...messages);\n    }\n    repeat(name, ...messages) {\n        if (!this.repeatMap[name]) {\n            this.warn('repeat:' + name, ...messages);\n            this.repeatMap[name] = true;\n        }\n    }\n    error(...messages) {\n        try {\n            throw new Error();\n        }\n        catch (e) {\n            console.error(this.name, ...messages, e);\n        }\n    }\n}\nDebug.filterList = [];\nDebug.excludeList = [];\nDebug.showWarn = true;\nfunction getNameList(name) {\n    if (!name)\n        name = [];\n    else if (typeof name === 'string')\n        name = [name];\n    return name;\n}\nconst D$4 = Debug;\n\nconst debug$8 = Debug.get('RunTime');\nconst Run = {\n    currentId: 0,\n    currentName: '',\n    idMap: {},\n    nameMap: {},\n    nameToIdMap: {},\n    start(name, microsecond) {\n        const id = IncrementId.create(IncrementId.RUNTIME);\n        R.currentId = R.idMap[id] = microsecond ? performance.now() : Date.now();\n        R.currentName = R.nameMap[id] = name;\n        R.nameToIdMap[name] = id;\n        return id;\n    },\n    end(id, microsecond) {\n        const time = R.idMap[id], name = R.nameMap[id];\n        const duration = microsecond ? (performance.now() - time) / 1000 : Date.now() - time;\n        R.idMap[id] = R.nameMap[id] = R.nameToIdMap[name] = undefined;\n        debug$8.log(name, duration, 'ms');\n    },\n    endOfName(name, microsecond) {\n        const id = R.nameToIdMap[name];\n        if (id !== undefined)\n            R.end(id, microsecond);\n    }\n};\nconst R = Run;\n\nfunction needPlugin(name) {\n    console.error('need plugin: @leafer-in/' + name);\n}\n\nconst debug$7 = Debug.get('UICreator');\nconst UICreator = {\n    list: {},\n    register(UI) {\n        const { __tag: tag } = UI.prototype;\n        if (list$1[tag])\n            debug$7.repeat(tag);\n        list$1[tag] = UI;\n    },\n    get(tag, data, x, y, width, height) {\n        if (!list$1[tag])\n            debug$7.error('not register ' + tag);\n        const ui = new list$1[tag](data);\n        if (x !== undefined) {\n            ui.x = x;\n            if (y)\n                ui.y = y;\n            if (width)\n                ui.width = width;\n            if (height)\n                ui.height = height;\n        }\n        return ui;\n    }\n};\nconst { list: list$1 } = UICreator;\n\nconst debug$6 = Debug.get('EventCreator');\nconst EventCreator = {\n    nameList: {},\n    register(Event) {\n        let name;\n        Object.keys(Event).forEach(key => {\n            name = Event[key];\n            if (typeof name === 'string')\n                nameList[name] && debug$6.repeat(name), nameList[name] = Event;\n        });\n    },\n    changeName(oldName, newName) {\n        const Event = nameList[oldName];\n        if (Event) {\n            const constName = Object.keys(Event).find(key => Event[key] === oldName);\n            if (constName) {\n                Event[constName] = newName;\n                nameList[newName] = Event;\n            }\n        }\n    },\n    has(type) {\n        return !!this.nameList[type];\n    },\n    get(type, ...params) {\n        return new nameList[type](...params);\n    }\n};\nconst { nameList } = EventCreator;\n\nclass CanvasManager {\n    constructor() {\n        this.list = [];\n    }\n    add(canvas) {\n        canvas.manager = this;\n        this.list.push(canvas);\n    }\n    get(size) {\n        let old;\n        const { list } = this;\n        for (let i = 0, len = list.length; i < len; i++) {\n            old = list[i];\n            if (old.recycled && old.isSameSize(size)) {\n                old.recycled = false;\n                old.manager || (old.manager = this);\n                return old;\n            }\n        }\n        const canvas = Creator.canvas(size);\n        this.add(canvas);\n        return canvas;\n    }\n    recycle(old) {\n        old.recycled = true;\n    }\n    clearRecycled() {\n        let canvas;\n        const filter = [];\n        for (let i = 0, len = this.list.length; i < len; i++) {\n            canvas = this.list[i];\n            canvas.recycled ? canvas.destroy() : filter.push(canvas);\n        }\n        this.list = filter;\n    }\n    clear() {\n        this.list.forEach(item => { item.destroy(); });\n        this.list.length = 0;\n    }\n    destroy() {\n        this.clear();\n    }\n}\n\nconst DataHelper = {\n    default(t, defaultData) {\n        assign(defaultData, t);\n        assign(t, defaultData);\n        return t;\n    },\n    assign(t, merge) {\n        let value;\n        Object.keys(merge).forEach(key => {\n            var _a;\n            value = merge[key];\n            if ((value === null || value === void 0 ? void 0 : value.constructor) === Object) {\n                (((_a = t[key]) === null || _a === void 0 ? void 0 : _a.constructor) === Object) ? assign(t[key], merge[key]) : t[key] = merge[key];\n            }\n            else {\n                t[key] = merge[key];\n            }\n        });\n    },\n    copyAttrs(t, from, include) {\n        include.forEach(key => {\n            if (from[key] !== undefined)\n                t[key] = from[key];\n        });\n        return t;\n    },\n    clone(data) {\n        return JSON.parse(JSON.stringify(data));\n    },\n    toMap(list) {\n        const map = {};\n        for (let i = 0, len = list.length; i < len; i++)\n            map[list[i]] = true;\n        return map;\n    }\n};\nconst { assign } = DataHelper;\n\nclass LeafData {\n    get __useNaturalRatio() { return true; }\n    get __isLinePath() {\n        const { path } = this;\n        return path && path.length === 6 && path[0] === 1;\n    }\n    get __blendMode() {\n        if (this.eraser && this.eraser !== 'path')\n            return 'destination-out';\n        const { blendMode } = this;\n        return blendMode === 'pass-through' ? null : blendMode;\n    }\n    constructor(leaf) {\n        this.__leaf = leaf;\n    }\n    __get(name) {\n        if (this.__input) {\n            const value = this.__input[name];\n            if (value !== undefined)\n                return value;\n        }\n        return this[name];\n    }\n    __getData() {\n        const data = { tag: this.__leaf.tag }, { __input } = this;\n        let inputValue;\n        for (let key in this) {\n            if (key[0] !== '_') {\n                inputValue = __input ? __input[key] : undefined;\n                data[key] = (inputValue === undefined) ? this[key] : inputValue;\n            }\n        }\n        return data;\n    }\n    __setInput(name, value) {\n        this.__input || (this.__input = {});\n        this.__input[name] = value;\n    }\n    __getInput(name) {\n        if (this.__input) {\n            const value = this.__input[name];\n            if (value !== undefined)\n                return value;\n        }\n        if (name === 'path' && !this.__pathInputed)\n            return;\n        return this['_' + name];\n    }\n    __removeInput(name) {\n        if (this.__input && this.__input[name] !== undefined)\n            this.__input[name] = undefined;\n    }\n    __getInputData(names, options) {\n        const data = {};\n        if (names) {\n            if (names instanceof Array) {\n                for (let name of names)\n                    data[name] = this.__getInput(name);\n            }\n            else {\n                for (let name in names)\n                    data[name] = this.__getInput(name);\n            }\n        }\n        else {\n            let value, inputValue, { __input } = this;\n            data.tag = this.__leaf.tag;\n            for (let key in this) {\n                if (key[0] !== '_') {\n                    value = this['_' + key];\n                    if (value !== undefined) {\n                        if (key === 'path' && !this.__pathInputed)\n                            continue;\n                        inputValue = __input ? __input[key] : undefined;\n                        data[key] = (inputValue === undefined) ? value : inputValue;\n                    }\n                }\n            }\n        }\n        if (options) {\n            if (options.matrix) {\n                const { a, b, c, d, e, f } = this.__leaf.__localMatrix;\n                data.matrix = { a, b, c, d, e, f };\n            }\n        }\n        return data;\n    }\n    __setMiddle(name, value) {\n        this.__middle || (this.__middle = {});\n        this.__middle[name] = value;\n    }\n    __getMiddle(name) {\n        return this.__middle && this.__middle[name];\n    }\n    __checkSingle() {\n        const t = this;\n        if (t.blendMode === 'pass-through') {\n            const leaf = this.__leaf;\n            if ((t.opacity < 1 && (leaf.isBranch || t.__hasMultiPaint)) || leaf.__hasEraser || t.eraser) {\n                t.__single = true;\n            }\n            else if (t.__single) {\n                t.__single = false;\n            }\n        }\n        else {\n            t.__single = true;\n        }\n    }\n    __removeNaturalSize() {\n        this.__naturalWidth = this.__naturalHeight = undefined;\n    }\n    destroy() {\n        this.__input = this.__middle = null;\n    }\n}\n\nvar Answer;\n(function (Answer) {\n    Answer[Answer[\"No\"] = 0] = \"No\";\n    Answer[Answer[\"Yes\"] = 1] = \"Yes\";\n    Answer[Answer[\"NoAndSkip\"] = 2] = \"NoAndSkip\";\n    Answer[Answer[\"YesAndSkip\"] = 3] = \"YesAndSkip\";\n})(Answer || (Answer = {}));\nconst emptyData = {};\nfunction isNull(value) {\n    return value === undefined || value === null;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction contextAttr(realName) {\n    return (target, key) => {\n        if (!realName)\n            realName = key;\n        Object.defineProperty(target, key, {\n            get() { return this.context[realName]; },\n            set(value) { this.context[realName] = value; }\n        });\n    };\n}\nconst contextMethodNameList = [];\nfunction contextMethod() {\n    return (_target, key) => {\n        contextMethodNameList.push(key);\n    };\n}\nconst emptyArray = [];\nclass Canvas {\n    set blendMode(value) {\n        if (value === 'normal')\n            value = 'source-over';\n        this.context.globalCompositeOperation = value;\n    }\n    get blendMode() {\n        return this.context.globalCompositeOperation;\n    }\n    set dashPattern(value) {\n        this.context.setLineDash(value || emptyArray);\n    }\n    get dashPattern() {\n        return this.context.getLineDash();\n    }\n    __bindContext() {\n        let method;\n        contextMethodNameList.forEach(name => {\n            method = this.context[name];\n            if (method)\n                this[name] = method.bind(this.context);\n        });\n        this.textBaseline = \"alphabetic\";\n    }\n    setTransform(_a, _b, _c, _d, _e, _f) { }\n    resetTransform() { }\n    getTransform() { return void 0; }\n    save() { }\n    restore() { }\n    transform(a, b, c, d, e, f) {\n        if (typeof a === 'object') {\n            this.context.transform(a.a, a.b, a.c, a.d, a.e, a.f);\n        }\n        else {\n            this.context.transform(a, b, c, d, e, f);\n        }\n    }\n    translate(_x, _y) { }\n    scale(_x, _y) { }\n    rotate(_angle) { }\n    fill(_path2d, _rule) { }\n    stroke(_path2d) { }\n    clip(_path2d, _rule) { }\n    fillRect(_x, _y, _width, _height) { }\n    strokeRect(_x, _y, _width, _height) { }\n    clearRect(_x, _y, _width, _height) { }\n    drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh) {\n        switch (arguments.length) {\n            case 9:\n                if (sx < 0) {\n                    const d = (-sx / sw) * dw;\n                    sw += sx;\n                    sx = 0;\n                    dx += d;\n                    dw -= d;\n                }\n                if (sy < 0) {\n                    const d = (-sy / sh) * dh;\n                    sh += sy;\n                    sy = 0;\n                    dy += d;\n                    dh -= d;\n                }\n                this.context.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n                break;\n            case 5:\n                this.context.drawImage(image, sx, sy, sw, sh);\n                break;\n            case 3:\n                this.context.drawImage(image, sx, sy);\n        }\n    }\n    beginPath() { }\n    moveTo(_x, _y) { }\n    lineTo(_x, _y) { }\n    bezierCurveTo(_cp1x, _cp1y, _cp2x, _cp2y, _x, _y) { }\n    quadraticCurveTo(_cpx, _cpy, _x, _y) { }\n    closePath() { }\n    arc(_x, _y, _radius, _startAngle, _endAngle, _anticlockwise) { }\n    arcTo(_x1, _y1, _x2, _y2, _radius) { }\n    ellipse(_x, _y, _radiusX, _radiusY, _rotation, _startAngle, _endAngle, _anticlockwise) { }\n    rect(_x, _y, _width, _height) { }\n    roundRect(_x, _y, _width, _height, _radius) { }\n    createConicGradient(_startAngle, _x, _y) { return void 0; }\n    createLinearGradient(_x0, _y0, _x1, _y1) { return void 0; }\n    createPattern(_image, _repetition) { return void 0; }\n    createRadialGradient(_x0, _y0, _r0, _x1, _y1, _r1) { return void 0; }\n    fillText(_text, _x, _y, _maxWidth) { }\n    measureText(_text) { return void 0; }\n    strokeText(_text, _x, _y, _maxWidth) { }\n    destroy() {\n        this.context = null;\n    }\n}\n__decorate([\n    contextAttr('imageSmoothingEnabled')\n], Canvas.prototype, \"smooth\", void 0);\n__decorate([\n    contextAttr('imageSmoothingQuality')\n], Canvas.prototype, \"smoothLevel\", void 0);\n__decorate([\n    contextAttr('globalAlpha')\n], Canvas.prototype, \"opacity\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"fillStyle\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"strokeStyle\", void 0);\n__decorate([\n    contextAttr('lineWidth')\n], Canvas.prototype, \"strokeWidth\", void 0);\n__decorate([\n    contextAttr('lineCap')\n], Canvas.prototype, \"strokeCap\", void 0);\n__decorate([\n    contextAttr('lineJoin')\n], Canvas.prototype, \"strokeJoin\", void 0);\n__decorate([\n    contextAttr('lineDashOffset')\n], Canvas.prototype, \"dashOffset\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"miterLimit\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"shadowBlur\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"shadowColor\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"shadowOffsetX\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"shadowOffsetY\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"filter\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"font\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"fontKerning\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"fontStretch\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"fontVariantCaps\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"textAlign\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"textBaseline\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"textRendering\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"wordSpacing\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"letterSpacing\", void 0);\n__decorate([\n    contextAttr()\n], Canvas.prototype, \"direction\", void 0);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"setTransform\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"resetTransform\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"getTransform\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"save\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"restore\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"translate\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"scale\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"rotate\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"fill\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"stroke\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"clip\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"fillRect\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"strokeRect\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"clearRect\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"beginPath\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"moveTo\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"lineTo\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"bezierCurveTo\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"quadraticCurveTo\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"closePath\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"arc\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"arcTo\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"ellipse\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"rect\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"roundRect\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"createConicGradient\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"createLinearGradient\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"createPattern\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"createRadialGradient\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"fillText\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"measureText\", null);\n__decorate([\n    contextMethod()\n], Canvas.prototype, \"strokeText\", null);\n\nconst { copy: copy$5 } = MatrixHelper;\nconst minSize = { width: 1, height: 1, pixelRatio: 1 };\nconst canvasSizeAttrs = ['width', 'height', 'pixelRatio'];\nclass LeaferCanvasBase extends Canvas {\n    get width() { return this.size.width; }\n    get height() { return this.size.height; }\n    get pixelRatio() { return this.size.pixelRatio; }\n    get pixelWidth() { return this.width * this.pixelRatio; }\n    get pixelHeight() { return this.height * this.pixelRatio; }\n    get allowBackgroundColor() { return this.view && this.parentView; }\n    constructor(config, manager) {\n        super();\n        this.size = {};\n        this.worldTransform = {};\n        if (!config)\n            config = minSize;\n        if (!config.pixelRatio)\n            config.pixelRatio = Platform.devicePixelRatio;\n        this.manager = manager;\n        this.innerId = IncrementId.create(IncrementId.CNAVAS);\n        const { width, height, pixelRatio } = config;\n        this.autoLayout = !width || !height;\n        this.size.pixelRatio = pixelRatio;\n        this.config = config;\n        this.init();\n    }\n    init() { }\n    __createContext() {\n        const { view } = this;\n        const { contextSettings } = this.config;\n        this.context = contextSettings ? view.getContext('2d', contextSettings) : view.getContext('2d');\n        this.__bindContext();\n    }\n    export(_filename, _options) { return undefined; }\n    toBlob(_type, _quality) { return undefined; }\n    toDataURL(_type, _quality) { return undefined; }\n    saveAs(_filename, _quality) { return undefined; }\n    resize(size) {\n        if (this.isSameSize(size))\n            return;\n        let takeCanvas;\n        if (this.context && !this.unreal && this.width) {\n            takeCanvas = this.getSameCanvas();\n            takeCanvas.copyWorld(this);\n        }\n        const s = this.size;\n        DataHelper.copyAttrs(s, size, canvasSizeAttrs);\n        canvasSizeAttrs.forEach(key => s[key] || (s[key] = 1));\n        this.bounds = new Bounds(0, 0, this.width, this.height);\n        if (this.context && !this.unreal) {\n            this.updateViewSize();\n            this.smooth = this.config.smooth;\n        }\n        this.updateClientBounds();\n        if (this.context && !this.unreal && takeCanvas) {\n            this.clearWorld(takeCanvas.bounds);\n            this.copyWorld(takeCanvas);\n            takeCanvas.recycle();\n        }\n    }\n    updateViewSize() { }\n    updateClientBounds() { }\n    getClientBounds(update) {\n        if (update)\n            this.updateClientBounds();\n        return this.clientBounds || this.bounds;\n    }\n    startAutoLayout(_autoBounds, _listener) { }\n    stopAutoLayout() { }\n    setCursor(_cursor) { }\n    setWorld(matrix, parentMatrix) {\n        const { pixelRatio } = this;\n        const w = this.worldTransform;\n        if (parentMatrix) {\n            const { a, b, c, d, e, f } = parentMatrix;\n            this.setTransform(w.a = ((matrix.a * a) + (matrix.b * c)) * pixelRatio, w.b = ((matrix.a * b) + (matrix.b * d)) * pixelRatio, w.c = ((matrix.c * a) + (matrix.d * c)) * pixelRatio, w.d = ((matrix.c * b) + (matrix.d * d)) * pixelRatio, w.e = (((matrix.e * a) + (matrix.f * c) + e)) * pixelRatio, w.f = (((matrix.e * b) + (matrix.f * d) + f)) * pixelRatio);\n        }\n        else {\n            this.setTransform(w.a = matrix.a * pixelRatio, w.b = matrix.b * pixelRatio, w.c = matrix.c * pixelRatio, w.d = matrix.d * pixelRatio, w.e = matrix.e * pixelRatio, w.f = matrix.f * pixelRatio);\n        }\n    }\n    useWorldTransform(worldTransform) {\n        if (worldTransform)\n            this.worldTransform = worldTransform;\n        const w = this.worldTransform;\n        if (w)\n            this.setTransform(w.a, w.b, w.c, w.d, w.e, w.f);\n    }\n    setStroke(color, strokeWidth, options) {\n        if (strokeWidth)\n            this.strokeWidth = strokeWidth;\n        if (color)\n            this.strokeStyle = color;\n        if (options)\n            this.setStrokeOptions(options);\n    }\n    setStrokeOptions(options) {\n        this.strokeCap = options.strokeCap === 'none' ? 'butt' : options.strokeCap;\n        this.strokeJoin = options.strokeJoin;\n        this.dashPattern = options.dashPattern;\n        this.dashOffset = options.dashOffset;\n        this.miterLimit = options.miterLimit;\n    }\n    saveBlendMode(blendMode) {\n        this.savedBlendMode = this.blendMode;\n        this.blendMode = blendMode;\n    }\n    restoreBlendMode() {\n        this.blendMode = this.savedBlendMode;\n    }\n    hitFill(_point, _fillRule) { return true; }\n    hitStroke(_point, _strokeWidth) { return true; }\n    hitPixel(_radiusPoint, _offset, _scale = 1) { return true; }\n    setWorldShadow(x, y, blur, color) {\n        const { pixelRatio } = this;\n        this.shadowOffsetX = x * pixelRatio;\n        this.shadowOffsetY = y * pixelRatio;\n        this.shadowBlur = blur * pixelRatio;\n        this.shadowColor = color || 'black';\n    }\n    setWorldBlur(blur) {\n        const { pixelRatio } = this;\n        this.filter = `blur(${blur * pixelRatio}px)`;\n    }\n    copyWorld(canvas, from, to, blendMode) {\n        if (blendMode)\n            this.blendMode = blendMode;\n        if (from) {\n            const { pixelRatio } = this;\n            if (!to)\n                to = from;\n            this.drawImage(canvas.view, from.x * pixelRatio, from.y * pixelRatio, from.width * pixelRatio, from.height * pixelRatio, to.x * pixelRatio, to.y * pixelRatio, to.width * pixelRatio, to.height * pixelRatio);\n        }\n        else {\n            this.drawImage(canvas.view, 0, 0);\n        }\n        if (blendMode)\n            this.blendMode = 'source-over';\n    }\n    copyWorldToInner(canvas, fromWorld, toInnerBounds, blendMode) {\n        if (blendMode)\n            this.blendMode = blendMode;\n        if (fromWorld.b || fromWorld.c) {\n            this.save();\n            this.resetTransform();\n            this.copyWorld(canvas, fromWorld, BoundsHelper.tempToOuterOf(toInnerBounds, fromWorld));\n            this.restore();\n        }\n        else {\n            const { pixelRatio } = this;\n            this.drawImage(canvas.view, fromWorld.x * pixelRatio, fromWorld.y * pixelRatio, fromWorld.width * pixelRatio, fromWorld.height * pixelRatio, toInnerBounds.x, toInnerBounds.y, toInnerBounds.width, toInnerBounds.height);\n        }\n        if (blendMode)\n            this.blendMode = 'source-over';\n    }\n    copyWorldByReset(canvas, from, to, blendMode, onlyResetTransform) {\n        this.resetTransform();\n        this.copyWorld(canvas, from, to, blendMode);\n        if (!onlyResetTransform)\n            this.useWorldTransform();\n    }\n    useGrayscaleAlpha(bounds) {\n        this.setTempBounds(bounds, true, true);\n        let alpha, pixel;\n        const { context } = this, imageData = context.getImageData(tempBounds.x, tempBounds.y, tempBounds.width, tempBounds.height), { data } = imageData;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n            pixel = data[i] * 0.299 + data[i + 1] * 0.587 + data[i + 2] * 0.114;\n            if (alpha = data[i + 3])\n                data[i + 3] = alpha === 255 ? pixel : alpha * (pixel / 255);\n        }\n        context.putImageData(imageData, tempBounds.x, tempBounds.y);\n    }\n    useMask(maskCanvas, fromBounds, toBounds) {\n        this.copyWorld(maskCanvas, fromBounds, toBounds, 'destination-in');\n    }\n    useEraser(eraserCanvas, fromBounds, toBounds) {\n        this.copyWorld(eraserCanvas, fromBounds, toBounds, 'destination-out');\n    }\n    fillWorld(bounds, color, blendMode) {\n        if (blendMode)\n            this.blendMode = blendMode;\n        this.fillStyle = color;\n        this.setTempBounds(bounds);\n        this.fillRect(tempBounds.x, tempBounds.y, tempBounds.width, tempBounds.height);\n        if (blendMode)\n            this.blendMode = 'source-over';\n    }\n    strokeWorld(bounds, color, blendMode) {\n        if (blendMode)\n            this.blendMode = blendMode;\n        this.strokeStyle = color;\n        this.setTempBounds(bounds);\n        this.strokeRect(tempBounds.x, tempBounds.y, tempBounds.width, tempBounds.height);\n        if (blendMode)\n            this.blendMode = 'source-over';\n    }\n    clearWorld(bounds, ceilPixel) {\n        this.setTempBounds(bounds, ceilPixel);\n        this.clearRect(tempBounds.x, tempBounds.y, tempBounds.width, tempBounds.height);\n    }\n    clipWorld(bounds, ceilPixel) {\n        this.beginPath();\n        this.setTempBounds(bounds, ceilPixel);\n        this.rect(tempBounds.x, tempBounds.y, tempBounds.width, tempBounds.height);\n        this.clip();\n    }\n    clear() {\n        const { pixelRatio } = this;\n        this.clearRect(0, 0, this.width * pixelRatio + 2, this.height * pixelRatio + 2);\n    }\n    setTempBounds(bounds, ceil, intersect) {\n        tempBounds.set(bounds);\n        if (intersect)\n            tempBounds.intersect(this.bounds);\n        tempBounds.scale(this.pixelRatio);\n        if (ceil)\n            tempBounds.ceil();\n    }\n    isSameSize(size) {\n        return this.width === size.width && this.height === size.height && this.pixelRatio === size.pixelRatio;\n    }\n    getSameCanvas(useSameWorldTransform, useSameSmooth) {\n        const canvas = this.manager ? this.manager.get(this.size) : Creator.canvas(Object.assign({}, this.size));\n        canvas.save();\n        if (useSameWorldTransform)\n            copy$5(canvas.worldTransform, this.worldTransform), canvas.useWorldTransform();\n        if (useSameSmooth)\n            canvas.smooth = this.smooth;\n        return canvas;\n    }\n    recycle(clearBounds) {\n        if (!this.recycled) {\n            this.restore();\n            clearBounds ? this.clearWorld(clearBounds, true) : this.clear();\n            this.manager ? this.manager.recycle(this) : this.destroy();\n        }\n    }\n    updateRender(_bounds) { }\n    unrealCanvas() { }\n    destroy() {\n        this.manager = this.view = this.parentView = null;\n    }\n}\n\nconst PathHelper = {\n    creator: {},\n    parse(_pathString, _curveMode) { return undefined; },\n    convertToCanvasData(_old, _curveMode) { return undefined; }\n};\n\nconst CanvasCommandOnlyMap = {\n    N: 21,\n    D: 22,\n    X: 23,\n    G: 24,\n    F: 25,\n    O: 26,\n    P: 27,\n    U: 28\n};\nconst PathCommandMap = Object.assign({ M: 1, m: 10, L: 2, l: 20, H: 3, h: 30, V: 4, v: 40, C: 5, c: 50, S: 6, s: 60, Q: 7, q: 70, T: 8, t: 80, A: 9, a: 90, Z: 11, z: 11, R: 12 }, CanvasCommandOnlyMap);\nconst PathCommandLengthMap = {\n    M: 3,\n    m: 3,\n    L: 3,\n    l: 3,\n    H: 2,\n    h: 2,\n    V: 2,\n    v: 2,\n    C: 7,\n    c: 7,\n    S: 5,\n    s: 5,\n    Q: 5,\n    q: 5,\n    T: 3,\n    t: 3,\n    A: 8,\n    a: 8,\n    Z: 1,\n    z: 1,\n    N: 5,\n    D: 9,\n    X: 6,\n    G: 9,\n    F: 5,\n    O: 7,\n    P: 4,\n    U: 6\n};\nconst NeedConvertToCanvasCommandMap = {\n    m: 10,\n    l: 20,\n    H: 3,\n    h: 30,\n    V: 4,\n    v: 40,\n    c: 50,\n    S: 6,\n    s: 60,\n    q: 70,\n    T: 8,\n    t: 80,\n    A: 9,\n    a: 90,\n};\nconst NeedConvertToCurveCommandMap = Object.assign(Object.assign({}, NeedConvertToCanvasCommandMap), CanvasCommandOnlyMap);\nconst P$4 = PathCommandMap;\nconst PathNumberCommandMap = {};\nfor (let key in P$4) {\n    PathNumberCommandMap[P$4[key]] = key;\n}\nconst PathNumberCommandLengthMap = {};\nfor (let key in P$4) {\n    PathNumberCommandLengthMap[P$4[key]] = PathCommandLengthMap[key];\n}\n\nconst RectHelper = {\n    drawRoundRect(drawer, x, y, width, height, cornerRadius) {\n        const data = MathHelper.fourNumber(cornerRadius, Math.min(width / 2, height / 2));\n        const right = x + width;\n        const bottom = y + height;\n        data[0] ? drawer.moveTo(x + data[0], y) : drawer.moveTo(x, y);\n        data[1] ? drawer.arcTo(right, y, right, bottom, data[1]) : drawer.lineTo(right, y);\n        data[2] ? drawer.arcTo(right, bottom, x, bottom, data[2]) : drawer.lineTo(right, bottom);\n        data[3] ? drawer.arcTo(x, bottom, x, y, data[3]) : drawer.lineTo(x, bottom);\n        data[0] ? drawer.arcTo(x, y, right, y, data[0]) : drawer.lineTo(x, y);\n    }\n};\n\nconst { sin: sin$1, cos: cos$1, atan2: atan2$1, ceil, abs: abs$1, PI, sqrt: sqrt$1, pow } = Math;\nconst { setPoint: setPoint$1, addPoint: addPoint$1 } = TwoPointBoundsHelper;\nconst { set, toNumberPoints } = PointHelper;\nconst { M: M$5, L: L$6, C: C$5, Q: Q$4, Z: Z$5 } = PathCommandMap;\nconst tempPoint$1 = {};\nconst BezierHelper = {\n    points(data, originPoints, curve, close) {\n        let points = toNumberPoints(originPoints);\n        data.push(M$5, points[0], points[1]);\n        if (curve && points.length > 5) {\n            let aX, aY, bX, bY, cX, cY, c1X, c1Y, c2X, c2Y;\n            let ba, cb, d, len = points.length;\n            const t = curve === true ? 0.5 : curve;\n            if (close) {\n                points = [points[len - 2], points[len - 1], ...points, points[0], points[1], points[2], points[3]];\n                len = points.length;\n            }\n            for (let i = 2; i < len - 2; i += 2) {\n                aX = points[i - 2];\n                aY = points[i - 1];\n                bX = points[i];\n                bY = points[i + 1];\n                cX = points[i + 2];\n                cY = points[i + 3];\n                ba = sqrt$1(pow(bX - aX, 2) + pow(bY - aY, 2));\n                cb = sqrt$1(pow(cX - bX, 2) + pow(cY - bY, 2));\n                d = ba + cb;\n                ba = (t * ba) / d;\n                cb = (t * cb) / d;\n                cX -= aX;\n                cY -= aY;\n                c1X = bX - ba * cX;\n                c1Y = bY - ba * cY;\n                if (i === 2) {\n                    if (!close)\n                        data.push(Q$4, c1X, c1Y, bX, bY);\n                }\n                else {\n                    data.push(C$5, c2X, c2Y, c1X, c1Y, bX, bY);\n                }\n                c2X = bX + cb * cX;\n                c2Y = bY + cb * cY;\n            }\n            if (!close)\n                data.push(Q$4, c2X, c2Y, points[len - 2], points[len - 1]);\n        }\n        else {\n            for (let i = 2, len = points.length; i < len; i += 2) {\n                data.push(L$6, points[i], points[i + 1]);\n            }\n        }\n        if (close)\n            data.push(Z$5);\n    },\n    rect(data, x, y, width, height) {\n        PathHelper.creator.path = data;\n        PathHelper.creator.moveTo(x, y).lineTo(x + width, y).lineTo(x + width, y + height).lineTo(x, y + height).lineTo(x, y);\n    },\n    roundRect(data, x, y, width, height, radius) {\n        PathHelper.creator.path = [];\n        RectHelper.drawRoundRect(PathHelper.creator, x, y, width, height, radius);\n        data.push(...PathHelper.convertToCanvasData(PathHelper.creator.path, true));\n    },\n    arcTo(data, fromX, fromY, x1, y1, toX, toY, radius, setPointBounds, setEndPoint, setStartPoint) {\n        const BAx = x1 - fromX;\n        const BAy = y1 - fromY;\n        const CBx = toX - x1;\n        const CBy = toY - y1;\n        let startRadian = atan2$1(BAy, BAx);\n        let endRadian = atan2$1(CBy, CBx);\n        let totalRadian = endRadian - startRadian;\n        if (totalRadian < 0)\n            totalRadian += PI2;\n        if (totalRadian === PI || (abs$1(BAx + BAy) < 1.e-12) || (abs$1(CBx + CBy) < 1.e-12)) {\n            if (data)\n                data.push(L$6, x1, y1);\n            if (setPointBounds) {\n                setPoint$1(setPointBounds, fromX, fromY);\n                addPoint$1(setPointBounds, x1, y1);\n            }\n            if (setStartPoint)\n                set(setStartPoint, fromX, fromY);\n            if (setEndPoint)\n                set(setEndPoint, x1, y1);\n            return;\n        }\n        const anticlockwise = BAx * CBy - CBx * BAy < 0;\n        const sign = anticlockwise ? -1 : 1;\n        const c = radius / cos$1(totalRadian / 2);\n        const centerX = x1 + c * cos$1(startRadian + totalRadian / 2 + PI_2 * sign);\n        const centerY = y1 + c * sin$1(startRadian + totalRadian / 2 + PI_2 * sign);\n        startRadian -= PI_2 * sign;\n        endRadian -= PI_2 * sign;\n        return ellipse$5(data, centerX, centerY, radius, radius, 0, startRadian / OneRadian, endRadian / OneRadian, anticlockwise, setPointBounds, setEndPoint, setStartPoint);\n    },\n    arc(data, x, y, radius, startAngle, endAngle, anticlockwise, setPointBounds, setEndPoint, setStartPoint) {\n        return ellipse$5(data, x, y, radius, radius, 0, startAngle, endAngle, anticlockwise, setPointBounds, setEndPoint, setStartPoint);\n    },\n    ellipse(data, cx, cy, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise, setPointBounds, setEndPoint, setStartPoint) {\n        const rotationRadian = rotation * OneRadian;\n        const rotationSin = sin$1(rotationRadian);\n        const rotationCos = cos$1(rotationRadian);\n        let startRadian = startAngle * OneRadian;\n        let endRadian = endAngle * OneRadian;\n        if (startRadian > PI)\n            startRadian -= PI2;\n        if (endRadian < 0)\n            endRadian += PI2;\n        let totalRadian = endRadian - startRadian;\n        if (totalRadian < 0)\n            totalRadian += PI2;\n        else if (totalRadian > PI2)\n            totalRadian -= PI2;\n        if (anticlockwise)\n            totalRadian -= PI2;\n        const parts = ceil(abs$1(totalRadian / PI_2));\n        const partRadian = totalRadian / parts;\n        const partRadian4Sin = sin$1(partRadian / 4);\n        const control = 8 / 3 * partRadian4Sin * partRadian4Sin / sin$1(partRadian / 2);\n        endRadian = startRadian + partRadian;\n        let startCos = cos$1(startRadian);\n        let startSin = sin$1(startRadian);\n        let endCos, endSin;\n        let x, y, x1, y1, x2, y2;\n        let startX = x = rotationCos * radiusX * startCos - rotationSin * radiusY * startSin;\n        let startY = y = rotationSin * radiusX * startCos + rotationCos * radiusY * startSin;\n        let fromX = cx + x, fromY = cy + y;\n        if (data)\n            data.push(data.length ? L$6 : M$5, fromX, fromY);\n        if (setPointBounds)\n            setPoint$1(setPointBounds, fromX, fromY);\n        if (setStartPoint)\n            set(setStartPoint, fromX, fromY);\n        for (let i = 0; i < parts; i++) {\n            endCos = cos$1(endRadian);\n            endSin = sin$1(endRadian);\n            x = rotationCos * radiusX * endCos - rotationSin * radiusY * endSin;\n            y = rotationSin * radiusX * endCos + rotationCos * radiusY * endSin;\n            x1 = cx + startX - control * (rotationCos * radiusX * startSin + rotationSin * radiusY * startCos);\n            y1 = cy + startY - control * (rotationSin * radiusX * startSin - rotationCos * radiusY * startCos);\n            x2 = cx + x + control * (rotationCos * radiusX * endSin + rotationSin * radiusY * endCos);\n            y2 = cy + y + control * (rotationSin * radiusX * endSin - rotationCos * radiusY * endCos);\n            if (data)\n                data.push(C$5, x1, y1, x2, y2, cx + x, cy + y);\n            if (setPointBounds)\n                toTwoPointBounds$1(cx + startX, cy + startY, x1, y1, x2, y2, cx + x, cy + y, setPointBounds, true);\n            startX = x;\n            startY = y;\n            startCos = endCos;\n            startSin = endSin;\n            startRadian = endRadian;\n            endRadian += partRadian;\n        }\n        if (setEndPoint)\n            set(setEndPoint, cx + x, cy + y);\n    },\n    quadraticCurveTo(data, fromX, fromY, x1, y1, toX, toY) {\n        data.push(C$5, (fromX + 2 * x1) / 3, (fromY + 2 * y1) / 3, (toX + 2 * x1) / 3, (toY + 2 * y1) / 3, toX, toY);\n    },\n    toTwoPointBoundsByQuadraticCurve(fromX, fromY, x1, y1, toX, toY, pointBounds, addMode) {\n        toTwoPointBounds$1(fromX, fromY, (fromX + 2 * x1) / 3, (fromY + 2 * y1) / 3, (toX + 2 * x1) / 3, (toY + 2 * y1) / 3, toX, toY, pointBounds, addMode);\n    },\n    toTwoPointBounds(fromX, fromY, x1, y1, x2, y2, toX, toY, pointBounds, addMode) {\n        const tList = [];\n        let a, b, c, t, t1, t2, v, sqrtV;\n        let f = fromX, z1 = x1, z2 = x2, o = toX;\n        for (let i = 0; i < 2; ++i) {\n            if (i == 1) {\n                f = fromY, z1 = y1, z2 = y2, o = toY;\n            }\n            a = -3 * f + 9 * z1 - 9 * z2 + 3 * o;\n            b = 6 * f - 12 * z1 + 6 * z2;\n            c = 3 * z1 - 3 * f;\n            if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12)\n                    continue;\n                t = -c / b;\n                if (0 < t && t < 1)\n                    tList.push(t);\n                continue;\n            }\n            v = b * b - 4 * c * a;\n            sqrtV = Math.sqrt(v);\n            if (v < 0)\n                continue;\n            t1 = (-b + sqrtV) / (2 * a);\n            if (0 < t1 && t1 < 1)\n                tList.push(t1);\n            t2 = (-b - sqrtV) / (2 * a);\n            if (0 < t2 && t2 < 1)\n                tList.push(t2);\n        }\n        addMode ? addPoint$1(pointBounds, fromX, fromY) : setPoint$1(pointBounds, fromX, fromY);\n        addPoint$1(pointBounds, toX, toY);\n        for (let i = 0, len = tList.length; i < len; i++) {\n            getPointAndSet(tList[i], fromX, fromY, x1, y1, x2, y2, toX, toY, tempPoint$1);\n            addPoint$1(pointBounds, tempPoint$1.x, tempPoint$1.y);\n        }\n    },\n    getPointAndSet(t, fromX, fromY, x1, y1, x2, y2, toX, toY, setPoint) {\n        const o = 1 - t, a = o * o * o, b = 3 * o * o * t, c = 3 * o * t * t, d = t * t * t;\n        setPoint.x = a * fromX + b * x1 + c * x2 + d * toX;\n        setPoint.y = a * fromY + b * y1 + c * y2 + d * toY;\n    },\n    getPoint(t, fromX, fromY, x1, y1, x2, y2, toX, toY) {\n        const point = {};\n        getPointAndSet(t, fromX, fromY, x1, y1, x2, y2, toX, toY, point);\n        return point;\n    }\n};\nconst { getPointAndSet, toTwoPointBounds: toTwoPointBounds$1, ellipse: ellipse$5 } = BezierHelper;\n\nconst { sin, cos, sqrt, atan2 } = Math;\nconst { ellipse: ellipse$4 } = BezierHelper;\nconst EllipseHelper = {\n    ellipticalArc(data, fromX, fromY, radiusX, radiusY, rotation, largeFlag, sweepFlag, toX, toY, curveMode) {\n        const halfX = (toX - fromX) / 2;\n        const halfY = (toY - fromY) / 2;\n        const rotationRadian = rotation * OneRadian;\n        const rotationSin = sin(rotationRadian);\n        const rotationCos = cos(rotationRadian);\n        const px = -rotationCos * halfX - rotationSin * halfY;\n        const py = -rotationCos * halfY + rotationSin * halfX;\n        const rxSquare = radiusX * radiusX;\n        const rySquare = radiusY * radiusY;\n        const pySquare = py * py;\n        const pxSquare = px * px;\n        const a = rxSquare * rySquare - rxSquare * pySquare - rySquare * pxSquare;\n        let s = 0;\n        if (a < 0) {\n            const t = sqrt(1 - a / (rxSquare * rySquare));\n            radiusX *= t;\n            radiusY *= t;\n        }\n        else {\n            s = (largeFlag === sweepFlag ? -1 : 1) * sqrt(a / (rxSquare * pySquare + rySquare * pxSquare));\n        }\n        const cx = s * radiusX * py / radiusY;\n        const cy = -s * radiusY * px / radiusX;\n        const startRadian = atan2((py - cy) / radiusY, (px - cx) / radiusX);\n        const endRadian = atan2((-py - cy) / radiusY, (-px - cx) / radiusX);\n        let totalRadian = endRadian - startRadian;\n        if (sweepFlag === 0 && totalRadian > 0) {\n            totalRadian -= PI2;\n        }\n        else if (sweepFlag === 1 && totalRadian < 0) {\n            totalRadian += PI2;\n        }\n        const centerX = fromX + halfX + rotationCos * cx - rotationSin * cy;\n        const centerY = fromY + halfY + rotationSin * cx + rotationCos * cy;\n        const anticlockwise = totalRadian < 0 ? 1 : 0;\n        if (curveMode || Platform.ellipseToCurve) {\n            ellipse$4(data, centerX, centerY, radiusX, radiusY, rotation, startRadian / OneRadian, endRadian / OneRadian, anticlockwise);\n        }\n        else {\n            if (radiusX === radiusY && !rotation) {\n                data.push(PathCommandMap.O, centerX, centerY, radiusX, startRadian / OneRadian, endRadian / OneRadian, anticlockwise);\n            }\n            else {\n                data.push(PathCommandMap.G, centerX, centerY, radiusX, radiusY, rotation, startRadian / OneRadian, endRadian / OneRadian, anticlockwise);\n            }\n        }\n    }\n};\n\nconst { M: M$4, m, L: L$5, l, H, h, V, v, C: C$4, c, S, s, Q: Q$3, q, T, t, A, a, Z: Z$4, z, N: N$3, D: D$3, X: X$3, G: G$3, F: F$4, O: O$3, P: P$3, U: U$3 } = PathCommandMap;\nconst { rect: rect$1, roundRect: roundRect$2, arcTo: arcTo$3, arc: arc$3, ellipse: ellipse$3, quadraticCurveTo: quadraticCurveTo$1 } = BezierHelper;\nconst { ellipticalArc } = EllipseHelper;\nconst debug$5 = Debug.get('PathConvert');\nconst setEndPoint$1 = {};\nconst PathConvert = {\n    current: { dot: 0 },\n    stringify(data, floatLength) {\n        let i = 0, len = data.length, count, str = '', command, lastCommand;\n        while (i < len) {\n            command = data[i];\n            count = PathNumberCommandLengthMap[command];\n            if (command === lastCommand) {\n                str += ' ';\n            }\n            else {\n                str += PathNumberCommandMap[command];\n            }\n            for (let j = 1; j < count; j++) {\n                str += MathHelper.float(data[i + j], floatLength);\n                (j === count - 1) || (str += ' ');\n            }\n            lastCommand = command;\n            i += count;\n        }\n        return str;\n    },\n    parse(pathString, curveMode) {\n        let needConvert, char, lastChar, num = '';\n        const data = [];\n        const convertCommand = curveMode ? NeedConvertToCurveCommandMap : NeedConvertToCanvasCommandMap;\n        for (let i = 0, len = pathString.length; i < len; i++) {\n            char = pathString[i];\n            if (StringNumberMap[char]) {\n                if (char === '.') {\n                    if (current.dot) {\n                        pushData(data, num);\n                        num = '';\n                    }\n                    current.dot++;\n                }\n                if (num === '0' && char !== '.') {\n                    pushData(data, num);\n                    num = '';\n                }\n                num += char;\n            }\n            else if (PathCommandMap[char]) {\n                if (num) {\n                    pushData(data, num);\n                    num = '';\n                }\n                current.name = PathCommandMap[char];\n                current.length = PathCommandLengthMap[char];\n                current.index = 0;\n                pushData(data, current.name);\n                if (!needConvert && convertCommand[char])\n                    needConvert = true;\n            }\n            else {\n                if (char === '-' || char === '+') {\n                    if (lastChar === 'e' || lastChar === 'E') {\n                        num += char;\n                    }\n                    else {\n                        if (num)\n                            pushData(data, num);\n                        num = char;\n                    }\n                }\n                else {\n                    if (num) {\n                        pushData(data, num);\n                        num = '';\n                    }\n                }\n            }\n            lastChar = char;\n        }\n        if (num)\n            pushData(data, num);\n        return needConvert ? PathConvert.toCanvasData(data, curveMode) : data;\n    },\n    toCanvasData(old, curveMode) {\n        let x = 0, y = 0, x1 = 0, y1 = 0, i = 0, len = old.length, controlX, controlY, command, lastCommand, smooth;\n        const data = [];\n        while (i < len) {\n            command = old[i];\n            switch (command) {\n                case m:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                case M$4:\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    data.push(M$4, x, y);\n                    i += 3;\n                    break;\n                case h:\n                    old[i + 1] += x;\n                case H:\n                    x = old[i + 1];\n                    data.push(L$5, x, y);\n                    i += 2;\n                    break;\n                case v:\n                    old[i + 1] += y;\n                case V:\n                    y = old[i + 1];\n                    data.push(L$5, x, y);\n                    i += 2;\n                    break;\n                case l:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                case L$5:\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    data.push(L$5, x, y);\n                    i += 3;\n                    break;\n                case s:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                    old[i + 3] += x;\n                    old[i + 4] += y;\n                    command = S;\n                case S:\n                    smooth = (lastCommand === C$4) || (lastCommand === S);\n                    x1 = smooth ? (x * 2 - controlX) : old[i + 1];\n                    y1 = smooth ? (y * 2 - controlY) : old[i + 2];\n                    controlX = old[i + 1];\n                    controlY = old[i + 2];\n                    x = old[i + 3];\n                    y = old[i + 4];\n                    data.push(C$4, x1, y1, controlX, controlY, x, y);\n                    i += 5;\n                    break;\n                case c:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                    old[i + 3] += x;\n                    old[i + 4] += y;\n                    old[i + 5] += x;\n                    old[i + 6] += y;\n                    command = C$4;\n                case C$4:\n                    controlX = old[i + 3];\n                    controlY = old[i + 4];\n                    x = old[i + 5];\n                    y = old[i + 6];\n                    data.push(C$4, old[i + 1], old[i + 2], controlX, controlY, x, y);\n                    i += 7;\n                    break;\n                case t:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                    command = T;\n                case T:\n                    smooth = (lastCommand === Q$3) || (lastCommand === T);\n                    controlX = smooth ? (x * 2 - controlX) : old[i + 1];\n                    controlY = smooth ? (y * 2 - controlY) : old[i + 2];\n                    curveMode ? quadraticCurveTo$1(data, x, y, controlX, controlY, old[i + 1], old[i + 2]) : data.push(Q$3, controlX, controlY, old[i + 1], old[i + 2]);\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    i += 3;\n                    break;\n                case q:\n                    old[i + 1] += x;\n                    old[i + 2] += y;\n                    old[i + 3] += x;\n                    old[i + 4] += y;\n                    command = Q$3;\n                case Q$3:\n                    controlX = old[i + 1];\n                    controlY = old[i + 2];\n                    curveMode ? quadraticCurveTo$1(data, x, y, controlX, controlY, old[i + 3], old[i + 4]) : data.push(Q$3, controlX, controlY, old[i + 3], old[i + 4]);\n                    x = old[i + 3];\n                    y = old[i + 4];\n                    i += 5;\n                    break;\n                case a:\n                    old[i + 6] += x;\n                    old[i + 7] += y;\n                case A:\n                    ellipticalArc(data, x, y, old[i + 1], old[i + 2], old[i + 3], old[i + 4], old[i + 5], old[i + 6], old[i + 7], curveMode);\n                    x = old[i + 6];\n                    y = old[i + 7];\n                    i += 8;\n                    break;\n                case z:\n                case Z$4:\n                    data.push(Z$4);\n                    i++;\n                    break;\n                case N$3:\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    curveMode ? rect$1(data, x, y, old[i + 3], old[i + 4]) : copyData(data, old, i, 5);\n                    i += 5;\n                    break;\n                case D$3:\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    curveMode ? roundRect$2(data, x, y, old[i + 3], old[i + 4], [old[i + 5], old[i + 6], old[i + 7], old[i + 8]]) : copyData(data, old, i, 9);\n                    i += 9;\n                    break;\n                case X$3:\n                    x = old[i + 1];\n                    y = old[i + 2];\n                    curveMode ? roundRect$2(data, x, y, old[i + 3], old[i + 4], old[i + 5]) : copyData(data, old, i, 6);\n                    i += 6;\n                    break;\n                case G$3:\n                    ellipse$3(curveMode ? data : copyData(data, old, i, 9), old[i + 1], old[i + 2], old[i + 3], old[i + 4], old[i + 5], old[i + 6], old[i + 7], old[i + 8], null, setEndPoint$1);\n                    x = setEndPoint$1.x;\n                    y = setEndPoint$1.y;\n                    i += 9;\n                    break;\n                case F$4:\n                    curveMode ? ellipse$3(data, old[i + 1], old[i + 2], old[i + 3], old[i + 4], 0, 0, 360, false) : copyData(data, old, i, 5);\n                    x = old[i + 1] + old[i + 3];\n                    y = old[i + 2];\n                    i += 5;\n                    break;\n                case O$3:\n                    arc$3(curveMode ? data : copyData(data, old, i, 7), old[i + 1], old[i + 2], old[i + 3], old[i + 4], old[i + 5], old[i + 6], null, setEndPoint$1);\n                    x = setEndPoint$1.x;\n                    y = setEndPoint$1.y;\n                    i += 7;\n                    break;\n                case P$3:\n                    curveMode ? arc$3(data, old[i + 1], old[i + 2], old[i + 3], 0, 360, false) : copyData(data, old, i, 4);\n                    x = old[i + 1] + old[i + 3];\n                    y = old[i + 2];\n                    i += 4;\n                    break;\n                case U$3:\n                    arcTo$3(curveMode ? data : copyData(data, old, i, 6), x, y, old[i + 1], old[i + 2], old[i + 3], old[i + 4], old[i + 5], null, setEndPoint$1);\n                    x = setEndPoint$1.x;\n                    y = setEndPoint$1.y;\n                    i += 6;\n                    break;\n                default:\n                    debug$5.error(`command: ${command} [index:${i}]`, old);\n                    return data;\n            }\n            lastCommand = command;\n        }\n        return data;\n    },\n    objectToCanvasData(list) {\n        const data = [];\n        list.forEach(item => {\n            switch (item.name) {\n                case 'M':\n                    data.push(M$4, item.x, item.y);\n                    break;\n                case 'L':\n                    data.push(L$5, item.x, item.y);\n                    break;\n                case 'C':\n                    data.push(C$4, item.x1, item.y1, item.x2, item.y2, item.x, item.y);\n                    break;\n                case 'Q':\n                    data.push(Q$3, item.x1, item.y1, item.x, item.y);\n                    break;\n                case 'Z': data.push(Z$4);\n            }\n        });\n        return data;\n    },\n    copyData(data, old, index, count) {\n        for (let i = index, end = index + count; i < end; i++) {\n            data.push(old[i]);\n        }\n    },\n    pushData(data, strNum) {\n        if (current.index === current.length) {\n            current.index = 1;\n            data.push(current.name);\n        }\n        data.push(Number(strNum));\n        current.index++;\n        current.dot = 0;\n    }\n};\nconst { current, pushData, copyData } = PathConvert;\n\nconst { M: M$3, L: L$4, C: C$3, Q: Q$2, Z: Z$3, N: N$2, D: D$2, X: X$2, G: G$2, F: F$3, O: O$2, P: P$2, U: U$2 } = PathCommandMap;\nconst { getMinDistanceFrom, getRadianFrom } = PointHelper;\nconst { tan, min, abs } = Math;\nconst startPoint = {};\nconst PathCommandDataHelper = {\n    beginPath(data) {\n        data.length = 0;\n    },\n    moveTo(data, x, y) {\n        data.push(M$3, x, y);\n    },\n    lineTo(data, x, y) {\n        data.push(L$4, x, y);\n    },\n    bezierCurveTo(data, x1, y1, x2, y2, x, y) {\n        data.push(C$3, x1, y1, x2, y2, x, y);\n    },\n    quadraticCurveTo(data, x1, y1, x, y) {\n        data.push(Q$2, x1, y1, x, y);\n    },\n    closePath(data) {\n        data.push(Z$3);\n    },\n    rect(data, x, y, width, height) {\n        data.push(N$2, x, y, width, height);\n    },\n    roundRect(data, x, y, width, height, cornerRadius) {\n        if (typeof cornerRadius === 'number') {\n            data.push(X$2, x, y, width, height, cornerRadius);\n        }\n        else {\n            const fourCorners = MathHelper.fourNumber(cornerRadius);\n            if (fourCorners) {\n                data.push(D$2, x, y, width, height, ...fourCorners);\n            }\n            else {\n                data.push(N$2, x, y, width, height);\n            }\n        }\n    },\n    ellipse(data, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        if (rotation === undefined) {\n            data.push(F$3, x, y, radiusX, radiusY);\n        }\n        else {\n            if (startAngle === undefined)\n                startAngle = 0;\n            if (endAngle === undefined)\n                endAngle = 360;\n            data.push(G$2, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise ? 1 : 0);\n        }\n    },\n    arc(data, x, y, radius, startAngle, endAngle, anticlockwise) {\n        if (startAngle === undefined) {\n            data.push(P$2, x, y, radius);\n        }\n        else {\n            if (endAngle === undefined)\n                endAngle = 360;\n            data.push(O$2, x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0);\n        }\n    },\n    arcTo(data, x1, y1, x2, y2, radius, lastX, lastY) {\n        if (lastX !== undefined) {\n            const maxRadius = tan(getRadianFrom(lastX, lastY, x1, y1, x2, y2) / 2) * (getMinDistanceFrom(lastX, lastY, x1, y1, x2, y2) / 2);\n            data.push(U$2, x1, y1, x2, y2, min(radius, abs(maxRadius)));\n        }\n        else {\n            data.push(U$2, x1, y1, x2, y2, radius);\n        }\n    },\n    drawEllipse(data, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        BezierHelper.ellipse(null, x, y, radiusX, radiusY, rotation === undefined ? 0 : rotation, startAngle === undefined ? 0 : startAngle, endAngle === undefined ? 360 : endAngle, anticlockwise, null, null, startPoint);\n        data.push(M$3, startPoint.x, startPoint.y);\n        ellipse$2(data, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\n    },\n    drawArc(data, x, y, radius, startAngle, endAngle, anticlockwise) {\n        BezierHelper.arc(null, x, y, radius, startAngle === undefined ? 0 : startAngle, endAngle === undefined ? 360 : endAngle, anticlockwise, null, null, startPoint);\n        data.push(M$3, startPoint.x, startPoint.y);\n        arc$2(data, x, y, radius, startAngle, endAngle, anticlockwise);\n    },\n    drawPoints(data, points, curve, close) {\n        BezierHelper.points(data, points, curve, close);\n    }\n};\nconst { ellipse: ellipse$2, arc: arc$2 } = PathCommandDataHelper;\n\nconst { moveTo, lineTo, quadraticCurveTo, bezierCurveTo, closePath, beginPath, rect, roundRect: roundRect$1, ellipse: ellipse$1, arc: arc$1, arcTo: arcTo$2, drawEllipse, drawArc, drawPoints } = PathCommandDataHelper;\nclass PathCreator {\n    set path(value) { this.__path = value; }\n    get path() { return this.__path; }\n    constructor(path) {\n        this.set(path);\n    }\n    set(path) {\n        if (path) {\n            this.__path = typeof path === 'string' ? PathHelper.parse(path) : path;\n        }\n        else {\n            this.__path = [];\n        }\n        return this;\n    }\n    beginPath() {\n        beginPath(this.__path);\n        this.paint();\n        return this;\n    }\n    moveTo(x, y) {\n        moveTo(this.__path, x, y);\n        this.paint();\n        return this;\n    }\n    lineTo(x, y) {\n        lineTo(this.__path, x, y);\n        this.paint();\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        bezierCurveTo(this.__path, x1, y1, x2, y2, x, y);\n        this.paint();\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        quadraticCurveTo(this.__path, x1, y1, x, y);\n        this.paint();\n        return this;\n    }\n    closePath() {\n        closePath(this.__path);\n        this.paint();\n        return this;\n    }\n    rect(x, y, width, height) {\n        rect(this.__path, x, y, width, height);\n        this.paint();\n        return this;\n    }\n    roundRect(x, y, width, height, cornerRadius) {\n        roundRect$1(this.__path, x, y, width, height, cornerRadius);\n        this.paint();\n        return this;\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        ellipse$1(this.__path, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\n        this.paint();\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        arc$1(this.__path, x, y, radius, startAngle, endAngle, anticlockwise);\n        this.paint();\n        return this;\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        arcTo$2(this.__path, x1, y1, x2, y2, radius);\n        this.paint();\n        return this;\n    }\n    drawEllipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        drawEllipse(this.__path, x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\n        this.paint();\n        return this;\n    }\n    drawArc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        drawArc(this.__path, x, y, radius, startAngle, endAngle, anticlockwise);\n        this.paint();\n        return this;\n    }\n    drawPoints(points, curve, close) {\n        drawPoints(this.__path, points, curve, close);\n        this.paint();\n        return this;\n    }\n    clearPath() {\n        return this.beginPath();\n    }\n    paint() { }\n}\n\nconst { M: M$2, L: L$3, C: C$2, Q: Q$1, Z: Z$2, N: N$1, D: D$1, X: X$1, G: G$1, F: F$2, O: O$1, P: P$1, U: U$1 } = PathCommandMap;\nconst debug$4 = Debug.get('PathDrawer');\nconst PathDrawer = {\n    drawPathByData(drawer, data) {\n        if (!data)\n            return;\n        let command;\n        let i = 0, len = data.length;\n        while (i < len) {\n            command = data[i];\n            switch (command) {\n                case M$2:\n                    drawer.moveTo(data[i + 1], data[i + 2]);\n                    i += 3;\n                    break;\n                case L$3:\n                    drawer.lineTo(data[i + 1], data[i + 2]);\n                    i += 3;\n                    break;\n                case C$2:\n                    drawer.bezierCurveTo(data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\n                    i += 7;\n                    break;\n                case Q$1:\n                    drawer.quadraticCurveTo(data[i + 1], data[i + 2], data[i + 3], data[i + 4]);\n                    i += 5;\n                    break;\n                case Z$2:\n                    drawer.closePath();\n                    i += 1;\n                    break;\n                case N$1:\n                    drawer.rect(data[i + 1], data[i + 2], data[i + 3], data[i + 4]);\n                    i += 5;\n                    break;\n                case D$1:\n                    drawer.roundRect(data[i + 1], data[i + 2], data[i + 3], data[i + 4], [data[i + 5], data[i + 6], data[i + 7], data[i + 8]]);\n                    i += 9;\n                    break;\n                case X$1:\n                    drawer.roundRect(data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n                    i += 6;\n                    break;\n                case G$1:\n                    drawer.ellipse(data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5] * OneRadian, data[i + 6] * OneRadian, data[i + 7] * OneRadian, data[i + 8]);\n                    i += 9;\n                    break;\n                case F$2:\n                    drawer.ellipse(data[i + 1], data[i + 2], data[i + 3], data[i + 4], 0, 0, PI2, false);\n                    i += 5;\n                    break;\n                case O$1:\n                    drawer.arc(data[i + 1], data[i + 2], data[i + 3], data[i + 4] * OneRadian, data[i + 5] * OneRadian, data[i + 6]);\n                    i += 7;\n                    break;\n                case P$1:\n                    drawer.arc(data[i + 1], data[i + 2], data[i + 3], 0, PI2, false);\n                    i += 4;\n                    break;\n                case U$1:\n                    drawer.arcTo(data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n                    i += 6;\n                    break;\n                default:\n                    debug$4.error(`command: ${command} [index:${i}]`, data);\n                    return;\n            }\n        }\n    }\n};\n\nconst { M: M$1, L: L$2, C: C$1, Q, Z: Z$1, N, D, X, G, F: F$1, O, P, U } = PathCommandMap;\nconst { toTwoPointBounds, toTwoPointBoundsByQuadraticCurve, arcTo: arcTo$1, arc, ellipse } = BezierHelper;\nconst { addPointBounds, copy: copy$4, addPoint, setPoint, addBounds, toBounds: toBounds$1 } = TwoPointBoundsHelper;\nconst debug$3 = Debug.get('PathBounds');\nlet radius, radiusX, radiusY;\nconst tempPointBounds = {};\nconst setPointBounds = {};\nconst setEndPoint = {};\nconst PathBounds = {\n    toBounds(data, setBounds) {\n        PathBounds.toTwoPointBounds(data, setPointBounds);\n        toBounds$1(setPointBounds, setBounds);\n    },\n    toTwoPointBounds(data, setPointBounds) {\n        if (!data || !data.length)\n            return setPoint(setPointBounds, 0, 0);\n        let i = 0, x = 0, y = 0, x1, y1, toX, toY, command;\n        const len = data.length;\n        while (i < len) {\n            command = data[i];\n            if (i === 0) {\n                if (command === Z$1 || command === C$1 || command === Q) {\n                    setPoint(setPointBounds, x, y);\n                }\n                else {\n                    setPoint(setPointBounds, data[i + 1], data[i + 2]);\n                }\n            }\n            switch (command) {\n                case M$1:\n                case L$2:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    addPoint(setPointBounds, x, y);\n                    i += 3;\n                    break;\n                case C$1:\n                    toX = data[i + 5];\n                    toY = data[i + 6];\n                    toTwoPointBounds(x, y, data[i + 1], data[i + 2], data[i + 3], data[i + 4], toX, toY, tempPointBounds);\n                    addPointBounds(setPointBounds, tempPointBounds);\n                    x = toX;\n                    y = toY;\n                    i += 7;\n                    break;\n                case Q:\n                    x1 = data[i + 1];\n                    y1 = data[i + 2];\n                    toX = data[i + 3];\n                    toY = data[i + 4];\n                    toTwoPointBoundsByQuadraticCurve(x, y, x1, y1, toX, toY, tempPointBounds);\n                    addPointBounds(setPointBounds, tempPointBounds);\n                    x = toX;\n                    y = toY;\n                    i += 5;\n                    break;\n                case Z$1:\n                    i += 1;\n                    break;\n                case N:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    addBounds(setPointBounds, x, y, data[i + 3], data[i + 4]);\n                    i += 5;\n                    break;\n                case D:\n                case X:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    addBounds(setPointBounds, x, y, data[i + 3], data[i + 4]);\n                    i += (command === D ? 9 : 6);\n                    break;\n                case G:\n                    ellipse(null, data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], tempPointBounds, setEndPoint);\n                    i === 0 ? copy$4(setPointBounds, tempPointBounds) : addPointBounds(setPointBounds, tempPointBounds);\n                    x = setEndPoint.x;\n                    y = setEndPoint.y;\n                    i += 9;\n                    break;\n                case F$1:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    radiusX = data[i + 3];\n                    radiusY = data[i + 4];\n                    addBounds(setPointBounds, x - radiusX, y - radiusY, radiusX * 2, radiusY * 2);\n                    x += radiusX;\n                    i += 5;\n                    break;\n                case O:\n                    arc(null, data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], tempPointBounds, setEndPoint);\n                    i === 0 ? copy$4(setPointBounds, tempPointBounds) : addPointBounds(setPointBounds, tempPointBounds);\n                    x = setEndPoint.x;\n                    y = setEndPoint.y;\n                    i += 7;\n                    break;\n                case P:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    radius = data[i + 3];\n                    addBounds(setPointBounds, x - radius, y - radius, radius * 2, radius * 2);\n                    x += radius;\n                    i += 4;\n                    break;\n                case U:\n                    arcTo$1(null, x, y, data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5], tempPointBounds, setEndPoint);\n                    i === 0 ? copy$4(setPointBounds, tempPointBounds) : addPointBounds(setPointBounds, tempPointBounds);\n                    x = setEndPoint.x;\n                    y = setEndPoint.y;\n                    i += 6;\n                    break;\n                default:\n                    debug$3.error(`command: ${command} [index:${i}]`, data);\n                    return;\n            }\n        }\n    }\n};\n\nconst { M, L: L$1, C, Z } = PathCommandMap;\nconst { getCenterX, getCenterY } = PointHelper;\nconst { arcTo } = PathCommandDataHelper;\nconst PathCorner = {\n    smooth(data, cornerRadius, _cornerSmoothing) {\n        let command;\n        let i = 0, x = 0, y = 0, startX = 0, startY = 0, secondX = 0, secondY = 0, lastX = 0, lastY = 0;\n        const len = data.length;\n        const smooth = [];\n        while (i < len) {\n            command = data[i];\n            switch (command) {\n                case M:\n                    startX = lastX = data[i + 1];\n                    startY = lastY = data[i + 2];\n                    i += 3;\n                    if (data[i] === L$1) {\n                        secondX = data[i + 1];\n                        secondY = data[i + 2];\n                        smooth.push(M, getCenterX(startX, secondX), getCenterY(startY, secondY));\n                    }\n                    else {\n                        smooth.push(M, startX, startY);\n                    }\n                    break;\n                case L$1:\n                    x = data[i + 1];\n                    y = data[i + 2];\n                    i += 3;\n                    switch (data[i]) {\n                        case L$1:\n                            arcTo(smooth, x, y, data[i + 1], data[i + 2], cornerRadius, lastX, lastY);\n                            break;\n                        case Z:\n                            arcTo(smooth, x, y, startX, startY, cornerRadius, lastX, lastY);\n                            break;\n                        default:\n                            smooth.push(L$1, x, y);\n                    }\n                    lastX = x;\n                    lastY = y;\n                    break;\n                case C:\n                    smooth.push(C, data[i + 1], data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\n                    i += 7;\n                    break;\n                case Z:\n                    arcTo(smooth, startX, startY, secondX, secondY, cornerRadius, lastX, lastY);\n                    smooth.push(Z);\n                    i += 1;\n                    break;\n            }\n        }\n        if (command !== Z) {\n            smooth[1] = startX;\n            smooth[2] = startY;\n        }\n        return smooth;\n    }\n};\n\nPathHelper.creator = new PathCreator();\nPathHelper.parse = PathConvert.parse;\nPathHelper.convertToCanvasData = PathConvert.toCanvasData;\nconst pen = new PathCreator();\n\nconst { drawRoundRect } = RectHelper;\nfunction roundRect(drawer) {\n    if (drawer && !drawer.roundRect) {\n        drawer.roundRect = function (x, y, width, height, cornerRadius) {\n            drawRoundRect(this, x, y, width, height, cornerRadius);\n        };\n    }\n}\n\nfunction canvasPatch(drawer) {\n    roundRect(drawer);\n}\n\nconst FileHelper = {\n    opacityTypes: ['png', 'webp', 'svg'],\n    upperCaseTypeMap: {},\n    mineType(type) {\n        if (!type || type.startsWith('image'))\n            return type;\n        if (type === 'jpg')\n            type = 'jpeg';\n        return 'image/' + type;\n    },\n    fileType(filename) {\n        const l = filename.split('.');\n        return l[l.length - 1];\n    },\n    isOpaqueImage(filename) {\n        const type = F.fileType(filename);\n        return ['jpg', 'jpeg'].some(item => item === type);\n    },\n    getExportOptions(options) {\n        switch (typeof options) {\n            case 'object': return options;\n            case 'number': return { quality: options };\n            case 'boolean': return { blob: options };\n            default: return {};\n        }\n    }\n};\nconst F = FileHelper;\nF.opacityTypes.forEach(type => F.upperCaseTypeMap[type] = type.toUpperCase());\n\nconst debug$2 = Debug.get('TaskProcessor');\nclass TaskItem {\n    constructor(task) {\n        this.parallel = true;\n        this.time = 1;\n        this.id = IncrementId.create(IncrementId.TASK);\n        this.task = task;\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.task && !this.isComplete && this.parent.running)\n                    yield this.task();\n            }\n            catch (error) {\n                debug$2.error(error);\n            }\n        });\n    }\n    complete() {\n        this.isComplete = true;\n        this.parent = null;\n        this.task = null;\n    }\n    cancel() {\n        this.isCancel = true;\n        this.complete();\n    }\n}\n\nclass TaskProcessor {\n    get total() { return this.list.length + this.delayNumber; }\n    get finishedIndex() {\n        return this.isComplete ? 0 : this.index + this.parallelSuccessNumber;\n    }\n    get remain() {\n        return this.isComplete ? this.total : this.total - this.finishedIndex;\n    }\n    get percent() {\n        const { total } = this;\n        let totalTime = 0, runTime = 0;\n        for (let i = 0; i < total; i++) {\n            if (i <= this.finishedIndex) {\n                runTime += this.list[i].time;\n                if (i === this.finishedIndex)\n                    totalTime = runTime;\n            }\n            else {\n                totalTime += this.list[i].time;\n            }\n        }\n        return this.isComplete ? 1 : (runTime / totalTime);\n    }\n    constructor(config) {\n        this.config = { parallel: 6 };\n        this.list = [];\n        this.running = false;\n        this.isComplete = true;\n        this.index = 0;\n        this.delayNumber = 0;\n        if (config)\n            DataHelper.assign(this.config, config);\n        this.empty();\n    }\n    add(taskCallback, options) {\n        let start, parallel, time, delay;\n        const task = new TaskItem(taskCallback);\n        task.parent = this;\n        if (typeof options === 'number') {\n            delay = options;\n        }\n        else if (options) {\n            parallel = options.parallel;\n            start = options.start;\n            time = options.time;\n            delay = options.delay;\n        }\n        if (time)\n            task.time = time;\n        if (parallel === false)\n            task.parallel = false;\n        if (delay === undefined) {\n            this.push(task, start);\n        }\n        else {\n            this.delayNumber++;\n            setTimeout(() => {\n                if (this.delayNumber) {\n                    this.delayNumber--;\n                    this.push(task, start);\n                }\n            }, delay);\n        }\n        this.isComplete = false;\n        return task;\n    }\n    push(task, start) {\n        this.list.push(task);\n        if (start !== false && !this.timer) {\n            this.timer = setTimeout(() => this.start());\n        }\n    }\n    empty() {\n        this.index = 0;\n        this.parallelSuccessNumber = 0;\n        this.list = [];\n        this.parallelList = [];\n        this.delayNumber = 0;\n    }\n    start() {\n        if (!this.running) {\n            this.running = true;\n            this.isComplete = false;\n            this.run();\n        }\n    }\n    pause() {\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.running = false;\n    }\n    resume() {\n        this.start();\n    }\n    skip() {\n        this.index++;\n        this.resume();\n    }\n    stop() {\n        this.isComplete = true;\n        this.list.forEach(task => { if (!task.isComplete)\n            task.cancel(); });\n        this.pause();\n        this.empty();\n    }\n    run() {\n        if (!this.running)\n            return;\n        this.setParallelList();\n        if (this.parallelList.length > 1) {\n            this.runParallelTasks();\n        }\n        else {\n            this.remain ? this.runTask() : this.onComplete();\n        }\n    }\n    runTask() {\n        const task = this.list[this.index];\n        if (!task) {\n            this.nextTask();\n            return;\n        }\n        task.run().then(() => {\n            this.onTask(task);\n            this.index++;\n            this.nextTask();\n        }).catch(error => {\n            this.onError(error);\n        });\n    }\n    runParallelTasks() {\n        this.parallelList.forEach(task => this.runParallelTask(task));\n    }\n    runParallelTask(task) {\n        task.run().then(() => {\n            this.onTask(task);\n            this.fillParallelTask();\n        }).catch(error => {\n            this.onParallelError(error);\n        });\n    }\n    nextTask() {\n        if (this.total === this.finishedIndex) {\n            this.onComplete();\n        }\n        else {\n            this.timer = setTimeout(() => this.run());\n        }\n    }\n    setParallelList() {\n        let task;\n        this.parallelList = [];\n        this.parallelSuccessNumber = 0;\n        let end = this.index + this.config.parallel;\n        if (end > this.list.length)\n            end = this.list.length;\n        for (let i = this.index; i < end; i++) {\n            task = this.list[i];\n            if (task.parallel) {\n                this.parallelList.push(task);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    fillParallelTask() {\n        let task;\n        const parallelList = this.parallelList;\n        this.parallelSuccessNumber++;\n        parallelList.pop();\n        const parallelWaitNumber = parallelList.length;\n        const nextIndex = this.finishedIndex + parallelWaitNumber;\n        if (parallelList.length) {\n            if (!this.running)\n                return;\n            if (nextIndex < this.total) {\n                task = this.list[nextIndex];\n                if (task && task.parallel) {\n                    parallelList.push(task);\n                    this.runParallelTask(task);\n                }\n            }\n        }\n        else {\n            this.index += this.parallelSuccessNumber;\n            this.parallelSuccessNumber = 0;\n            this.nextTask();\n        }\n    }\n    onComplete() {\n        this.stop();\n        if (this.config.onComplete)\n            this.config.onComplete();\n    }\n    onTask(task) {\n        task.complete();\n        if (this.config.onTask)\n            this.config.onTask();\n    }\n    onParallelError(error) {\n        this.parallelList.forEach(task => {\n            task.parallel = false;\n        });\n        this.parallelList.length = 0;\n        this.parallelSuccessNumber = 0;\n        this.onError(error);\n    }\n    onError(error) {\n        this.pause();\n        if (this.config.onError)\n            this.config.onError(error);\n    }\n    destroy() {\n        this.stop();\n    }\n}\n\nconst ImageManager = {\n    map: {},\n    recycledList: [],\n    tasker: new TaskProcessor(),\n    patternTasker: new TaskProcessor(),\n    get isComplete() { return I.tasker.isComplete; },\n    get(config) {\n        let image = I.map[config.url];\n        if (!image) {\n            image = Creator.image(config);\n            I.map[config.url] = image;\n        }\n        image.use++;\n        return image;\n    },\n    recycle(image) {\n        image.use--;\n        setTimeout(() => { if (!image.use)\n            I.recycledList.push(image); });\n    },\n    clearRecycled() {\n        const list = I.recycledList;\n        if (list.length > 100) {\n            list.forEach(image => {\n                if (!image.use && image.url) {\n                    delete I.map[image.url];\n                    image.destroy();\n                }\n            });\n            list.length = 0;\n        }\n    },\n    hasOpacityPixel(config) {\n        return FileHelper.opacityTypes.some(item => I.isFormat(item, config));\n    },\n    isFormat(format, config) {\n        if (config.format === format)\n            return true;\n        const { url } = config;\n        if (url.startsWith('data:')) {\n            if (url.startsWith('data:' + FileHelper.mineType(format)))\n                return true;\n        }\n        else {\n            if (url.includes('.' + format) || url.includes('.' + FileHelper.upperCaseTypeMap[format]))\n                return true;\n            else if (format === 'png' && !url.includes('.'))\n                return true;\n        }\n        return false;\n    },\n    destroy() {\n        I.map = {};\n        I.recycledList = [];\n    }\n};\nconst I = ImageManager;\n\nconst { IMAGE, create: create$1 } = IncrementId;\nclass LeaferImage {\n    get url() { return this.config.url; }\n    get completed() { return this.ready || !!this.error; }\n    constructor(config) {\n        this.use = 0;\n        this.waitComplete = [];\n        this.innerId = create$1(IMAGE);\n        this.config = config || { url: '' };\n        this.isSVG = ImageManager.isFormat('svg', config);\n        this.hasOpacityPixel = ImageManager.hasOpacityPixel(config);\n    }\n    load(onSuccess, onError) {\n        if (!this.loading) {\n            this.loading = true;\n            ImageManager.tasker.add(() => __awaiter(this, void 0, void 0, function* () {\n                return yield Platform.origin.loadImage(this.url).then((img) => {\n                    this.ready = true;\n                    this.width = img.naturalWidth || img.width;\n                    this.height = img.naturalHeight || img.height;\n                    this.view = img;\n                    this.onComplete(true);\n                }).catch((e) => {\n                    this.error = e;\n                    this.onComplete(false);\n                });\n            }));\n        }\n        this.waitComplete.push(onSuccess, onError);\n        return this.waitComplete.length - 2;\n    }\n    unload(index, stopEvent) {\n        const l = this.waitComplete;\n        if (stopEvent) {\n            const error = l[index + 1];\n            if (error)\n                error({ type: 'stop' });\n        }\n        l[index] = l[index + 1] = undefined;\n    }\n    onComplete(isSuccess) {\n        let odd;\n        this.waitComplete.forEach((item, index) => {\n            odd = index % 2;\n            if (item) {\n                if (isSuccess) {\n                    if (!odd)\n                        item(this);\n                }\n                else {\n                    if (odd)\n                        item(this.error);\n                }\n            }\n        });\n        this.waitComplete.length = 0;\n        this.loading = false;\n    }\n    getCanvas(width, height, opacity, _filters) {\n        width || (width = this.width);\n        height || (height = this.height);\n        if (this.cache) {\n            let { params, data } = this.cache;\n            for (let i in params) {\n                if (params[i] !== arguments[i]) {\n                    data = null;\n                    break;\n                }\n            }\n            if (data)\n                return data;\n        }\n        const canvas = Platform.origin.createCanvas(width, height);\n        const ctx = canvas.getContext('2d');\n        if (opacity)\n            ctx.globalAlpha = opacity;\n        ctx.drawImage(this.view, 0, 0, width, height);\n        this.cache = this.use > 1 ? { data: canvas, params: arguments } : null;\n        return canvas;\n    }\n    getPattern(canvas, repeat, transform, paint) {\n        const pattern = Platform.canvas.createPattern(canvas, repeat);\n        try {\n            if (transform && pattern.setTransform) {\n                pattern.setTransform(transform);\n                transform = null;\n            }\n        }\n        catch (_a) { }\n        if (paint)\n            paint.transform = transform;\n        return pattern;\n    }\n    destroy() {\n        this.config = { url: '' };\n        this.cache = null;\n        this.waitComplete.length = 0;\n    }\n}\n\nfunction defineKey(target, key, descriptor, noConfigurable) {\n    if (!noConfigurable)\n        descriptor.configurable = descriptor.enumerable = true;\n    Object.defineProperty(target, key, descriptor);\n}\nfunction getDescriptor(object, name) {\n    return Object.getOwnPropertyDescriptor(object, name);\n}\nfunction getNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\n\nfunction decorateLeafAttr(defaultValue, descriptorFn) {\n    return (target, key) => defineLeafAttr(target, key, defaultValue, descriptorFn && descriptorFn(key));\n}\nfunction attr(partDescriptor) {\n    return partDescriptor;\n}\nfunction defineLeafAttr(target, key, defaultValue, partDescriptor) {\n    const defaultDescriptor = {\n        get() { return this.__getAttr(key); },\n        set(value) { this.__setAttr(key, value); }\n    };\n    defineKey(target, key, Object.assign(defaultDescriptor, partDescriptor || {}));\n    defineDataProcessor(target, key, defaultValue);\n}\nfunction dataType(defaultValue) {\n    return decorateLeafAttr(defaultValue);\n}\nfunction positionType(defaultValue, checkFiniteNumber) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value, checkFiniteNumber) && (this.__layout.matrixChanged || this.__layout.matrixChange());\n        }\n    }));\n}\nfunction autoLayoutType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            if (this.__setAttr(key, value)) {\n                this.__layout.matrixChanged || this.__layout.matrixChange();\n                this.__hasAutoLayout = !!(this.origin || this.around || this.flow);\n                if (!this.__local)\n                    this.__layout.createLocal();\n            }\n        }\n    }));\n}\nfunction scaleType(defaultValue, checkFiniteNumber) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value, checkFiniteNumber) && (this.__layout.scaleChanged || this.__layout.scaleChange());\n        }\n    }));\n}\nfunction rotationType(defaultValue, checkFiniteNumber) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value, checkFiniteNumber) && (this.__layout.rotationChanged || this.__layout.rotationChange());\n        }\n    }));\n}\nfunction boundsType(defaultValue, checkFiniteNumber) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value, checkFiniteNumber) && doBoundsType(this);\n        }\n    }));\n}\nfunction naturalBoundsType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value) && (doBoundsType(this), this.__.__removeNaturalSize());\n        }\n    }));\n}\nfunction doBoundsType(leaf) {\n    leaf.__layout.boxChanged || leaf.__layout.boxChange();\n    if (leaf.__hasAutoLayout)\n        leaf.__layout.matrixChanged || leaf.__layout.matrixChange();\n}\nfunction pathInputType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            const data = this.__;\n            if (data.__pathInputed !== 2)\n                data.__pathInputed = value ? 1 : 0;\n            if (!value)\n                data.__pathForRender = undefined;\n            this.__setAttr(key, value);\n            doBoundsType(this);\n        }\n    }));\n}\nconst pathType = boundsType;\nfunction affectStrokeBoundsType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value) && doStrokeType(this);\n        }\n    }));\n}\nfunction doStrokeType(leaf) {\n    leaf.__layout.strokeChanged || leaf.__layout.strokeChange();\n    if (leaf.__.__useArrow)\n        doBoundsType(leaf);\n}\nconst strokeType = affectStrokeBoundsType;\nfunction affectRenderBoundsType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            this.__layout.renderChanged || this.__layout.renderChange();\n        }\n    }));\n}\nfunction surfaceType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value) && (this.__layout.surfaceChanged || this.__layout.surfaceChange());\n        }\n    }));\n}\nfunction opacityType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value) && (this.__layout.opacityChanged || this.__layout.opacityChange());\n        }\n    }));\n}\nfunction visibleType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            const oldValue = this.visible;\n            if (oldValue === true && value === 0) {\n                if (this.animationOut)\n                    return this.__runAnimation('out', () => doVisible(this, key, value, oldValue));\n            }\n            else if (oldValue === 0 && value === true) {\n                if (this.animation)\n                    this.__runAnimation('in');\n            }\n            doVisible(this, key, value, oldValue);\n        }\n    }));\n}\nfunction doVisible(leaf, key, value, oldValue) {\n    if (leaf.__setAttr(key, value)) {\n        leaf.__layout.opacityChanged || leaf.__layout.opacityChange();\n        if (oldValue === 0 || value === 0)\n            doBoundsType(leaf);\n    }\n}\nfunction sortType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            if (this.__setAttr(key, value)) {\n                this.__layout.surfaceChanged || this.__layout.surfaceChange();\n                this.waitParent(() => { this.parent.__layout.childrenSortChange(); });\n            }\n        }\n    }));\n}\nfunction maskType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            if (this.__setAttr(key, value)) {\n                this.__layout.boxChanged || this.__layout.boxChange();\n                this.waitParent(() => { this.parent.__updateMask(value); });\n            }\n        }\n    }));\n}\nfunction eraserType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value) && this.waitParent(() => { this.parent.__updateEraser(value); });\n        }\n    }));\n}\nfunction hitType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            if (this.__setAttr(key, value)) {\n                this.__layout.hitCanvasChanged = true;\n                if (Debug.showHitView) {\n                    this.__layout.surfaceChanged || this.__layout.surfaceChange();\n                }\n                if (this.leafer)\n                    this.leafer.updateCursor();\n            }\n        }\n    }));\n}\nfunction cursorType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            if (this.leafer)\n                this.leafer.updateCursor();\n        }\n    }));\n}\nfunction dataProcessor(processor) {\n    return (target, _key) => {\n        defineKey(target, '__DataProcessor', {\n            get() { return processor; }\n        });\n    };\n}\nfunction layoutProcessor(processor) {\n    return (target, _key) => {\n        defineKey(target, '__LayoutProcessor', {\n            get() { return processor; }\n        });\n    };\n}\nfunction getSetMethodName(key) {\n    return 'set' + key.charAt(0).toUpperCase() + key.slice(1);\n}\nfunction defineDataProcessor(target, key, defaultValue) {\n    const data = target.__DataProcessor.prototype;\n    const computedKey = '_' + key;\n    const setMethodName = getSetMethodName(key);\n    const property = {\n        get() {\n            const v = this[computedKey];\n            return v === undefined ? defaultValue : v;\n        },\n        set(value) {\n            this[computedKey] = value;\n        }\n    };\n    if (defaultValue === undefined) {\n        property.get = function () { return this[computedKey]; };\n    }\n    else if (typeof defaultValue === 'object') {\n        const { clone } = DataHelper;\n        property.get = function () {\n            let v = this[computedKey];\n            if (v === undefined)\n                this[computedKey] = v = clone(defaultValue);\n            return v;\n        };\n    }\n    if (key === 'width') {\n        property.get = function () {\n            const v = this[computedKey];\n            if (v === undefined) {\n                const t = this;\n                return t._height && t.__naturalWidth && t.__useNaturalRatio ? t._height * t.__naturalWidth / t.__naturalHeight : t.__naturalWidth || defaultValue;\n            }\n            else {\n                return v;\n            }\n        };\n    }\n    else if (key === 'height') {\n        property.get = function () {\n            const v = this[computedKey];\n            if (v === undefined) {\n                const t = this;\n                return t._width && t.__naturalHeight && t.__useNaturalRatio ? t._width * t.__naturalHeight / t.__naturalWidth : t.__naturalHeight || defaultValue;\n            }\n            else {\n                return v;\n            }\n        };\n    }\n    let descriptor, find = data;\n    while (!descriptor && find) {\n        descriptor = getDescriptor(find, key);\n        find = find.__proto__;\n    }\n    if (descriptor && descriptor.set)\n        property.set = descriptor.set;\n    if (data[setMethodName]) {\n        property.set = data[setMethodName];\n        delete data[setMethodName];\n    }\n    defineKey(data, key, property);\n}\n\nconst debug$1 = new Debug('rewrite');\nconst list = [];\nconst excludeNames = ['destroy', 'constructor'];\nfunction rewrite(method) {\n    return (target, key) => {\n        list.push({ name: target.constructor.name + '.' + key, run: () => { target[key] = method; } });\n    };\n}\nfunction rewriteAble() {\n    return (_target) => {\n        doRewrite();\n    };\n}\nfunction doRewrite(error) {\n    if (list.length) {\n        list.forEach(item => {\n            if (error)\n                debug$1.error(item.name, '需在Class上装饰@rewriteAble()');\n            item.run();\n        });\n        list.length = 0;\n    }\n}\nsetTimeout(() => doRewrite(true));\nfunction useModule(module, exclude) {\n    return (target) => {\n        const names = module.prototype ? getNames(module.prototype) : Object.keys(module);\n        names.forEach(name => {\n            if (!excludeNames.includes(name) && (!exclude || !exclude.includes(name))) {\n                if (module.prototype) {\n                    const d = getDescriptor(module.prototype, name);\n                    if (d.writable)\n                        target.prototype[name] = module.prototype[name];\n                }\n                else {\n                    target.prototype[name] = module[name];\n                }\n            }\n        });\n    };\n}\n\nfunction registerUI() {\n    return (target) => {\n        UICreator.register(target);\n    };\n}\nfunction registerUIEvent() {\n    return (target) => {\n        EventCreator.register(target);\n    };\n}\n\nconst { copy: copy$3, toInnerPoint: toInnerPoint$1, toOuterPoint: toOuterPoint$1, scaleOfOuter, rotateOfOuter, skewOfOuter, multiplyParent: multiplyParent$2, divideParent, getLayout } = MatrixHelper;\nconst matrix = {};\nconst LeafHelper = {\n    updateAllMatrix(leaf, checkAutoLayout, waitAutoLayout) {\n        if (checkAutoLayout && leaf.__hasAutoLayout && leaf.__layout.matrixChanged)\n            waitAutoLayout = true;\n        updateMatrix$1(leaf, checkAutoLayout, waitAutoLayout);\n        if (leaf.isBranch) {\n            const { children } = leaf;\n            for (let i = 0, len = children.length; i < len; i++) {\n                updateAllMatrix$1(children[i], checkAutoLayout, waitAutoLayout);\n            }\n        }\n    },\n    updateMatrix(leaf, checkAutoLayout, waitAutoLayout) {\n        const layout = leaf.__layout;\n        if (checkAutoLayout) {\n            if (waitAutoLayout) {\n                layout.waitAutoLayout = true;\n                if (leaf.__hasAutoLayout)\n                    layout.matrixChanged = false;\n            }\n        }\n        else if (layout.waitAutoLayout) {\n            layout.waitAutoLayout = false;\n        }\n        if (layout.matrixChanged)\n            leaf.__updateLocalMatrix();\n        if (!layout.waitAutoLayout)\n            leaf.__updateWorldMatrix();\n    },\n    updateBounds(leaf) {\n        const layout = leaf.__layout;\n        if (layout.boundsChanged)\n            leaf.__updateLocalBounds();\n        if (!layout.waitAutoLayout)\n            leaf.__updateWorldBounds();\n    },\n    updateAllWorldOpacity(leaf) {\n        leaf.__updateWorldOpacity();\n        if (leaf.isBranch) {\n            const { children } = leaf;\n            for (let i = 0, len = children.length; i < len; i++) {\n                updateAllWorldOpacity(children[i]);\n            }\n        }\n    },\n    updateAllChange(leaf) {\n        updateAllWorldOpacity(leaf);\n        leaf.__updateChange();\n        if (leaf.isBranch) {\n            const { children } = leaf;\n            for (let i = 0, len = children.length; i < len; i++) {\n                updateAllChange(children[i]);\n            }\n        }\n    },\n    worldHittable(t) {\n        while (t) {\n            if (!t.__.hittable)\n                return false;\n            t = t.parent;\n        }\n        return true;\n    },\n    moveWorld(t, x, y = 0, isInnerPoint, transition) {\n        const local = typeof x === 'object' ? Object.assign({}, x) : { x, y };\n        isInnerPoint ? toOuterPoint$1(t.localTransform, local, local, true) : (t.parent && toInnerPoint$1(t.parent.worldTransform, local, local, true));\n        L.moveLocal(t, local.x, local.y, transition);\n    },\n    moveLocal(t, x, y = 0, transition) {\n        if (typeof x === 'object')\n            y = x.y, x = x.x;\n        x += t.x;\n        y += t.y;\n        transition ? t.animate({ x, y }, transition) : (t.x = x, t.y = y);\n    },\n    zoomOfWorld(t, origin, scaleX, scaleY, resize) {\n        L.zoomOfLocal(t, getTempLocal(t, origin), scaleX, scaleY, resize);\n    },\n    zoomOfLocal(t, origin, scaleX, scaleY = scaleX, resize) {\n        copy$3(matrix, t.__localMatrix);\n        scaleOfOuter(matrix, origin, scaleX, scaleY);\n        if (t.origin || t.around) {\n            L.setTransform(t, matrix, resize);\n        }\n        else {\n            moveByMatrix(t, matrix);\n            t.scaleResize(scaleX, scaleY, resize !== true);\n        }\n    },\n    rotateOfWorld(t, origin, angle) {\n        L.rotateOfLocal(t, getTempLocal(t, origin), angle);\n    },\n    rotateOfLocal(t, origin, angle) {\n        copy$3(matrix, t.__localMatrix);\n        rotateOfOuter(matrix, origin, angle);\n        if (t.origin || t.around) {\n            L.setTransform(t, matrix);\n        }\n        else {\n            moveByMatrix(t, matrix);\n            t.rotation = MathHelper.formatRotation(t.rotation + angle);\n        }\n    },\n    skewOfWorld(t, origin, skewX, skewY, resize) {\n        L.skewOfLocal(t, getTempLocal(t, origin), skewX, skewY, resize);\n    },\n    skewOfLocal(t, origin, skewX, skewY = 0, resize) {\n        copy$3(matrix, t.__localMatrix);\n        skewOfOuter(matrix, origin, skewX, skewY);\n        L.setTransform(t, matrix, resize);\n    },\n    transformWorld(t, transform, resize) {\n        copy$3(matrix, t.worldTransform);\n        multiplyParent$2(matrix, transform);\n        if (t.parent)\n            divideParent(matrix, t.parent.worldTransform);\n        L.setTransform(t, matrix, resize);\n    },\n    transform(t, transform, resize) {\n        copy$3(matrix, t.localTransform);\n        multiplyParent$2(matrix, transform);\n        L.setTransform(t, matrix, resize);\n    },\n    setTransform(t, transform, resize) {\n        const layout = getLayout(transform, t.origin && L.getInnerOrigin(t, t.origin), t.around && L.getInnerOrigin(t, t.around));\n        if (resize) {\n            const scaleX = layout.scaleX / t.scaleX;\n            const scaleY = layout.scaleY / t.scaleY;\n            delete layout.scaleX;\n            delete layout.scaleY;\n            t.set(layout);\n            t.scaleResize(scaleX, scaleY, resize !== true);\n        }\n        else {\n            t.set(layout);\n        }\n    },\n    getFlipTransform(t, axis) {\n        const m = getMatrixData();\n        const sign = axis === 'x' ? 1 : -1;\n        scaleOfOuter(m, L.getLocalOrigin(t, 'center'), -1 * sign, 1 * sign);\n        return m;\n    },\n    getLocalOrigin(t, origin) {\n        return PointHelper.tempToOuterOf(L.getInnerOrigin(t, origin), t.localTransform);\n    },\n    getInnerOrigin(t, origin) {\n        const innerOrigin = {};\n        AroundHelper.toPoint(origin, t.boxBounds, innerOrigin);\n        return innerOrigin;\n    },\n    getRelativeWorld(t, relative, temp) {\n        copy$3(matrix, t.worldTransform);\n        divideParent(matrix, relative.worldTransform);\n        return temp ? matrix : Object.assign({}, matrix);\n    },\n    drop(t, parent, index, resize) {\n        t.setTransform(L.getRelativeWorld(t, parent, true), resize);\n        parent.add(t, index);\n    },\n    hasParent(p, parent) {\n        if (!parent)\n            return false;\n        while (p) {\n            if (parent === p)\n                return true;\n            p = p.parent;\n        }\n    }\n};\nconst L = LeafHelper;\nconst { updateAllMatrix: updateAllMatrix$1, updateMatrix: updateMatrix$1, updateAllWorldOpacity, updateAllChange } = L;\nfunction moveByMatrix(t, matrix) {\n    const { e, f } = t.__localMatrix;\n    t.x += matrix.e - e;\n    t.y += matrix.f - f;\n}\nfunction getTempLocal(t, world) {\n    t.__layout.update();\n    return t.parent ? PointHelper.tempToInnerOf(world, t.parent.__world) : world;\n}\n\nconst LeafBoundsHelper = {\n    worldBounds(target) {\n        return target.__world;\n    },\n    localBoxBounds(target) {\n        return target.__.eraser || target.__.visible === 0 ? null : (target.__local || target.__layout);\n    },\n    localStrokeBounds(target) {\n        return target.__.eraser || target.__.visible === 0 ? null : target.__layout.localStrokeBounds;\n    },\n    localRenderBounds(target) {\n        return target.__.eraser || target.__.visible === 0 ? null : target.__layout.localRenderBounds;\n    },\n    maskLocalBoxBounds(target) {\n        return target.__.mask ? target.__localBoxBounds : null;\n    },\n    maskLocalStrokeBounds(target) {\n        return target.__.mask ? target.__layout.localStrokeBounds : null;\n    },\n    maskLocalRenderBounds(target) {\n        return target.__.mask ? target.__layout.localRenderBounds : null;\n    },\n    excludeRenderBounds(child, options) {\n        if (options.bounds && !options.bounds.hit(child.__world, options.matrix))\n            return true;\n        if (options.hideBounds && options.hideBounds.includes(child.__world, options.matrix))\n            return true;\n        return false;\n    }\n};\n\nconst { updateBounds: updateBounds$1 } = LeafHelper;\nconst BranchHelper = {\n    sort(a, b) {\n        return (a.__.zIndex === b.__.zIndex) ? (a.__tempNumber - b.__tempNumber) : (a.__.zIndex - b.__.zIndex);\n    },\n    pushAllChildBranch(branch, leafList) {\n        branch.__tempNumber = 1;\n        if (branch.__.__childBranchNumber) {\n            const { children } = branch;\n            for (let i = 0, len = children.length; i < len; i++) {\n                branch = children[i];\n                if (branch.isBranch) {\n                    branch.__tempNumber = 1;\n                    leafList.add(branch);\n                    pushAllChildBranch(branch, leafList);\n                }\n            }\n        }\n    },\n    pushAllParent(leaf, leafList) {\n        const { keys } = leafList;\n        if (keys) {\n            while (leaf.parent) {\n                if (keys[leaf.parent.innerId] === undefined) {\n                    leafList.add(leaf.parent);\n                    leaf = leaf.parent;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        else {\n            while (leaf.parent) {\n                leafList.add(leaf.parent);\n                leaf = leaf.parent;\n            }\n        }\n    },\n    pushAllBranchStack(branch, pushList) {\n        let start = pushList.length;\n        const { children } = branch;\n        for (let i = 0, len = children.length; i < len; i++) {\n            if (children[i].isBranch) {\n                pushList.push(children[i]);\n            }\n        }\n        for (let i = start, len = pushList.length; i < len; i++) {\n            pushAllBranchStack(pushList[i], pushList);\n        }\n    },\n    updateBounds(branch, exclude) {\n        const branchStack = [branch];\n        pushAllBranchStack(branch, branchStack);\n        updateBoundsByBranchStack(branchStack, exclude);\n    },\n    updateBoundsByBranchStack(branchStack, exclude) {\n        let branch, children;\n        for (let i = branchStack.length - 1; i > -1; i--) {\n            branch = branchStack[i];\n            children = branch.children;\n            for (let j = 0, len = children.length; j < len; j++) {\n                updateBounds$1(children[j]);\n            }\n            if (exclude && exclude === branch)\n                continue;\n            updateBounds$1(branch);\n        }\n    }\n};\nconst { pushAllChildBranch, pushAllBranchStack, updateBoundsByBranchStack } = BranchHelper;\n\nconst WaitHelper = {\n    run(wait) {\n        if (wait && wait.length) {\n            const len = wait.length;\n            for (let i = 0; i < len; i++) {\n                wait[i]();\n            }\n            wait.length === len ? wait.length = 0 : wait.splice(0, len);\n        }\n    }\n};\n\nconst { getRelativeWorld: getRelativeWorld$1 } = LeafHelper;\nconst { toOuterOf: toOuterOf$2, getPoints, copy: copy$2 } = BoundsHelper;\nconst localContent = '_localContentBounds';\nconst worldContent = '_worldContentBounds', worldBox = '_worldBoxBounds', worldStroke = '_worldStrokeBounds';\nclass LeafLayout {\n    get contentBounds() { return this._contentBounds || this.boxBounds; }\n    set contentBounds(bounds) { this._contentBounds = bounds; }\n    get strokeBounds() { return this._strokeBounds || this.boxBounds; }\n    get renderBounds() { return this._renderBounds || this.boxBounds; }\n    get localContentBounds() { toOuterOf$2(this.contentBounds, this.leaf.__localMatrix, this[localContent] || (this[localContent] = {})); return this[localContent]; }\n    get localStrokeBounds() { return this._localStrokeBounds || this; }\n    get localRenderBounds() { return this._localRenderBounds || this; }\n    get worldContentBounds() { toOuterOf$2(this.contentBounds, this.leaf.__world, this[worldContent] || (this[worldContent] = {})); return this[worldContent]; }\n    get worldBoxBounds() { toOuterOf$2(this.boxBounds, this.leaf.__world, this[worldBox] || (this[worldBox] = {})); return this[worldBox]; }\n    get worldStrokeBounds() { toOuterOf$2(this.strokeBounds, this.leaf.__world, this[worldStroke] || (this[worldStroke] = {})); return this[worldStroke]; }\n    get a() { return 1; }\n    get b() { return 0; }\n    get c() { return 0; }\n    get d() { return 1; }\n    get e() { return this.leaf.__.x; }\n    get f() { return this.leaf.__.y; }\n    get x() { return this.e + this.boxBounds.x; }\n    get y() { return this.f + this.boxBounds.y; }\n    get width() { return this.boxBounds.width; }\n    get height() { return this.boxBounds.height; }\n    constructor(leaf) {\n        this.leaf = leaf;\n        this.boxBounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this.leaf.__local)\n            this._localRenderBounds = this._localStrokeBounds = this.leaf.__local;\n        this.boxChange();\n        this.matrixChange();\n    }\n    createLocal() {\n        const local = this.leaf.__local = { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0, x: 0, y: 0, width: 0, height: 0 };\n        if (!this._localStrokeBounds)\n            this._localStrokeBounds = local;\n        if (!this._localRenderBounds)\n            this._localRenderBounds = local;\n    }\n    update() {\n        const { leafer } = this.leaf;\n        if (leafer) {\n            if (leafer.ready)\n                leafer.watcher.changed && leafer.layouter.layout();\n            else\n                leafer.start();\n        }\n        else {\n            let root = this.leaf;\n            while (root.parent && !root.parent.leafer) {\n                root = root.parent;\n            }\n            Platform.layout(root);\n        }\n    }\n    getTransform(relative = 'world') {\n        this.update();\n        const { leaf } = this;\n        switch (relative) {\n            case 'world':\n                return leaf.__world;\n            case 'local':\n                return leaf.__localMatrix;\n            case 'inner':\n                return MatrixHelper.defaultMatrix;\n            case 'page':\n                relative = leaf.zoomLayer;\n            default:\n                return getRelativeWorld$1(leaf, relative);\n        }\n    }\n    getBounds(type, relative = 'world') {\n        this.update();\n        switch (relative) {\n            case 'world':\n                return this.getWorldBounds(type);\n            case 'local':\n                return this.getLocalBounds(type);\n            case 'inner':\n                return this.getInnerBounds(type);\n            case 'page':\n                relative = this.leaf.zoomLayer;\n            default:\n                return new Bounds(this.getInnerBounds(type)).toOuterOf(this.getTransform(relative));\n        }\n    }\n    getInnerBounds(type = 'box') {\n        switch (type) {\n            case 'render':\n                return this.renderBounds;\n            case 'content':\n                if (this.contentBounds)\n                    return this.contentBounds;\n            case 'box':\n                return this.boxBounds;\n            case 'stroke':\n                return this.strokeBounds;\n        }\n    }\n    getLocalBounds(type = 'box') {\n        switch (type) {\n            case 'render':\n                return this.localRenderBounds;\n            case 'stroke':\n                return this.localStrokeBounds;\n            case 'content':\n                if (this.contentBounds)\n                    return this.localContentBounds;\n            case 'box':\n                return this.leaf.__localBoxBounds;\n        }\n    }\n    getWorldBounds(type = 'box') {\n        switch (type) {\n            case 'render':\n                return this.leaf.__world;\n            case 'stroke':\n                return this.worldStrokeBounds;\n            case 'content':\n                if (this.contentBounds)\n                    return this.worldContentBounds;\n            case 'box':\n                return this.worldBoxBounds;\n        }\n    }\n    getLayoutBounds(type, relative = 'world', unscale) {\n        const { leaf } = this;\n        let point, matrix, layoutBounds, bounds = this.getInnerBounds(type);\n        switch (relative) {\n            case 'world':\n                point = leaf.getWorldPoint(bounds);\n                matrix = leaf.__world;\n                break;\n            case 'local':\n                const { scaleX, scaleY, rotation, skewX, skewY } = leaf.__;\n                layoutBounds = { scaleX, scaleY, rotation, skewX, skewY };\n                point = leaf.getLocalPointByInner(bounds);\n                break;\n            case 'inner':\n                point = bounds;\n                matrix = MatrixHelper.defaultMatrix;\n                break;\n            case 'page':\n                relative = leaf.zoomLayer;\n            default:\n                point = leaf.getWorldPoint(bounds, relative);\n                matrix = getRelativeWorld$1(leaf, relative, true);\n        }\n        if (!layoutBounds)\n            layoutBounds = MatrixHelper.getLayout(matrix);\n        copy$2(layoutBounds, bounds);\n        PointHelper.copy(layoutBounds, point);\n        if (unscale) {\n            const { scaleX, scaleY } = layoutBounds;\n            const uScaleX = Math.abs(scaleX);\n            const uScaleY = Math.abs(scaleY);\n            if (uScaleX !== 1 || uScaleY !== 1) {\n                layoutBounds.scaleX /= uScaleX;\n                layoutBounds.scaleY /= uScaleY;\n                layoutBounds.width *= uScaleX;\n                layoutBounds.height *= uScaleY;\n            }\n        }\n        return layoutBounds;\n    }\n    getLayoutPoints(type, relative = 'world') {\n        const { leaf } = this;\n        const points = getPoints(this.getInnerBounds(type));\n        let relativeLeaf;\n        switch (relative) {\n            case 'world':\n                relativeLeaf = null;\n                break;\n            case 'local':\n                relativeLeaf = leaf.parent;\n                break;\n            case 'inner':\n                break;\n            case 'page':\n                relative = leaf.zoomLayer;\n            default:\n                relativeLeaf = relative;\n        }\n        if (relativeLeaf !== undefined)\n            points.forEach(point => leaf.innerToWorld(point, null, false, relativeLeaf));\n        return points;\n    }\n    shrinkContent() {\n        const { x, y, width, height } = this.boxBounds;\n        this._contentBounds = { x, y, width, height };\n    }\n    spreadStroke() {\n        const { x, y, width, height } = this.strokeBounds;\n        this._strokeBounds = { x, y, width, height };\n        this._localStrokeBounds = { x, y, width, height };\n        if (!this.renderSpread)\n            this.spreadRenderCancel();\n    }\n    spreadRender() {\n        const { x, y, width, height } = this.renderBounds;\n        this._renderBounds = { x, y, width, height };\n        this._localRenderBounds = { x, y, width, height };\n    }\n    shrinkContentCancel() {\n        this._contentBounds = undefined;\n    }\n    spreadStrokeCancel() {\n        const same = this.renderBounds === this.strokeBounds;\n        this._strokeBounds = this.boxBounds;\n        this._localStrokeBounds = this.leaf.__localBoxBounds;\n        if (same)\n            this.spreadRenderCancel();\n    }\n    spreadRenderCancel() {\n        this._renderBounds = this._strokeBounds;\n        this._localRenderBounds = this._localStrokeBounds;\n    }\n    boxChange() {\n        this.boxChanged = true;\n        this.localBoxChanged || this.localBoxChange();\n        this.hitCanvasChanged = true;\n    }\n    localBoxChange() {\n        this.localBoxChanged = true;\n        this.boundsChanged = true;\n    }\n    strokeChange() {\n        this.strokeChanged = true;\n        this.strokeSpread || (this.strokeSpread = 1);\n        this.boundsChanged = true;\n        this.hitCanvasChanged = true;\n    }\n    renderChange() {\n        this.renderChanged = true;\n        this.renderSpread || (this.renderSpread = 1);\n        this.boundsChanged = true;\n    }\n    scaleChange() {\n        this.scaleChanged = true;\n        this._scaleOrRotationChange();\n    }\n    rotationChange() {\n        this.rotationChanged = true;\n        this.affectRotation = true;\n        this._scaleOrRotationChange();\n    }\n    _scaleOrRotationChange() {\n        this.affectScaleOrRotation = true;\n        this.matrixChange();\n        if (!this.leaf.__local)\n            this.createLocal();\n    }\n    matrixChange() {\n        this.matrixChanged = true;\n        this.localBoxChanged || this.localBoxChange();\n    }\n    surfaceChange() {\n        this.surfaceChanged = true;\n    }\n    opacityChange() {\n        this.opacityChanged = true;\n        this.surfaceChanged || this.surfaceChange();\n    }\n    childrenSortChange() {\n        if (!this.childrenSortChanged) {\n            this.childrenSortChanged = true;\n            this.leaf.forceUpdate('surface');\n        }\n    }\n    destroy() { }\n}\n\nclass Event {\n    constructor(type, target) {\n        this.bubbles = false;\n        this.type = type;\n        if (target)\n            this.target = target;\n    }\n    stopDefault() {\n        this.isStopDefault = true;\n        if (this.origin)\n            Platform.event.stopDefault(this.origin);\n    }\n    stopNow() {\n        this.isStopNow = true;\n        this.isStop = true;\n        if (this.origin)\n            Platform.event.stopNow(this.origin);\n    }\n    stop() {\n        this.isStop = true;\n        if (this.origin)\n            Platform.event.stop(this.origin);\n    }\n}\n\nclass ChildEvent extends Event {\n    constructor(type, child, parent) {\n        super(type, child);\n        this.parent = parent;\n        this.child = child;\n    }\n}\nChildEvent.ADD = 'child.add';\nChildEvent.REMOVE = 'child.remove';\nChildEvent.CREATED = 'created';\nChildEvent.MOUNTED = 'mounted';\nChildEvent.UNMOUNTED = 'unmounted';\nChildEvent.DESTROY = 'destroy';\n\nclass PropertyEvent extends Event {\n    constructor(type, target, attrName, oldValue, newValue) {\n        super(type, target);\n        this.attrName = attrName;\n        this.oldValue = oldValue;\n        this.newValue = newValue;\n    }\n}\nPropertyEvent.CHANGE = 'property.change';\nPropertyEvent.LEAFER_CHANGE = 'property.leafer_change';\n\nclass ImageEvent extends Event {\n    constructor(type, data) {\n        super(type);\n        Object.assign(this, data);\n    }\n}\nImageEvent.LOAD = 'image.load';\nImageEvent.LOADED = 'image.loaded';\nImageEvent.ERROR = 'image.error';\n\nclass ResizeEvent extends Event {\n    get bigger() {\n        if (!this.old)\n            return true;\n        const { width, height } = this.old;\n        return this.width >= width && this.height >= height;\n    }\n    get smaller() {\n        return !this.bigger;\n    }\n    get samePixelRatio() {\n        if (!this.old)\n            return true;\n        return this.pixelRatio === this.old.pixelRatio;\n    }\n    constructor(size, oldSize) {\n        if (typeof size === 'object') {\n            super(ResizeEvent.RESIZE);\n            Object.assign(this, size);\n        }\n        else {\n            super(size);\n        }\n        this.old = oldSize;\n    }\n}\nResizeEvent.RESIZE = 'resize';\n\nclass WatchEvent extends Event {\n    constructor(type, data) {\n        super(type);\n        this.data = data;\n    }\n}\nWatchEvent.REQUEST = 'watch.request';\nWatchEvent.DATA = 'watch.data';\n\nclass LayoutEvent extends Event {\n    constructor(type, data, times) {\n        super(type);\n        if (data) {\n            this.data = data;\n            this.times = times;\n        }\n    }\n}\nLayoutEvent.CHECK_UPDATE = 'layout.check_update';\nLayoutEvent.REQUEST = 'layout.request';\nLayoutEvent.START = 'layout.start';\nLayoutEvent.BEFORE = 'layout.before';\nLayoutEvent.LAYOUT = 'layout';\nLayoutEvent.AFTER = 'layout.after';\nLayoutEvent.AGAIN = 'layout.again';\nLayoutEvent.END = 'layout.end';\n\nclass RenderEvent extends Event {\n    constructor(type, times, bounds, options) {\n        super(type);\n        if (times)\n            this.times = times;\n        if (bounds) {\n            this.renderBounds = bounds;\n            this.renderOptions = options;\n        }\n    }\n}\nRenderEvent.REQUEST = 'render.request';\nRenderEvent.CHILD_START = 'render.child_start';\nRenderEvent.START = 'render.start';\nRenderEvent.BEFORE = 'render.before';\nRenderEvent.RENDER = 'render';\nRenderEvent.AFTER = 'render.after';\nRenderEvent.AGAIN = 'render.again';\nRenderEvent.END = 'render.end';\nRenderEvent.NEXT = 'render.next';\n\nclass LeaferEvent extends Event {\n}\nLeaferEvent.START = 'leafer.start';\nLeaferEvent.BEFORE_READY = 'leafer.before_ready';\nLeaferEvent.READY = 'leafer.ready';\nLeaferEvent.AFTER_READY = 'leafer.after_ready';\nLeaferEvent.VIEW_READY = 'leafer.view_ready';\nLeaferEvent.VIEW_COMPLETED = 'leafer.view_completed';\nLeaferEvent.STOP = 'leafer.stop';\nLeaferEvent.RESTART = 'leafer.restart';\nLeaferEvent.END = 'leafer.end';\n\nconst empty = {};\nclass Eventer {\n    set event(map) { this.on(map); }\n    on(type, listener, options) {\n        if (!listener) {\n            let event, map = type;\n            for (let key in map)\n                event = map[key], event instanceof Array ? this.on(key, event[0], event[1]) : this.on(key, event);\n            return;\n        }\n        let capture, once;\n        if (options) {\n            if (options === 'once') {\n                once = true;\n            }\n            else if (typeof options === 'boolean') {\n                capture = options;\n            }\n            else {\n                capture = options.capture;\n                once = options.once;\n            }\n        }\n        let events;\n        const map = __getListenerMap(this, capture, true);\n        const typeList = typeof type === 'string' ? type.split(' ') : type;\n        const item = once ? { listener, once } : { listener };\n        typeList.forEach(type => {\n            if (type) {\n                events = map[type];\n                if (events) {\n                    if (events.findIndex(item => item.listener === listener) === -1)\n                        events.push(item);\n                }\n                else {\n                    map[type] = [item];\n                }\n            }\n        });\n    }\n    off(type, listener, options) {\n        if (type) {\n            const typeList = typeof type === 'string' ? type.split(' ') : type;\n            if (listener) {\n                let capture;\n                if (options)\n                    capture = typeof options === 'boolean' ? options : (options === 'once' ? false : options.capture);\n                let events, index;\n                const map = __getListenerMap(this, capture);\n                typeList.forEach(type => {\n                    if (type) {\n                        events = map[type];\n                        if (events) {\n                            index = events.findIndex(item => item.listener === listener);\n                            if (index > -1)\n                                events.splice(index, 1);\n                            if (!events.length)\n                                delete map[type];\n                        }\n                    }\n                });\n            }\n            else {\n                const { __bubbleMap: b, __captureMap: c } = this;\n                typeList.forEach(type => {\n                    if (b)\n                        delete b[type];\n                    if (c)\n                        delete c[type];\n                });\n            }\n        }\n        else {\n            this.__bubbleMap = this.__captureMap = undefined;\n        }\n    }\n    on_(type, listener, bind, options) {\n        if (bind)\n            listener = listener.bind(bind);\n        this.on(type, listener, options);\n        return { type, current: this, listener, options };\n    }\n    off_(id) {\n        if (!id)\n            return;\n        const list = id instanceof Array ? id : [id];\n        list.forEach(item => item.current.off(item.type, item.listener, item.options));\n        list.length = 0;\n    }\n    once(type, listener, capture) {\n        this.on(type, listener, { once: true, capture });\n    }\n    emit(type, event, capture) {\n        if (!event && EventCreator.has(type))\n            event = EventCreator.get(type, { type, target: this, current: this });\n        const map = __getListenerMap(this, capture);\n        const list = map[type];\n        if (list) {\n            let item;\n            for (let i = 0, len = list.length; i < len; i++) {\n                item = list[i];\n                item.listener(event);\n                if (item.once) {\n                    this.off(type, item.listener, capture);\n                    i--, len--;\n                }\n                if (event && event.isStopNow)\n                    break;\n            }\n        }\n        this.syncEventer && this.syncEventer.emitEvent(event, capture);\n    }\n    emitEvent(event, capture) {\n        event.current = this;\n        this.emit(event.type, event, capture);\n    }\n    hasEvent(type, capture) {\n        if (this.syncEventer && this.syncEventer.hasEvent(type, capture))\n            return true;\n        const { __bubbleMap: b, __captureMap: c } = this;\n        const hasB = b && b[type], hasC = c && c[type];\n        return !!(capture === undefined ? (hasB || hasC) : (capture ? hasC : hasB));\n    }\n    destroy() {\n        this.__captureMap = this.__bubbleMap = this.syncEventer = null;\n    }\n}\nfunction __getListenerMap(eventer, capture, create) {\n    if (capture) {\n        const { __captureMap: c } = eventer;\n        if (c) {\n            return c;\n        }\n        else {\n            return create ? eventer.__captureMap = {} : empty;\n        }\n    }\n    else {\n        const { __bubbleMap: b } = eventer;\n        if (b) {\n            return b;\n        }\n        else {\n            return create ? eventer.__bubbleMap = {} : empty;\n        }\n    }\n}\n\nconst { on, on_, off, off_, once, emit, emitEvent, hasEvent, destroy } = Eventer.prototype;\nconst LeafEventer = { on, on_, off, off_, once, emit, emitEvent, hasEvent, destroyEventer: destroy };\n\nconst { isFinite } = Number;\nconst debug = Debug.get('setAttr');\nconst LeafDataProxy = {\n    __setAttr(name, newValue, checkFiniteNumber) {\n        if (this.leaferIsCreated) {\n            const oldValue = this.__.__getInput(name);\n            if (checkFiniteNumber && !isFinite(newValue) && newValue !== undefined) {\n                debug.warn(this.innerName, name, newValue);\n                newValue = undefined;\n            }\n            if (typeof newValue === 'object' || oldValue !== newValue) {\n                this.__realSetAttr(name, newValue);\n                const { CHANGE } = PropertyEvent;\n                const event = new PropertyEvent(CHANGE, this, name, oldValue, newValue);\n                if (this.isLeafer) {\n                    this.emitEvent(new PropertyEvent(PropertyEvent.LEAFER_CHANGE, this, name, oldValue, newValue));\n                }\n                else {\n                    if (this.hasEvent(CHANGE))\n                        this.emitEvent(event);\n                }\n                this.leafer.emitEvent(event);\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            this.__realSetAttr(name, newValue);\n            return true;\n        }\n    },\n    __realSetAttr(name, newValue) {\n        const data = this.__;\n        data[name] = newValue;\n        if (this.__proxyData)\n            this.setProxyAttr(name, newValue);\n        if (data.normalStyle)\n            this.lockNormalStyle || data.normalStyle[name] === undefined || (data.normalStyle[name] = newValue);\n    },\n    __getAttr(name) {\n        if (this.__proxyData)\n            return this.getProxyAttr(name);\n        return this.__.__get(name);\n    }\n};\n\nconst { setLayout, multiplyParent: multiplyParent$1, translateInner, defaultWorld } = MatrixHelper;\nconst { toPoint, tempPoint } = AroundHelper;\nconst LeafMatrix = {\n    __updateWorldMatrix() {\n        multiplyParent$1(this.__local || this.__layout, this.parent ? this.parent.__world : defaultWorld, this.__world, !!this.__layout.affectScaleOrRotation, this.__, this.parent && this.parent.__);\n    },\n    __updateLocalMatrix() {\n        if (this.__local) {\n            const layout = this.__layout, local = this.__local, data = this.__;\n            if (layout.affectScaleOrRotation) {\n                if (layout.scaleChanged || layout.rotationChanged) {\n                    setLayout(local, data, null, null, layout.affectRotation);\n                    layout.scaleChanged = layout.rotationChanged = false;\n                }\n            }\n            local.e = data.x + data.offsetX;\n            local.f = data.y + data.offsetY;\n            if (data.around || data.origin) {\n                toPoint(data.around || data.origin, layout.boxBounds, tempPoint);\n                translateInner(local, -tempPoint.x, -tempPoint.y, !data.around);\n            }\n        }\n        this.__layout.matrixChanged = false;\n    }\n};\n\nconst { updateMatrix, updateAllMatrix } = LeafHelper;\nconst { updateBounds } = BranchHelper;\nconst { toOuterOf: toOuterOf$1, copyAndSpread, copy: copy$1 } = BoundsHelper;\nconst { toBounds } = PathBounds;\nconst LeafBounds = {\n    __updateWorldBounds() {\n        toOuterOf$1(this.__layout.renderBounds, this.__world, this.__world);\n        if (this.__layout.resized) {\n            this.__onUpdateSize();\n            this.__layout.resized = false;\n        }\n    },\n    __updateLocalBounds() {\n        const layout = this.__layout;\n        if (layout.boxChanged) {\n            if (!this.__.__pathInputed)\n                this.__updatePath();\n            this.__updateRenderPath();\n            this.__updateBoxBounds();\n            layout.resized = true;\n        }\n        if (layout.localBoxChanged) {\n            if (this.__local)\n                this.__updateLocalBoxBounds();\n            layout.localBoxChanged = false;\n            if (layout.strokeSpread)\n                layout.strokeChanged = true;\n            if (layout.renderSpread)\n                layout.renderChanged = true;\n            if (this.parent)\n                this.parent.__layout.boxChange();\n        }\n        layout.boxChanged = false;\n        if (layout.strokeChanged) {\n            layout.strokeSpread = this.__updateStrokeSpread();\n            if (layout.strokeSpread) {\n                if (layout.strokeBounds === layout.boxBounds)\n                    layout.spreadStroke();\n                this.__updateStrokeBounds();\n                this.__updateLocalStrokeBounds();\n            }\n            else {\n                layout.spreadStrokeCancel();\n            }\n            layout.strokeChanged = false;\n            if (layout.renderSpread || layout.strokeSpread !== layout.strokeBoxSpread)\n                layout.renderChanged = true;\n            if (this.parent)\n                this.parent.__layout.strokeChange();\n            layout.resized = true;\n        }\n        if (layout.renderChanged) {\n            layout.renderSpread = this.__updateRenderSpread();\n            if (layout.renderSpread) {\n                if (layout.renderBounds === layout.boxBounds || layout.renderBounds === layout.strokeBounds)\n                    layout.spreadRender();\n                this.__updateRenderBounds();\n                this.__updateLocalRenderBounds();\n            }\n            else {\n                layout.spreadRenderCancel();\n            }\n            layout.renderChanged = false;\n            if (this.parent)\n                this.parent.__layout.renderChange();\n        }\n        layout.boundsChanged = false;\n    },\n    __updateLocalBoxBounds() {\n        if (this.__hasMotionPath)\n            this.__updateMotionPath();\n        if (this.__hasAutoLayout)\n            this.__updateAutoLayout();\n        toOuterOf$1(this.__layout.boxBounds, this.__local, this.__local);\n    },\n    __updateLocalStrokeBounds() {\n        toOuterOf$1(this.__layout.strokeBounds, this.__localMatrix, this.__layout.localStrokeBounds);\n    },\n    __updateLocalRenderBounds() {\n        toOuterOf$1(this.__layout.renderBounds, this.__localMatrix, this.__layout.localRenderBounds);\n    },\n    __updateBoxBounds() {\n        const b = this.__layout.boxBounds;\n        const data = this.__;\n        if (data.__pathInputed) {\n            toBounds(data.path, b);\n        }\n        else {\n            b.x = 0;\n            b.y = 0;\n            b.width = data.width;\n            b.height = data.height;\n        }\n    },\n    __updateAutoLayout() {\n        this.__layout.matrixChanged = true;\n        if (this.isBranch) {\n            if (this.leaferIsReady)\n                this.leafer.layouter.addExtra(this);\n            if (this.__.flow) {\n                if (this.__layout.boxChanged)\n                    this.__updateFlowLayout();\n                updateAllMatrix(this);\n                updateBounds(this, this);\n                if (this.__.__autoSide)\n                    this.__updateBoxBounds(true);\n            }\n            else {\n                updateAllMatrix(this);\n                updateBounds(this, this);\n            }\n        }\n        else {\n            updateMatrix(this);\n        }\n    },\n    __updateNaturalSize() {\n        const { __: data, __layout: layout } = this;\n        data.__naturalWidth = layout.boxBounds.width;\n        data.__naturalHeight = layout.boxBounds.height;\n    },\n    __updateStrokeBounds() {\n        const layout = this.__layout;\n        copyAndSpread(layout.strokeBounds, layout.boxBounds, layout.strokeBoxSpread);\n    },\n    __updateRenderBounds() {\n        const layout = this.__layout;\n        layout.renderSpread > 0 ? copyAndSpread(layout.renderBounds, layout.boxBounds, layout.renderSpread) : copy$1(layout.renderBounds, layout.strokeBounds);\n    }\n};\n\nconst LeafRender = {\n    __render(canvas, options) {\n        if (this.__worldOpacity) {\n            canvas.setWorld(this.__nowWorld = this.__getNowWorld(options));\n            canvas.opacity = this.__.opacity;\n            if (this.__.__single) {\n                if (this.__.eraser === 'path')\n                    return this.__renderEraser(canvas, options);\n                const tempCanvas = canvas.getSameCanvas(true, true);\n                this.__draw(tempCanvas, options);\n                if (this.__worldFlipped) {\n                    canvas.copyWorldByReset(tempCanvas, this.__nowWorld, null, this.__.__blendMode, true);\n                }\n                else {\n                    canvas.copyWorldToInner(tempCanvas, this.__nowWorld, this.__layout.renderBounds, this.__.__blendMode);\n                }\n                tempCanvas.recycle(this.__nowWorld);\n            }\n            else {\n                this.__draw(canvas, options);\n            }\n        }\n    },\n    __clip(canvas, options) {\n        if (this.__worldOpacity) {\n            canvas.setWorld(this.__nowWorld = this.__getNowWorld(options));\n            this.__drawRenderPath(canvas);\n            this.windingRule ? canvas.clip(this.windingRule) : canvas.clip();\n        }\n    },\n    __updateWorldOpacity() {\n        this.__worldOpacity = this.__.visible ? (this.parent ? this.parent.__worldOpacity * this.__.opacity : this.__.opacity) : 0;\n        if (this.__layout.opacityChanged)\n            this.__layout.opacityChanged = false;\n    }\n};\n\nconst { excludeRenderBounds } = LeafBoundsHelper;\nconst BranchRender = {\n    __updateChange() {\n        const { __layout: layout } = this;\n        if (layout.childrenSortChanged) {\n            this.__updateSortChildren();\n            layout.childrenSortChanged = false;\n        }\n        this.__.__checkSingle();\n    },\n    __render(canvas, options) {\n        this.__nowWorld = this.__getNowWorld(options);\n        if (this.__worldOpacity) {\n            if (this.__.__single) {\n                if (this.__.eraser === 'path')\n                    return this.__renderEraser(canvas, options);\n                const tempCanvas = canvas.getSameCanvas(false, true);\n                this.__renderBranch(tempCanvas, options);\n                const nowWorld = this.__nowWorld;\n                canvas.opacity = this.__.opacity;\n                canvas.copyWorldByReset(tempCanvas, nowWorld, nowWorld, this.__.__blendMode, true);\n                tempCanvas.recycle(nowWorld);\n            }\n            else {\n                this.__renderBranch(canvas, options);\n            }\n        }\n    },\n    __renderBranch(canvas, options) {\n        if (this.__hasMask) {\n            this.__renderMask(canvas, options);\n        }\n        else {\n            const { children } = this;\n            for (let i = 0, len = children.length; i < len; i++) {\n                if (excludeRenderBounds(children[i], options))\n                    continue;\n                children[i].__render(canvas, options);\n            }\n        }\n    },\n    __clip(canvas, options) {\n        if (this.__worldOpacity) {\n            const { children } = this;\n            for (let i = 0, len = children.length; i < len; i++) {\n                if (excludeRenderBounds(children[i], options))\n                    continue;\n                children[i].__clip(canvas, options);\n            }\n        }\n    }\n};\n\nconst { LEAF, create } = IncrementId;\nconst { toInnerPoint, toOuterPoint, multiplyParent } = MatrixHelper;\nconst { toOuterOf } = BoundsHelper;\nconst { copy, move } = PointHelper;\nconst { moveLocal, zoomOfLocal, rotateOfLocal, skewOfLocal, moveWorld, zoomOfWorld, rotateOfWorld, skewOfWorld, transform, transformWorld, setTransform, getFlipTransform, getLocalOrigin, getRelativeWorld, drop } = LeafHelper;\nlet Leaf = class Leaf {\n    get tag() { return this.__tag; }\n    set tag(_value) { }\n    get __tag() { return 'Leaf'; }\n    get innerName() { return this.__.name || this.tag + this.innerId; }\n    get __DataProcessor() { return LeafData; }\n    get __LayoutProcessor() { return LeafLayout; }\n    get leaferIsCreated() { return this.leafer && this.leafer.created; }\n    get leaferIsReady() { return this.leafer && this.leafer.ready; }\n    get isLeafer() { return false; }\n    get isBranch() { return false; }\n    get isBranchLeaf() { return false; }\n    get __localMatrix() { return this.__local || this.__layout; }\n    get __localBoxBounds() { return this.__local || this.__layout; }\n    get worldTransform() { return this.__layout.getTransform('world'); }\n    get localTransform() { return this.__layout.getTransform('local'); }\n    get boxBounds() { return this.getBounds('box', 'inner'); }\n    get renderBounds() { return this.getBounds('render', 'inner'); }\n    get worldBoxBounds() { return this.getBounds('box'); }\n    get worldStrokeBounds() { return this.getBounds('stroke'); }\n    get worldRenderBounds() { return this.getBounds('render'); }\n    get worldOpacity() { this.__layout.update(); return this.__worldOpacity; }\n    get __worldFlipped() { return this.__world.scaleX < 0 || this.__world.scaleY < 0; }\n    get __onlyHitMask() { return this.__hasMask && !this.__.hitChildren; }\n    get __ignoreHitWorld() { return (this.__hasMask || this.__hasEraser) && this.__.hitChildren; }\n    get __inLazyBounds() { const { leafer } = this; return leafer && leafer.created && leafer.lazyBounds.hit(this.__world); }\n    get pathInputed() { return this.__.__pathInputed; }\n    set event(map) { this.on(map); }\n    constructor(data) {\n        this.innerId = create(LEAF);\n        this.reset(data);\n        if (this.__bubbleMap)\n            this.__emitLifeEvent(ChildEvent.CREATED);\n    }\n    reset(data) {\n        if (this.leafer)\n            this.leafer.forceRender(this.__world);\n        this.__world = { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0, x: 0, y: 0, width: 0, height: 0, scaleX: 1, scaleY: 1 };\n        if (data !== null)\n            this.__local = { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0, x: 0, y: 0, width: 0, height: 0 };\n        this.__worldOpacity = 1;\n        this.__ = new this.__DataProcessor(this);\n        this.__layout = new this.__LayoutProcessor(this);\n        if (this.__level)\n            this.resetCustom();\n        if (data) {\n            if (data.__)\n                data = data.toJSON();\n            data.children ? this.set(data) : Object.assign(this, data);\n        }\n    }\n    resetCustom() {\n        this.__hasMask = this.__hasEraser = null;\n        this.forceUpdate();\n    }\n    waitParent(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        this.parent ? item() : this.on(ChildEvent.ADD, item, 'once');\n    }\n    waitLeafer(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        this.leafer ? item() : this.on(ChildEvent.MOUNTED, item, 'once');\n    }\n    nextRender(item, bind, off) {\n        this.leafer ? this.leafer.nextRender(item, bind, off) : this.waitLeafer(() => this.leafer.nextRender(item, bind, off));\n    }\n    removeNextRender(item) {\n        this.nextRender(item, null, 'off');\n    }\n    __bindLeafer(leafer) {\n        if (this.isLeafer && leafer !== null)\n            leafer = this;\n        if (this.leafer && !leafer)\n            this.leafer.leafs--;\n        this.leafer = leafer;\n        if (leafer) {\n            leafer.leafs++;\n            this.__level = this.parent ? this.parent.__level + 1 : 1;\n            if (this.animation)\n                this.__runAnimation('in');\n            if (this.__bubbleMap)\n                this.__emitLifeEvent(ChildEvent.MOUNTED);\n        }\n        else {\n            this.__emitLifeEvent(ChildEvent.UNMOUNTED);\n        }\n        if (this.isBranch) {\n            const { children } = this;\n            for (let i = 0, len = children.length; i < len; i++) {\n                children[i].__bindLeafer(leafer);\n            }\n        }\n    }\n    set(_data, _isTemp) { }\n    get(_name) { return undefined; }\n    setAttr(name, value) { this[name] = value; }\n    getAttr(name) { return this[name]; }\n    getComputedAttr(name) { return this.__[name]; }\n    toJSON(options) {\n        if (options)\n            this.__layout.update();\n        return this.__.__getInputData(null, options);\n    }\n    toString(options) {\n        return JSON.stringify(this.toJSON(options));\n    }\n    toSVG() { return undefined; }\n    __SVG(_data) { }\n    toHTML() { return undefined; }\n    __setAttr(_attrName, _newValue) { return true; }\n    __getAttr(_attrName) { return undefined; }\n    setProxyAttr(_attrName, _newValue) { }\n    getProxyAttr(_attrName) { return undefined; }\n    find(_condition, _options) { return undefined; }\n    findTag(_tag) { return undefined; }\n    findOne(_condition, _options) { return undefined; }\n    findId(_id) { return undefined; }\n    focus(_value) { }\n    updateState() { }\n    updateLayout() {\n        this.__layout.update();\n    }\n    forceUpdate(attrName) {\n        if (attrName === undefined)\n            attrName = 'width';\n        else if (attrName === 'surface')\n            attrName = 'blendMode';\n        const value = this.__.__getInput(attrName);\n        this.__[attrName] = value === undefined ? null : undefined;\n        this[attrName] = value;\n    }\n    forceRender(_bounds) {\n        this.forceUpdate('surface');\n    }\n    __updateWorldMatrix() { }\n    __updateLocalMatrix() { }\n    __updateWorldBounds() { }\n    __updateLocalBounds() { }\n    __updateLocalBoxBounds() { }\n    __updateLocalStrokeBounds() { }\n    __updateLocalRenderBounds() { }\n    __updateBoxBounds() { }\n    __updateContentBounds() { }\n    __updateStrokeBounds() { }\n    __updateRenderBounds() { }\n    __updateAutoLayout() { }\n    __updateFlowLayout() { }\n    __updateNaturalSize() { }\n    __updateStrokeSpread() { return 0; }\n    __updateRenderSpread() { return 0; }\n    __onUpdateSize() { }\n    __updateEraser(value) {\n        this.__hasEraser = value ? true : this.children.some(item => item.__.eraser);\n    }\n    __renderEraser(canvas, options) {\n        canvas.save();\n        this.__clip(canvas, options);\n        const { renderBounds: r } = this.__layout;\n        canvas.clearRect(r.x, r.y, r.width, r.height);\n        canvas.restore();\n    }\n    __updateMask(value) {\n        this.__hasMask = value ? true : this.children.some(item => item.__.mask);\n    }\n    __renderMask(_canvas, _options) { }\n    __getNowWorld(options) {\n        if (options.matrix) {\n            if (!this.__cameraWorld)\n                this.__cameraWorld = {};\n            const cameraWorld = this.__cameraWorld;\n            multiplyParent(this.__world, options.matrix, cameraWorld, undefined, this.__world);\n            toOuterOf(this.__layout.renderBounds, cameraWorld, cameraWorld);\n            return cameraWorld;\n        }\n        else {\n            return this.__world;\n        }\n    }\n    getTransform(relative) {\n        return this.__layout.getTransform(relative || 'local');\n    }\n    getBounds(type, relative) {\n        return this.__layout.getBounds(type, relative);\n    }\n    getLayoutBounds(type, relative, unscale) {\n        return this.__layout.getLayoutBounds(type, relative, unscale);\n    }\n    getLayoutPoints(type, relative) {\n        return this.__layout.getLayoutPoints(type, relative);\n    }\n    getWorldBounds(inner, relative, change) {\n        const matrix = relative ? getRelativeWorld(this, relative) : this.worldTransform;\n        const to = change ? inner : {};\n        toOuterOf(inner, matrix, to);\n        return to;\n    }\n    worldToLocal(world, to, distance, relative) {\n        if (this.parent) {\n            this.parent.worldToInner(world, to, distance, relative);\n        }\n        else {\n            if (to)\n                copy(to, world);\n        }\n    }\n    localToWorld(local, to, distance, relative) {\n        if (this.parent) {\n            this.parent.innerToWorld(local, to, distance, relative);\n        }\n        else {\n            if (to)\n                copy(to, local);\n        }\n    }\n    worldToInner(world, to, distance, relative) {\n        if (relative) {\n            relative.innerToWorld(world, to, distance);\n            world = to ? to : world;\n        }\n        toInnerPoint(this.worldTransform, world, to, distance);\n    }\n    innerToWorld(inner, to, distance, relative) {\n        toOuterPoint(this.worldTransform, inner, to, distance);\n        if (relative)\n            relative.worldToInner(to ? to : inner, null, distance);\n    }\n    getBoxPoint(world, relative, distance, change) {\n        return this.getBoxPointByInner(this.getInnerPoint(world, relative, distance, change), null, null, true);\n    }\n    getBoxPointByInner(inner, _relative, _distance, change) {\n        const point = change ? inner : Object.assign({}, inner), { x, y } = this.boxBounds;\n        move(point, -x, -y);\n        return point;\n    }\n    getInnerPoint(world, relative, distance, change) {\n        const point = change ? world : {};\n        this.worldToInner(world, point, distance, relative);\n        return point;\n    }\n    getInnerPointByBox(box, _relative, _distance, change) {\n        const point = change ? box : Object.assign({}, box), { x, y } = this.boxBounds;\n        move(point, x, y);\n        return point;\n    }\n    getInnerPointByLocal(local, _relative, distance, change) {\n        return this.getInnerPoint(local, this.parent, distance, change);\n    }\n    getLocalPoint(world, relative, distance, change) {\n        const point = change ? world : {};\n        this.worldToLocal(world, point, distance, relative);\n        return point;\n    }\n    getLocalPointByInner(inner, _relative, distance, change) {\n        return this.getWorldPoint(inner, this.parent, distance, change);\n    }\n    getPagePoint(world, relative, distance, change) {\n        const layer = this.leafer ? this.leafer.zoomLayer : this;\n        return layer.getInnerPoint(world, relative, distance, change);\n    }\n    getWorldPoint(inner, relative, distance, change) {\n        const point = change ? inner : {};\n        this.innerToWorld(inner, point, distance, relative);\n        return point;\n    }\n    getWorldPointByBox(box, relative, distance, change) {\n        return this.getWorldPoint(this.getInnerPointByBox(box, null, null, change), relative, distance, true);\n    }\n    getWorldPointByLocal(local, relative, distance, change) {\n        const point = change ? local : {};\n        this.localToWorld(local, point, distance, relative);\n        return point;\n    }\n    getWorldPointByPage(page, relative, distance, change) {\n        const layer = this.leafer ? this.leafer.zoomLayer : this;\n        return layer.getWorldPoint(page, relative, distance, change);\n    }\n    setTransform(matrix, resize) {\n        setTransform(this, matrix, resize);\n    }\n    transform(matrix, resize) {\n        transform(this, matrix, resize);\n    }\n    move(x, y, transition) {\n        moveLocal(this, x, y, transition);\n    }\n    moveInner(x, y, transition) {\n        moveWorld(this, x, y, true, transition);\n    }\n    scaleOf(origin, scaleX, scaleY, resize) {\n        zoomOfLocal(this, getLocalOrigin(this, origin), scaleX, scaleY, resize);\n    }\n    rotateOf(origin, rotation) {\n        rotateOfLocal(this, getLocalOrigin(this, origin), rotation);\n    }\n    skewOf(origin, skewX, skewY, resize) {\n        skewOfLocal(this, getLocalOrigin(this, origin), skewX, skewY, resize);\n    }\n    transformWorld(worldTransform, resize) {\n        transformWorld(this, worldTransform, resize);\n    }\n    moveWorld(x, y, transition) {\n        moveWorld(this, x, y, false, transition);\n    }\n    scaleOfWorld(worldOrigin, scaleX, scaleY, resize) {\n        zoomOfWorld(this, worldOrigin, scaleX, scaleY, resize);\n    }\n    rotateOfWorld(worldOrigin, rotation) {\n        rotateOfWorld(this, worldOrigin, rotation);\n    }\n    skewOfWorld(worldOrigin, skewX, skewY, resize) {\n        skewOfWorld(this, worldOrigin, skewX, skewY, resize);\n    }\n    flip(axis) {\n        transform(this, getFlipTransform(this, axis));\n    }\n    scaleResize(scaleX, scaleY = scaleX, _noResize) {\n        this.scaleX *= scaleX;\n        this.scaleY *= scaleY;\n    }\n    __scaleResize(_scaleX, _scaleY) { }\n    resizeWidth(_width) { }\n    resizeHeight(_height) { }\n    __hitWorld(_point) { return true; }\n    __hit(_local) { return true; }\n    __hitFill(_inner) { return true; }\n    __hitStroke(_inner, _strokeWidth) { return true; }\n    __hitPixel(_inner) { return true; }\n    __drawHitPath(_canvas) { }\n    __updateHitCanvas() { }\n    __render(_canvas, _options) { }\n    __drawFast(_canvas, _options) { }\n    __draw(_canvas, _options) { }\n    __clip(_canvas, _options) { }\n    __renderShape(_canvas, _options, _ignoreFill, _ignoreStroke) { }\n    __updateWorldOpacity() { }\n    __updateChange() { }\n    __drawPath(_canvas) { }\n    __drawRenderPath(_canvas) { }\n    __updatePath() { }\n    __updateRenderPath() { }\n    getMotionPathData() {\n        return needPlugin('path');\n    }\n    getMotionPoint(_motionDistance) {\n        return needPlugin('path');\n    }\n    getMotionTotal() {\n        return 0;\n    }\n    __updateMotionPath() { }\n    __runAnimation(_type, _complete) { }\n    __updateSortChildren() { }\n    add(_child, _index) { }\n    remove(_child, destroy) {\n        if (this.parent)\n            this.parent.remove(this, destroy);\n    }\n    dropTo(parent, index, resize) {\n        drop(this, parent, index, resize);\n    }\n    on(_type, _listener, _options) { }\n    off(_type, _listener, _options) { }\n    on_(_type, _listener, _bind, _options) { return undefined; }\n    off_(_id) { }\n    once(_type, _listener, _capture) { }\n    emit(_type, _event, _capture) { }\n    emitEvent(_event, _capture) { }\n    hasEvent(_type, _capture) { return false; }\n    static changeAttr(attrName, defaultValue, fn) {\n        fn ? this.addAttr(attrName, defaultValue, fn) : defineDataProcessor(this.prototype, attrName, defaultValue);\n    }\n    static addAttr(attrName, defaultValue, fn) {\n        if (!fn)\n            fn = boundsType;\n        fn(defaultValue)(this.prototype, attrName);\n    }\n    __emitLifeEvent(type) {\n        if (this.hasEvent(type))\n            this.emitEvent(new ChildEvent(type, this, this.parent));\n    }\n    destroy() {\n        if (!this.destroyed) {\n            if (this.parent)\n                this.remove();\n            if (this.children)\n                this.clear();\n            this.__emitLifeEvent(ChildEvent.DESTROY);\n            this.__.destroy();\n            this.__layout.destroy();\n            this.destroyEventer();\n            this.destroyed = true;\n        }\n    }\n};\nLeaf = __decorate([\n    useModule(LeafDataProxy),\n    useModule(LeafMatrix),\n    useModule(LeafBounds),\n    useModule(LeafEventer),\n    useModule(LeafRender)\n], Leaf);\n\nconst { setListWithFn } = BoundsHelper;\nconst { sort } = BranchHelper;\nconst { localBoxBounds, localStrokeBounds, localRenderBounds, maskLocalBoxBounds, maskLocalStrokeBounds, maskLocalRenderBounds } = LeafBoundsHelper;\nlet Branch = class Branch extends Leaf {\n    __updateStrokeSpread() {\n        const { children } = this;\n        for (let i = 0, len = children.length; i < len; i++) {\n            if (children[i].__layout.strokeSpread)\n                return 1;\n        }\n        return 0;\n    }\n    __updateRenderSpread() {\n        const { children } = this;\n        for (let i = 0, len = children.length; i < len; i++) {\n            if (children[i].__layout.renderSpread)\n                return 1;\n        }\n        return 0;\n    }\n    __updateBoxBounds() {\n        setListWithFn(this.__layout.boxBounds, this.children, this.__hasMask ? maskLocalBoxBounds : localBoxBounds);\n    }\n    __updateStrokeBounds() {\n        setListWithFn(this.__layout.strokeBounds, this.children, this.__hasMask ? maskLocalStrokeBounds : localStrokeBounds);\n    }\n    __updateRenderBounds() {\n        setListWithFn(this.__layout.renderBounds, this.children, this.__hasMask ? maskLocalRenderBounds : localRenderBounds);\n    }\n    __updateSortChildren() {\n        let affectSort;\n        const { children } = this;\n        if (children.length > 1) {\n            for (let i = 0, len = children.length; i < len; i++) {\n                children[i].__tempNumber = i;\n                if (children[i].__.zIndex)\n                    affectSort = true;\n            }\n            children.sort(sort);\n            this.__layout.affectChildrenSort = affectSort;\n        }\n    }\n    add(child, index) {\n        if (child === this)\n            return;\n        const noIndex = index === undefined;\n        if (!child.__) {\n            if (child instanceof Array)\n                return child.forEach(item => { this.add(item, index); noIndex || index++; });\n            else\n                child = UICreator.get(child.tag, child);\n        }\n        if (child.parent)\n            child.parent.remove(child);\n        child.parent = this;\n        noIndex ? this.children.push(child) : this.children.splice(index, 0, child);\n        if (child.isBranch)\n            this.__.__childBranchNumber = (this.__.__childBranchNumber || 0) + 1;\n        child.__layout.boxChanged || child.__layout.boxChange();\n        child.__layout.matrixChanged || child.__layout.matrixChange();\n        if (child.__bubbleMap)\n            child.__emitLifeEvent(ChildEvent.ADD);\n        if (this.leafer) {\n            child.__bindLeafer(this.leafer);\n            if (this.leafer.created)\n                this.__emitChildEvent(ChildEvent.ADD, child);\n        }\n        this.__layout.affectChildrenSort && this.__layout.childrenSortChange();\n    }\n    addMany(...children) { this.add(children); }\n    remove(child, destroy) {\n        if (child) {\n            if (child.__) {\n                if (child.animationOut)\n                    child.__runAnimation('out', () => this.__remove(child, destroy));\n                else\n                    this.__remove(child, destroy);\n            }\n            else\n                this.find(child).forEach(item => this.remove(item, destroy));\n        }\n        else if (child === undefined) {\n            super.remove(null, destroy);\n        }\n    }\n    removeAll(destroy) {\n        const { children } = this;\n        if (children.length) {\n            this.children = [];\n            this.__preRemove();\n            this.__.__childBranchNumber = 0;\n            children.forEach(child => {\n                this.__realRemoveChild(child);\n                if (destroy)\n                    child.destroy();\n            });\n        }\n    }\n    clear() {\n        this.removeAll(true);\n    }\n    __remove(child, destroy) {\n        const index = this.children.indexOf(child);\n        if (index > -1) {\n            this.children.splice(index, 1);\n            if (child.isBranch)\n                this.__.__childBranchNumber = (this.__.__childBranchNumber || 1) - 1;\n            this.__preRemove();\n            this.__realRemoveChild(child);\n            if (destroy)\n                child.destroy();\n        }\n    }\n    __preRemove() {\n        if (this.__hasMask)\n            this.__updateMask();\n        if (this.__hasEraser)\n            this.__updateEraser();\n        this.__layout.boxChange();\n        this.__layout.affectChildrenSort && this.__layout.childrenSortChange();\n    }\n    __realRemoveChild(child) {\n        child.__emitLifeEvent(ChildEvent.REMOVE);\n        child.parent = null;\n        if (this.leafer) {\n            child.__bindLeafer(null);\n            if (this.leafer.created) {\n                this.__emitChildEvent(ChildEvent.REMOVE, child);\n                if (this.leafer.hitCanvasManager)\n                    this.leafer.hitCanvasManager.clear();\n            }\n        }\n    }\n    __emitChildEvent(type, child) {\n        const event = new ChildEvent(type, child, this);\n        if (this.hasEvent(type) && !this.isLeafer)\n            this.emitEvent(event);\n        this.leafer.emitEvent(event);\n    }\n};\nBranch = __decorate([\n    useModule(BranchRender)\n], Branch);\n\nclass LeafList {\n    get length() { return this.list.length; }\n    constructor(item) {\n        this.reset();\n        if (item)\n            item instanceof Array ? this.addList(item) : this.add(item);\n    }\n    has(leaf) {\n        return leaf && this.keys[leaf.innerId] !== undefined;\n    }\n    indexAt(index) {\n        return this.list[index];\n    }\n    indexOf(leaf) {\n        const index = this.keys[leaf.innerId];\n        return index === undefined ? -1 : index;\n    }\n    add(leaf) {\n        const { list, keys } = this;\n        if (keys[leaf.innerId] === undefined) {\n            list.push(leaf);\n            keys[leaf.innerId] = list.length - 1;\n        }\n    }\n    addAt(leaf, index = 0) {\n        const { keys } = this;\n        if (keys[leaf.innerId] === undefined) {\n            const { list } = this;\n            for (let i = index, len = list.length; i < len; i++)\n                keys[list[i].innerId]++;\n            if (index === 0) {\n                list.unshift(leaf);\n            }\n            else {\n                if (index > list.length)\n                    index = list.length;\n                list.splice(index, 0, leaf);\n            }\n            keys[leaf.innerId] = index;\n        }\n    }\n    addList(list) {\n        for (let i = 0; i < list.length; i++)\n            this.add(list[i]);\n    }\n    remove(leaf) {\n        const { list } = this;\n        let findIndex;\n        for (let i = 0, len = list.length; i < len; i++) {\n            if (findIndex !== undefined) {\n                this.keys[list[i].innerId] = i - 1;\n            }\n            else if (list[i].innerId === leaf.innerId) {\n                findIndex = i;\n                delete this.keys[leaf.innerId];\n            }\n        }\n        if (findIndex !== undefined)\n            list.splice(findIndex, 1);\n    }\n    sort(reverse) {\n        const { list } = this;\n        if (reverse) {\n            list.sort((a, b) => b.__level - a.__level);\n        }\n        else {\n            list.sort((a, b) => a.__level - b.__level);\n        }\n    }\n    forEach(itemCallback) {\n        this.list.forEach(itemCallback);\n    }\n    clone() {\n        const list = new LeafList();\n        list.list = [...this.list];\n        list.keys = Object.assign({}, this.keys);\n        return list;\n    }\n    update() {\n        this.keys = {};\n        const { list, keys } = this;\n        for (let i = 0, len = list.length; i < len; i++)\n            keys[list[i].innerId] = i;\n    }\n    reset() {\n        this.list = [];\n        this.keys = {};\n    }\n    destroy() {\n        this.reset();\n    }\n}\n\nclass LeafLevelList {\n    get length() { return this._length; }\n    constructor(item) {\n        this._length = 0;\n        this.reset();\n        if (item)\n            item instanceof Array ? this.addList(item) : this.add(item);\n    }\n    has(leaf) {\n        return this.keys[leaf.innerId] !== undefined;\n    }\n    without(leaf) {\n        return this.keys[leaf.innerId] === undefined;\n    }\n    sort(reverse) {\n        const { levels } = this;\n        if (reverse) {\n            levels.sort((a, b) => b - a);\n        }\n        else {\n            levels.sort((a, b) => a - b);\n        }\n    }\n    addList(list) {\n        list.forEach(leaf => { this.add(leaf); });\n    }\n    add(leaf) {\n        const { keys, levelMap } = this;\n        if (!keys[leaf.innerId]) {\n            keys[leaf.innerId] = 1;\n            if (!levelMap[leaf.__level]) {\n                levelMap[leaf.__level] = [leaf];\n                this.levels.push(leaf.__level);\n            }\n            else {\n                levelMap[leaf.__level].push(leaf);\n            }\n            this._length++;\n        }\n    }\n    forEach(itemCallback) {\n        let list;\n        this.levels.forEach(level => {\n            list = this.levelMap[level];\n            for (let i = 0, len = list.length; i < len; i++) {\n                itemCallback(list[i]);\n            }\n        });\n    }\n    reset() {\n        this.levelMap = {};\n        this.keys = {};\n        this.levels = [];\n        this._length = 0;\n    }\n    destroy() {\n        this.levelMap = null;\n    }\n}\n\nconst version = \"1.1.0\";\n\nexport { AlignHelper, Answer, AroundHelper, AutoBounds, BezierHelper, Bounds, BoundsHelper, Branch, BranchHelper, BranchRender, CanvasManager, ChildEvent, Creator, DataHelper, Debug, Direction4, Direction9, EllipseHelper, Event, EventCreator, Eventer, FileHelper, ImageEvent, ImageManager, IncrementId, LayoutEvent, Leaf, LeafBounds, LeafBoundsHelper, LeafData, LeafDataProxy, LeafEventer, LeafHelper, LeafLayout, LeafLevelList, LeafList, LeafMatrix, LeafRender, LeaferCanvasBase, LeaferEvent, LeaferImage, MathHelper, Matrix, MatrixHelper, NeedConvertToCanvasCommandMap, OneRadian, PI2, PI_2, PathBounds, PathCommandDataHelper, PathCommandMap, PathConvert, PathCorner, PathCreator, PathDrawer, PathHelper, PathNumberCommandLengthMap, PathNumberCommandMap, Platform, Point, PointHelper, PropertyEvent, RectHelper, RenderEvent, ResizeEvent, Run, StringNumberMap, TaskItem, TaskProcessor, TwoPointBoundsHelper, UICreator, WaitHelper, WatchEvent, affectRenderBoundsType, affectStrokeBoundsType, attr, autoLayoutType, boundsType, canvasPatch, canvasSizeAttrs, cursorType, dataProcessor, dataType, decorateLeafAttr, defineDataProcessor, defineKey, defineLeafAttr, doBoundsType, doStrokeType, emptyData, eraserType, getBoundsData, getDescriptor, getMatrixData, getPointData, hitType, isNull, layoutProcessor, maskType, naturalBoundsType, needPlugin, opacityType, pathInputType, pathType, pen, positionType, registerUI, registerUIEvent, rewrite, rewriteAble, rotationType, scaleType, sortType, strokeType, surfaceType, tempBounds, tempMatrix, tempPoint$2 as tempPoint, useModule, version, visibleType };\n", "import { decorateLeafAttr, attr, defineKey, needPlugin, Debug, LeafData, PathConvert, canvasSizeAttrs, dataProcessor, dataType, surfaceType, opacityType, visibleType, sortType, maskType, eraserType, positionType, boundsType, scaleType, rotationType, autoLayoutType, naturalBoundsType, pathInputType, pathType, hitType, strokeType, cursorType, rewrite, Leaf, useModule, rewriteAble, MathHelper, pen, PathCorner, PathDrawer, UICreator, registerUI, Branch, LeafList, ImageManager, DataHelper, Creator, CanvasManager, WaitHelper, LeaferEvent, Bounds, ResizeEvent, AutoBounds, Run, LayoutEvent, RenderEvent, WatchEvent, affectRenderBoundsType, BoundsHelper, Platform, PathCommandDataHelper, affectStrokeBoundsType, getPointData, PointHelper, PathBounds, ImageEvent, LeaferImage, Matrix, PathCreator } from '@leafer/core';\nexport * from '@leafer/core';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction effectType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            if (value)\n                this.__.__useEffect = true;\n            this.__layout.renderChanged || this.__layout.renderChange();\n        }\n    }));\n}\nfunction resizeType(defaultValue) {\n    return decorateLeafAttr(defaultValue, (key) => attr({\n        set(value) {\n            this.__setAttr(key, value);\n            this.__layout.boxChanged || this.__layout.boxChange();\n            this.__updateSize();\n        }\n    }));\n}\nfunction zoomLayerType() {\n    return (target, key) => {\n        const privateKey = '_' + key;\n        defineKey(target, key, {\n            set(value) { if (this.isLeafer)\n                this[privateKey] = value; },\n            get() {\n                return this.isApp\n                    ? this.tree.zoomLayer\n                    : (this.isLeafer ? (this[privateKey] || this) : this.leafer && this.leafer.zoomLayer);\n            }\n        });\n    };\n}\n\nconst TextConvert = {};\nconst ColorConvert = {};\nconst UnitConvert = {\n    number(value, percentRefer) {\n        if (typeof value === 'object')\n            return value.type === 'percent' ? value.value * percentRefer : value.value;\n        return value;\n    }\n};\nconst PathArrow = {};\nconst Paint = {};\nconst PaintImage = {};\nconst PaintGradient = {};\nconst Effect = {};\nconst Export = {};\nconst State = {\n    setStyleName(_leaf, _styleName, _value) { return needPlugin('state'); },\n    set(_leaf, _stateName) { return needPlugin('state'); }\n};\nconst Transition = {\n    list: {},\n    register(attrName, fn) { Transition.list[attrName] = fn; },\n    get(attrName) { return Transition.list[attrName]; }\n};\n\nconst { parse, objectToCanvasData } = PathConvert;\nconst emptyPaint = {};\nconst debug$1 = Debug.get('UIData');\nclass UIData extends LeafData {\n    get scale() { const { scaleX, scaleY } = this; return scaleX !== scaleY ? { x: scaleX, y: scaleY } : scaleX; }\n    get __strokeWidth() {\n        const { strokeWidth, strokeWidthFixed } = this;\n        if (strokeWidthFixed) {\n            const ui = this.__leaf;\n            let { scaleX } = ui.__nowWorld || ui.__world;\n            if (scaleX < 0)\n                scaleX = -scaleX;\n            return scaleX > 1 ? strokeWidth / scaleX : strokeWidth;\n        }\n        else\n            return strokeWidth;\n    }\n    get __hasStroke() { return this.stroke && this.strokeWidth; }\n    get __hasMultiPaint() {\n        const t = this;\n        if ((t.__isFills && t.fill.length > 1) || (t.__isStrokes && t.stroke.length > 1) || t.__useEffect)\n            return true;\n        return t.fill && this.__hasStroke;\n    }\n    get __clipAfterFill() { return (this.cornerRadius || this.__pathInputed); }\n    get __autoWidth() { return !this._width; }\n    get __autoHeight() { return !this._height; }\n    get __autoSide() { return !this._width || !this._height; }\n    get __autoSize() { return !this._width && !this._height; }\n    setVisible(value) {\n        this._visible = value;\n        const { leafer } = this.__leaf;\n        if (leafer)\n            leafer.watcher.hasVisible = true;\n    }\n    setWidth(value) {\n        if (value < 0) {\n            this._width = -value;\n            this.__leaf.scaleX *= -1;\n            debug$1.warn('width < 0, instead -scaleX ', this);\n        }\n        else\n            this._width = value;\n    }\n    setHeight(value) {\n        if (value < 0) {\n            this._height = -value;\n            this.__leaf.scaleY *= -1;\n            debug$1.warn('height < 0, instead -scaleY', this);\n        }\n        else\n            this._height = value;\n    }\n    setFill(value) {\n        if (this.__naturalWidth)\n            this.__removeNaturalSize();\n        if (typeof value === 'string' || !value) {\n            if (this.__isFills) {\n                this.__removeInput('fill');\n                PaintImage.recycleImage('fill', this);\n                this.__isFills = false;\n                if (this.__pixelFill)\n                    this.__pixelFill = false;\n            }\n            this._fill = value;\n        }\n        else if (typeof value === 'object') {\n            this.__setInput('fill', value);\n            this.__leaf.__layout.boxChanged || this.__leaf.__layout.boxChange();\n            this.__isFills = true;\n            this._fill || (this._fill = emptyPaint);\n        }\n    }\n    setStroke(value) {\n        if (typeof value === 'string' || !value) {\n            if (this.__isStrokes) {\n                this.__removeInput('stroke');\n                PaintImage.recycleImage('stroke', this);\n                this.__isStrokes = false;\n                if (this.__pixelStroke)\n                    this.__pixelStroke = false;\n            }\n            this._stroke = value;\n        }\n        else if (typeof value === 'object') {\n            this.__setInput('stroke', value);\n            this.__leaf.__layout.boxChanged || this.__leaf.__layout.boxChange();\n            this.__isStrokes = true;\n            this._stroke || (this._stroke = emptyPaint);\n        }\n    }\n    setPath(value) {\n        const isString = typeof value === 'string';\n        if (isString || (value && typeof value[0] === 'object')) {\n            this.__setInput('path', value);\n            this._path = isString ? parse(value) : objectToCanvasData(value);\n        }\n        else {\n            if (this.__input)\n                this.__removeInput('path');\n            this._path = value;\n        }\n    }\n    setShadow(value) {\n        this.__setInput('shadow', value);\n        if (value instanceof Array) {\n            if (value.some((item) => item.visible === false))\n                value = value.filter((item) => item.visible !== false);\n            this._shadow = value.length ? value : null;\n        }\n        else\n            this._shadow = value && value.visible !== false ? [value] : null;\n    }\n    setInnerShadow(value) {\n        this.__setInput('innerShadow', value);\n        if (value instanceof Array) {\n            if (value.some((item) => item.visible === false))\n                value = value.filter((item) => item.visible !== false);\n            this._innerShadow = value.length ? value : null;\n        }\n        else\n            this._innerShadow = value && value.visible !== false ? [value] : null;\n    }\n    __computePaint() {\n        const { fill, stroke } = this.__input;\n        if (fill)\n            Paint.compute('fill', this.__leaf);\n        if (stroke)\n            Paint.compute('stroke', this.__leaf);\n        this.__needComputePaint = false;\n    }\n}\n\nclass GroupData extends UIData {\n}\n\nclass BoxData extends GroupData {\n    get __boxStroke() { return !this.__pathInputed; }\n    get __drawAfterFill() { return this.overflow === 'hide' && this.__clipAfterFill && this.__leaf.children.length; }\n    get __clipAfterFill() { return this.__leaf.isOverflow || super.__clipAfterFill; }\n}\n\nclass LeaferData extends GroupData {\n    __getInputData(names, options) {\n        const data = super.__getInputData(names, options);\n        canvasSizeAttrs.forEach(key => delete data[key]);\n        return data;\n    }\n}\n\nclass FrameData extends BoxData {\n}\n\nclass LineData extends UIData {\n}\n\nclass RectData extends UIData {\n    get __boxStroke() { return !this.__pathInputed; }\n}\n\nclass EllipseData extends UIData {\n    get __boxStroke() { return !this.__pathInputed; }\n}\n\nclass PolygonData extends UIData {\n}\n\nclass StarData extends UIData {\n}\n\nclass PathData extends UIData {\n    get __pathInputed() { return 2; }\n}\n\nclass PenData extends GroupData {\n}\n\nconst fontWeightMap = {\n    'thin': 100,\n    'extra-light': 200,\n    'light': 300,\n    'normal': 400,\n    'medium': 500,\n    'semi-bold': 600,\n    'bold': 700,\n    'extra-bold': 800,\n    'black': 900\n};\nclass TextData extends UIData {\n    get __useNaturalRatio() { return false; }\n    setFontWeight(value) {\n        if (typeof value === 'string') {\n            this.__setInput('fontWeight', value);\n            this._fontWeight = fontWeightMap[value] || 400;\n        }\n        else {\n            if (this.__input)\n                this.__removeInput('fontWeight');\n            this._fontWeight = value;\n        }\n    }\n}\n\nclass ImageData extends RectData {\n    setUrl(value) {\n        this.__setImageFill(value);\n        this._url = value;\n    }\n    __setImageFill(value) {\n        if (this.__leaf.image)\n            this.__leaf.image = null;\n        this.fill = value ? { type: 'image', mode: 'stretch', url: value } : undefined;\n    }\n    __getData() {\n        const data = super.__getData();\n        delete data.fill;\n        return data;\n    }\n    __getInputData(names, options) {\n        const data = super.__getInputData(names, options);\n        delete data.fill;\n        return data;\n    }\n}\n\nclass CanvasData extends RectData {\n    get __isCanvas() { return true; }\n    get __drawAfterFill() { return true; }\n    __getInputData(names, options) {\n        const data = super.__getInputData(names, options);\n        data.url = this.__leaf.canvas.toDataURL('image/png');\n        return data;\n    }\n}\n\nconst UIBounds = {\n    __updateStrokeSpread() {\n        let width = 0, boxWidth = 0;\n        const data = this.__, { strokeAlign, strokeWidth } = data;\n        if ((data.stroke || data.hitStroke === 'all') && strokeWidth && strokeAlign !== 'inside') {\n            boxWidth = width = strokeAlign === 'center' ? strokeWidth / 2 : strokeWidth;\n            if (!data.__boxStroke) {\n                const miterLimitAddWidth = data.__isLinePath ? 0 : 10 * width;\n                const storkeCapAddWidth = data.strokeCap === 'none' ? 0 : strokeWidth;\n                width += Math.max(miterLimitAddWidth, storkeCapAddWidth);\n            }\n        }\n        if (data.__useArrow)\n            width += strokeWidth * 5;\n        this.__layout.strokeBoxSpread = boxWidth;\n        return width;\n    },\n    __updateRenderSpread() {\n        let width = 0;\n        const { shadow, innerShadow, blur, backgroundBlur } = this.__;\n        if (shadow)\n            shadow.forEach(item => width = Math.max(width, Math.max(Math.abs(item.y), Math.abs(item.x)) + (item.spread > 0 ? item.spread : 0) + item.blur * 1.5));\n        if (blur)\n            width = Math.max(width, blur);\n        let shapeWidth = width = Math.ceil(width);\n        if (innerShadow)\n            innerShadow.forEach(item => shapeWidth = Math.max(shapeWidth, Math.max(Math.abs(item.y), Math.abs(item.x)) + (item.spread < 0 ? -item.spread : 0) + item.blur * 1.5));\n        if (backgroundBlur)\n            shapeWidth = Math.max(shapeWidth, backgroundBlur);\n        this.__layout.renderShapeSpread = shapeWidth;\n        return width + (this.__layout.strokeSpread || 0);\n    }\n};\n\nconst UIRender = {\n    __updateChange() {\n        const data = this.__;\n        if (data.__useEffect) {\n            const { shadow, innerShadow, blur, backgroundBlur } = this.__;\n            data.__useEffect = !!(shadow || innerShadow || blur || backgroundBlur);\n        }\n        data.__checkSingle();\n        const complex = data.__isFills || data.__isStrokes || data.cornerRadius || data.__useEffect;\n        if (complex) {\n            data.__complex = true;\n        }\n        else {\n            data.__complex && (data.__complex = false);\n        }\n    },\n    __drawFast(canvas, options) {\n        drawFast(this, canvas, options);\n    },\n    __draw(canvas, options) {\n        const data = this.__;\n        if (data.__complex) {\n            if (data.__needComputePaint)\n                data.__computePaint();\n            const { fill, stroke, __drawAfterFill } = data;\n            this.__drawRenderPath(canvas);\n            if (data.__useEffect) {\n                const shape = Paint.shape(this, canvas, options);\n                this.__nowWorld = this.__getNowWorld(options);\n                const { shadow, innerShadow } = data;\n                if (shadow)\n                    Effect.shadow(this, canvas, shape);\n                if (fill)\n                    data.__isFills ? Paint.fills(fill, this, canvas) : Paint.fill(fill, this, canvas);\n                if (__drawAfterFill)\n                    this.__drawAfterFill(canvas, options);\n                if (innerShadow)\n                    Effect.innerShadow(this, canvas, shape);\n                if (stroke)\n                    data.__isStrokes ? Paint.strokes(stroke, this, canvas) : Paint.stroke(stroke, this, canvas);\n                if (shape.worldCanvas)\n                    shape.worldCanvas.recycle();\n                shape.canvas.recycle();\n            }\n            else {\n                if (fill)\n                    data.__isFills ? Paint.fills(fill, this, canvas) : Paint.fill(fill, this, canvas);\n                if (__drawAfterFill)\n                    this.__drawAfterFill(canvas, options);\n                if (stroke)\n                    data.__isStrokes ? Paint.strokes(stroke, this, canvas) : Paint.stroke(stroke, this, canvas);\n            }\n        }\n        else {\n            if (data.__pathInputed) {\n                drawFast(this, canvas, options);\n            }\n            else {\n                this.__drawFast(canvas, options);\n            }\n        }\n    },\n    __renderShape(canvas, options, ignoreFill, ignoreStroke) {\n        if (this.__worldOpacity) {\n            canvas.setWorld(this.__nowWorld = this.__getNowWorld(options));\n            const { fill, stroke } = this.__;\n            this.__drawRenderPath(canvas);\n            if (fill && !ignoreFill)\n                this.__.__pixelFill ? Paint.fills(fill, this, canvas) : Paint.fill('#000000', this, canvas);\n            if (this.__.__isCanvas)\n                this.__drawAfterFill(canvas, options);\n            if (stroke && !ignoreStroke)\n                this.__.__pixelStroke ? Paint.strokes(stroke, this, canvas) : Paint.stroke('#000000', this, canvas);\n        }\n    },\n    __drawAfterFill(canvas, options) {\n        if (this.__.__clipAfterFill) {\n            canvas.save();\n            this.windingRule ? canvas.clip(this.windingRule) : canvas.clip();\n            this.__drawContent(canvas, options);\n            canvas.restore();\n        }\n        else\n            this.__drawContent(canvas, options);\n    }\n};\nfunction drawFast(ui, canvas, options) {\n    const { fill, stroke, __drawAfterFill } = ui.__;\n    ui.__drawRenderPath(canvas);\n    if (fill)\n        Paint.fill(fill, ui, canvas);\n    if (__drawAfterFill)\n        ui.__drawAfterFill(canvas, options);\n    if (stroke)\n        Paint.stroke(stroke, ui, canvas);\n}\n\nconst RectRender = {\n    __drawFast(canvas, options) {\n        let { width, height, fill, stroke, __drawAfterFill } = this.__;\n        if (fill) {\n            canvas.fillStyle = fill;\n            canvas.fillRect(0, 0, width, height);\n        }\n        if (__drawAfterFill)\n            this.__drawAfterFill(canvas, options);\n        if (stroke) {\n            const { strokeAlign, __strokeWidth } = this.__;\n            if (!__strokeWidth)\n                return;\n            canvas.setStroke(stroke, __strokeWidth, this.__);\n            const half = __strokeWidth / 2;\n            switch (strokeAlign) {\n                case 'center':\n                    canvas.strokeRect(0, 0, width, height);\n                    break;\n                case 'inside':\n                    width -= __strokeWidth, height -= __strokeWidth;\n                    if (width < 0 || height < 0) {\n                        canvas.save();\n                        this.__clip(canvas, options);\n                        canvas.strokeRect(half, half, width, height);\n                        canvas.restore();\n                    }\n                    else\n                        canvas.strokeRect(half, half, width, height);\n                    break;\n                case 'outside':\n                    canvas.strokeRect(-half, -half, width + __strokeWidth, height + __strokeWidth);\n                    break;\n            }\n        }\n    }\n};\n\nvar UI_1;\nlet UI = UI_1 = class UI extends Leaf {\n    get app() { return this.leafer && this.leafer.app; }\n    get isFrame() { return false; }\n    set scale(value) { MathHelper.assignScale(this, value); }\n    get scale() { return this.__.scale; }\n    get pen() {\n        const { path } = this.__;\n        pen.set(this.path = path || []);\n        if (!path)\n            this.__drawPathByBox(pen);\n        return pen;\n    }\n    get editConfig() { return undefined; }\n    get editOuter() { return ''; }\n    get editInner() { return ''; }\n    constructor(data) {\n        super(data);\n    }\n    reset(_data) { }\n    set(data, transition) {\n        if (transition) {\n            if (transition === 'temp') {\n                this.lockNormalStyle = true;\n                Object.assign(this, data);\n                this.lockNormalStyle = false;\n            }\n            else\n                this.animate(data, transition);\n        }\n        else\n            Object.assign(this, data);\n    }\n    get(name) {\n        return typeof name === 'string' ? this.__.__getInput(name) : this.__.__getInputData(name);\n    }\n    createProxyData() { return undefined; }\n    find(_condition, _options) { return undefined; }\n    findTag(tag) { return this.find({ tag }); }\n    findOne(_condition, _options) { return undefined; }\n    findId(id) { return this.findOne({ id }); }\n    getPath(curve, pathForRender) {\n        this.__layout.update();\n        let path = pathForRender ? this.__.__pathForRender : this.__.path;\n        if (!path)\n            pen.set(path = []), this.__drawPathByBox(pen);\n        return curve ? PathConvert.toCanvasData(path, true) : path;\n    }\n    getPathString(curve, pathForRender, floatLength) {\n        return PathConvert.stringify(this.getPath(curve, pathForRender), floatLength);\n    }\n    load() {\n        this.__.__computePaint();\n    }\n    __onUpdateSize() {\n        if (this.__.__input) {\n            const data = this.__;\n            (data.lazy && !this.__inLazyBounds && !Export.running) ? data.__needComputePaint = true : data.__computePaint();\n        }\n    }\n    __updateRenderPath() {\n        if (this.__.path) {\n            const data = this.__;\n            data.__pathForRender = data.cornerRadius ? PathCorner.smooth(data.path, data.cornerRadius, data.cornerSmoothing) : data.path;\n            if (data.__useArrow)\n                PathArrow.addArrows(this, !data.cornerRadius);\n        }\n    }\n    __drawRenderPath(canvas) {\n        canvas.beginPath();\n        this.__drawPathByData(canvas, this.__.__pathForRender);\n    }\n    __drawPath(canvas) {\n        canvas.beginPath();\n        this.__drawPathByData(canvas, this.__.path);\n    }\n    __drawPathByData(drawer, data) {\n        data ? PathDrawer.drawPathByData(drawer, data) : this.__drawPathByBox(drawer);\n    }\n    __drawPathByBox(drawer) {\n        const { x, y, width, height } = this.__layout.boxBounds;\n        if (this.__.cornerRadius) {\n            const { cornerRadius } = this.__;\n            drawer.roundRect(x, y, width, height, typeof cornerRadius === 'number' ? [cornerRadius] : cornerRadius);\n        }\n        else\n            drawer.rect(x, y, width, height);\n    }\n    animate(_keyframe, _options, _type, _isTemp) {\n        return needPlugin('animate');\n    }\n    killAnimate(_type) { }\n    export(filename, options) {\n        return Export.export(this, filename, options);\n    }\n    clone(data) {\n        const json = this.toJSON();\n        if (data)\n            Object.assign(json, data);\n        return UI_1.one(json);\n    }\n    static one(data, x, y, width, height) {\n        return UICreator.get(data.tag || this.prototype.__tag, data, x, y, width, height);\n    }\n    static registerUI() {\n        registerUI()(this);\n    }\n    static registerData(data) {\n        dataProcessor(data)(this.prototype);\n    }\n    static setEditConfig(_config) { }\n    static setEditOuter(_toolName) { }\n    static setEditInner(_editorName) { }\n    destroy() {\n        this.fill = this.stroke = null;\n        if (this.__animate)\n            this.killAnimate();\n        super.destroy();\n    }\n};\n__decorate([\n    dataProcessor(UIData)\n], UI.prototype, \"__\", void 0);\n__decorate([\n    zoomLayerType()\n], UI.prototype, \"zoomLayer\", void 0);\n__decorate([\n    dataType('')\n], UI.prototype, \"id\", void 0);\n__decorate([\n    dataType('')\n], UI.prototype, \"name\", void 0);\n__decorate([\n    dataType('')\n], UI.prototype, \"className\", void 0);\n__decorate([\n    surfaceType('pass-through')\n], UI.prototype, \"blendMode\", void 0);\n__decorate([\n    opacityType(1)\n], UI.prototype, \"opacity\", void 0);\n__decorate([\n    visibleType(true)\n], UI.prototype, \"visible\", void 0);\n__decorate([\n    surfaceType(false)\n], UI.prototype, \"locked\", void 0);\n__decorate([\n    sortType(0)\n], UI.prototype, \"zIndex\", void 0);\n__decorate([\n    maskType(false)\n], UI.prototype, \"mask\", void 0);\n__decorate([\n    eraserType(false)\n], UI.prototype, \"eraser\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"x\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"y\", void 0);\n__decorate([\n    boundsType(100, true)\n], UI.prototype, \"width\", void 0);\n__decorate([\n    boundsType(100, true)\n], UI.prototype, \"height\", void 0);\n__decorate([\n    scaleType(1, true)\n], UI.prototype, \"scaleX\", void 0);\n__decorate([\n    scaleType(1, true)\n], UI.prototype, \"scaleY\", void 0);\n__decorate([\n    rotationType(0, true)\n], UI.prototype, \"rotation\", void 0);\n__decorate([\n    rotationType(0, true)\n], UI.prototype, \"skewX\", void 0);\n__decorate([\n    rotationType(0, true)\n], UI.prototype, \"skewY\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"offsetX\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"offsetY\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"scrollX\", void 0);\n__decorate([\n    positionType(0, true)\n], UI.prototype, \"scrollY\", void 0);\n__decorate([\n    autoLayoutType()\n], UI.prototype, \"origin\", void 0);\n__decorate([\n    autoLayoutType()\n], UI.prototype, \"around\", void 0);\n__decorate([\n    dataType(false)\n], UI.prototype, \"lazy\", void 0);\n__decorate([\n    naturalBoundsType(1)\n], UI.prototype, \"pixelRatio\", void 0);\n__decorate([\n    pathInputType()\n], UI.prototype, \"path\", void 0);\n__decorate([\n    pathType()\n], UI.prototype, \"windingRule\", void 0);\n__decorate([\n    pathType(true)\n], UI.prototype, \"closed\", void 0);\n__decorate([\n    boundsType(0)\n], UI.prototype, \"padding\", void 0);\n__decorate([\n    boundsType(false)\n], UI.prototype, \"lockRatio\", void 0);\n__decorate([\n    boundsType()\n], UI.prototype, \"widthRange\", void 0);\n__decorate([\n    boundsType()\n], UI.prototype, \"heightRange\", void 0);\n__decorate([\n    dataType(false)\n], UI.prototype, \"draggable\", void 0);\n__decorate([\n    dataType()\n], UI.prototype, \"dragBounds\", void 0);\n__decorate([\n    dataType(false)\n], UI.prototype, \"editable\", void 0);\n__decorate([\n    hitType(true)\n], UI.prototype, \"hittable\", void 0);\n__decorate([\n    hitType('path')\n], UI.prototype, \"hitFill\", void 0);\n__decorate([\n    strokeType('path')\n], UI.prototype, \"hitStroke\", void 0);\n__decorate([\n    hitType(false)\n], UI.prototype, \"hitBox\", void 0);\n__decorate([\n    hitType(true)\n], UI.prototype, \"hitChildren\", void 0);\n__decorate([\n    hitType(true)\n], UI.prototype, \"hitSelf\", void 0);\n__decorate([\n    hitType()\n], UI.prototype, \"hitRadius\", void 0);\n__decorate([\n    cursorType('')\n], UI.prototype, \"cursor\", void 0);\n__decorate([\n    surfaceType()\n], UI.prototype, \"fill\", void 0);\n__decorate([\n    strokeType()\n], UI.prototype, \"stroke\", void 0);\n__decorate([\n    strokeType('inside')\n], UI.prototype, \"strokeAlign\", void 0);\n__decorate([\n    strokeType(1)\n], UI.prototype, \"strokeWidth\", void 0);\n__decorate([\n    strokeType(false)\n], UI.prototype, \"strokeWidthFixed\", void 0);\n__decorate([\n    strokeType('none')\n], UI.prototype, \"strokeCap\", void 0);\n__decorate([\n    strokeType('miter')\n], UI.prototype, \"strokeJoin\", void 0);\n__decorate([\n    strokeType()\n], UI.prototype, \"dashPattern\", void 0);\n__decorate([\n    strokeType()\n], UI.prototype, \"dashOffset\", void 0);\n__decorate([\n    strokeType(10)\n], UI.prototype, \"miterLimit\", void 0);\n__decorate([\n    pathType(0)\n], UI.prototype, \"cornerRadius\", void 0);\n__decorate([\n    pathType()\n], UI.prototype, \"cornerSmoothing\", void 0);\n__decorate([\n    effectType()\n], UI.prototype, \"shadow\", void 0);\n__decorate([\n    effectType()\n], UI.prototype, \"innerShadow\", void 0);\n__decorate([\n    effectType()\n], UI.prototype, \"blur\", void 0);\n__decorate([\n    effectType()\n], UI.prototype, \"backgroundBlur\", void 0);\n__decorate([\n    effectType()\n], UI.prototype, \"grayscale\", void 0);\n__decorate([\n    dataType({})\n], UI.prototype, \"data\", void 0);\n__decorate([\n    rewrite(Leaf.prototype.reset)\n], UI.prototype, \"reset\", null);\nUI = UI_1 = __decorate([\n    useModule(UIBounds),\n    useModule(UIRender),\n    rewriteAble()\n], UI);\n\nlet Group = class Group extends UI {\n    get __tag() { return 'Group'; }\n    get isBranch() { return true; }\n    constructor(data) {\n        super(data);\n    }\n    reset(data) {\n        this.__setBranch();\n        super.reset(data);\n    }\n    __setBranch() {\n        if (!this.children)\n            this.children = [];\n    }\n    set(data, transition) {\n        if (data.children) {\n            const { children } = data;\n            delete data.children;\n            this.children ? this.clear() : this.__setBranch();\n            super.set(data, transition);\n            children.forEach(child => this.add(child));\n            data.children = children;\n        }\n        else\n            super.set(data, transition);\n    }\n    toJSON(options) {\n        const data = super.toJSON(options);\n        data.children = this.children.map(child => child.toJSON(options));\n        return data;\n    }\n    pick(_hitPoint, _options) { return undefined; }\n    addAt(child, index) {\n        this.add(child, index);\n    }\n    addAfter(child, after) {\n        this.add(child, this.children.indexOf(after) + 1);\n    }\n    addBefore(child, before) {\n        this.add(child, this.children.indexOf(before));\n    }\n    add(_child, _index) { }\n    addMany(..._children) { }\n    remove(_child, _destroy) { }\n    removeAll(_destroy) { }\n    clear() { }\n};\n__decorate([\n    dataProcessor(GroupData)\n], Group.prototype, \"__\", void 0);\nGroup = __decorate([\n    useModule(Branch),\n    registerUI()\n], Group);\n\nvar Leafer_1;\nconst debug = Debug.get('Leafer');\nlet Leafer = Leafer_1 = class Leafer extends Group {\n    get __tag() { return 'Leafer'; }\n    get isApp() { return false; }\n    get app() { return this.parent || this; }\n    get isLeafer() { return true; }\n    get imageReady() { return this.viewReady && ImageManager.isComplete; }\n    get layoutLocked() { return !this.layouter.running; }\n    get FPS() { return this.renderer ? this.renderer.FPS : 60; }\n    get cursorPoint() { return (this.interaction && this.interaction.hoverData) || { x: this.width / 2, y: this.height / 2 }; }\n    get clientBounds() { return this.canvas && this.canvas.getClientBounds(); }\n    constructor(userConfig, data) {\n        super(data);\n        this.config = {\n            type: 'design',\n            start: true,\n            hittable: true,\n            smooth: true,\n            lazySpeard: 100,\n            zoom: {\n                min: 0.01,\n                max: 256\n            },\n            move: {\n                holdSpaceKey: true,\n                holdMiddleKey: true,\n                autoDistance: 2\n            }\n        };\n        this.leafs = 0;\n        this.__eventIds = [];\n        this.__controllers = [];\n        this.__readyWait = [];\n        this.__viewReadyWait = [];\n        this.__viewCompletedWait = [];\n        this.__nextRenderWait = [];\n        this.userConfig = userConfig;\n        if (userConfig && (userConfig.view || userConfig.width))\n            this.init(userConfig);\n        Leafer_1.list.add(this);\n    }\n    init(userConfig, parentApp) {\n        if (this.canvas)\n            return;\n        this.__setLeafer(this);\n        if (userConfig)\n            DataHelper.assign(this.config, userConfig);\n        let start;\n        const { config } = this;\n        this.initType(config.type);\n        const canvas = this.canvas = Creator.canvas(config);\n        this.__controllers.push(this.renderer = Creator.renderer(this, canvas, config), this.watcher = Creator.watcher(this, config), this.layouter = Creator.layouter(this, config));\n        if (this.isApp)\n            this.__setApp();\n        this.__checkAutoLayout(config, parentApp);\n        this.view = canvas.view;\n        if (parentApp) {\n            this.__bindApp(parentApp);\n            start = parentApp.running;\n        }\n        else {\n            this.selector = Creator.selector(this);\n            this.interaction = Creator.interaction(this, canvas, this.selector, config);\n            if (this.interaction) {\n                this.__controllers.unshift(this.interaction);\n                this.hitCanvasManager = Creator.hitCanvasManager();\n            }\n            this.canvasManager = new CanvasManager();\n            start = config.start;\n        }\n        this.hittable = config.hittable;\n        this.fill = config.fill;\n        this.canvasManager.add(canvas);\n        this.__listenEvents();\n        if (start)\n            this.__startTimer = setTimeout(this.start.bind(this));\n        WaitHelper.run(this.__initWait);\n        this.onInit();\n    }\n    onInit() { }\n    initType(_type) { }\n    set(data, transition) {\n        this.waitInit(() => { super.set(data, transition); });\n    }\n    start() {\n        clearTimeout(this.__startTimer);\n        if (!this.running && this.canvas) {\n            this.running = true;\n            this.ready ? this.emitLeafer(LeaferEvent.RESTART) : this.emitLeafer(LeaferEvent.START);\n            this.__controllers.forEach(item => item.start());\n            if (!this.isApp)\n                this.renderer.render();\n        }\n    }\n    stop() {\n        clearTimeout(this.__startTimer);\n        if (this.running && this.canvas) {\n            this.__controllers.forEach(item => item.stop());\n            this.running = false;\n            this.emitLeafer(LeaferEvent.STOP);\n        }\n    }\n    unlockLayout() {\n        this.layouter.start();\n        this.updateLayout();\n    }\n    lockLayout() {\n        this.updateLayout();\n        this.layouter.stop();\n    }\n    resize(size) {\n        const data = DataHelper.copyAttrs({}, size, canvasSizeAttrs);\n        Object.keys(data).forEach(key => this[key] = data[key]);\n    }\n    forceRender(bounds) {\n        this.renderer.addBlock(bounds ? new Bounds(bounds) : this.canvas.bounds);\n        if (this.viewReady)\n            this.renderer.update();\n    }\n    updateCursor(cursor) {\n        const i = this.interaction;\n        if (i)\n            cursor ? i.setCursor(cursor) : i.updateCursor();\n    }\n    updateLazyBounds() {\n        this.lazyBounds = this.canvas.bounds.clone().spread(this.config.lazySpeard);\n    }\n    __doResize(size) {\n        const { canvas } = this;\n        if (!canvas || canvas.isSameSize(size))\n            return;\n        const old = DataHelper.copyAttrs({}, this.canvas, canvasSizeAttrs);\n        canvas.resize(size);\n        this.updateLazyBounds();\n        this.__onResize(new ResizeEvent(size, old));\n    }\n    __onResize(event) {\n        this.emitEvent(event);\n        DataHelper.copyAttrs(this.__, event, canvasSizeAttrs);\n        setTimeout(() => { if (this.canvasManager)\n            this.canvasManager.clearRecycled(); }, 0);\n    }\n    __setApp() { }\n    __bindApp(app) {\n        this.selector = app.selector;\n        this.interaction = app.interaction;\n        this.canvasManager = app.canvasManager;\n        this.hitCanvasManager = app.hitCanvasManager;\n    }\n    __setLeafer(leafer) {\n        this.leafer = leafer;\n        this.__level = 1;\n    }\n    __checkAutoLayout(config, parentApp) {\n        if (!parentApp) {\n            if (!config.width || !config.height)\n                this.autoLayout = new AutoBounds(config);\n            this.canvas.startAutoLayout(this.autoLayout, this.__onResize.bind(this));\n        }\n    }\n    __setAttr(attrName, newValue) {\n        if (this.canvas) {\n            if (canvasSizeAttrs.includes(attrName)) {\n                if (!newValue)\n                    debug.warn(attrName + ' is 0');\n                this.__changeCanvasSize(attrName, newValue);\n            }\n            else if (attrName === 'fill') {\n                this.__changeFill(newValue);\n            }\n            else if (attrName === 'hittable') {\n                if (!this.parent)\n                    this.canvas.hittable = newValue;\n            }\n            else if (attrName === 'zIndex') {\n                this.canvas.zIndex = newValue;\n                setTimeout(() => this.parent && this.parent.__updateSortChildren());\n            }\n        }\n        return super.__setAttr(attrName, newValue);\n    }\n    __getAttr(attrName) {\n        if (this.canvas && canvasSizeAttrs.includes(attrName))\n            return this.canvas[attrName];\n        return super.__getAttr(attrName);\n    }\n    __changeCanvasSize(attrName, newValue) {\n        const data = DataHelper.copyAttrs({}, this.canvas, canvasSizeAttrs);\n        data[attrName] = this.config[attrName] = newValue;\n        if (newValue)\n            this.canvas.stopAutoLayout();\n        this.__doResize(data);\n    }\n    __changeFill(newValue) {\n        this.config.fill = newValue;\n        if (this.canvas.allowBackgroundColor)\n            this.canvas.backgroundColor = newValue;\n        else\n            this.forceRender();\n    }\n    __onCreated() {\n        this.created = true;\n    }\n    __onReady() {\n        if (this.ready)\n            return;\n        this.ready = true;\n        this.emitLeafer(LeaferEvent.BEFORE_READY);\n        this.emitLeafer(LeaferEvent.READY);\n        this.emitLeafer(LeaferEvent.AFTER_READY);\n        WaitHelper.run(this.__readyWait);\n    }\n    __onViewReady() {\n        if (this.viewReady)\n            return;\n        this.viewReady = true;\n        this.emitLeafer(LeaferEvent.VIEW_READY);\n        WaitHelper.run(this.__viewReadyWait);\n    }\n    __onNextRender() {\n        if (this.viewReady) {\n            WaitHelper.run(this.__nextRenderWait);\n            const { imageReady } = this;\n            if (imageReady && !this.viewCompleted)\n                this.__checkViewCompleted();\n            if (!imageReady)\n                this.viewCompleted = false;\n        }\n    }\n    __checkViewCompleted(emit = true) {\n        this.nextRender(() => {\n            if (this.imageReady) {\n                if (emit)\n                    this.emitLeafer(LeaferEvent.VIEW_COMPLETED);\n                WaitHelper.run(this.__viewCompletedWait);\n                this.viewCompleted = true;\n            }\n        });\n    }\n    __onWatchData() {\n        if (this.watcher.childrenChanged && this.interaction) {\n            this.nextRender(() => this.interaction.updateCursor());\n        }\n    }\n    waitInit(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        if (!this.__initWait)\n            this.__initWait = [];\n        this.canvas ? item() : this.__initWait.push(item);\n    }\n    waitReady(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        this.ready ? item() : this.__readyWait.push(item);\n    }\n    waitViewReady(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        this.viewReady ? item() : this.__viewReadyWait.push(item);\n    }\n    waitViewCompleted(item, bind) {\n        if (bind)\n            item = item.bind(bind);\n        this.__viewCompletedWait.push(item);\n        if (this.viewCompleted)\n            this.__checkViewCompleted(false);\n        else if (!this.running)\n            this.start();\n    }\n    nextRender(item, bind, off) {\n        if (bind)\n            item = item.bind(bind);\n        const list = this.__nextRenderWait;\n        if (off) {\n            for (let i = 0; i < list.length; i++) {\n                if (list[i] === item) {\n                    list.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else\n            list.push(item);\n    }\n    zoom(_zoomType, _padding, _fixedScale) {\n        return needPlugin('view');\n    }\n    getValidMove(moveX, moveY) { return { x: moveX, y: moveY }; }\n    getValidScale(changeScale) { return changeScale; }\n    getWorldPointByClient(clientPoint, updateClient) {\n        return this.interaction && this.interaction.getLocal(clientPoint, updateClient);\n    }\n    getPagePointByClient(clientPoint, updateClient) {\n        return this.getPagePoint(this.getWorldPointByClient(clientPoint, updateClient));\n    }\n    updateClientBounds() {\n        this.canvas && this.canvas.updateClientBounds();\n    }\n    receiveEvent(_event) { }\n    __checkUpdateLayout() {\n        this.__layout.update();\n    }\n    emitLeafer(type) {\n        this.emitEvent(new LeaferEvent(type, this));\n    }\n    __listenEvents() {\n        const runId = Run.start('FirstCreate ' + this.innerName);\n        this.once(LeaferEvent.START, () => Run.end(runId));\n        this.once(LayoutEvent.START, () => this.updateLazyBounds());\n        this.once(LayoutEvent.END, () => this.__onReady());\n        this.once(RenderEvent.START, () => this.__onCreated());\n        this.once(RenderEvent.END, () => this.__onViewReady());\n        this.__eventIds.push(this.on_(WatchEvent.DATA, this.__onWatchData, this), this.on_(RenderEvent.NEXT, this.__onNextRender, this), this.on_(LayoutEvent.CHECK_UPDATE, this.__checkUpdateLayout, this));\n    }\n    __removeListenEvents() {\n        this.off_(this.__eventIds);\n        this.__eventIds.length = 0;\n    }\n    destroy(sync) {\n        const doDestory = () => {\n            if (!this.destroyed) {\n                Leafer_1.list.remove(this);\n                try {\n                    this.stop();\n                    this.emitEvent(new LeaferEvent(LeaferEvent.END, this));\n                    this.__removeListenEvents();\n                    this.__controllers.forEach(item => !(this.parent && item === this.interaction) && item.destroy());\n                    this.__controllers.length = 0;\n                    if (!this.parent) {\n                        if (this.selector)\n                            this.selector.destroy();\n                        if (this.hitCanvasManager)\n                            this.hitCanvasManager.destroy();\n                        this.canvasManager.destroy();\n                    }\n                    this.canvas.destroy();\n                    this.config.view = this.view = null;\n                    if (this.userConfig)\n                        this.userConfig.view = null;\n                    super.destroy();\n                    setTimeout(() => { ImageManager.clearRecycled(); }, 100);\n                }\n                catch (e) {\n                    debug.error(e);\n                }\n            }\n        };\n        sync ? doDestory() : setTimeout(doDestory);\n    }\n};\nLeafer.list = new LeafList();\n__decorate([\n    dataProcessor(LeaferData)\n], Leafer.prototype, \"__\", void 0);\n__decorate([\n    boundsType()\n], Leafer.prototype, \"pixelRatio\", void 0);\nLeafer = Leafer_1 = __decorate([\n    registerUI()\n], Leafer);\n\nlet Rect = class Rect extends UI {\n    get __tag() { return 'Rect'; }\n    constructor(data) {\n        super(data);\n    }\n};\n__decorate([\n    dataProcessor(RectData)\n], Rect.prototype, \"__\", void 0);\nRect = __decorate([\n    useModule(RectRender),\n    rewriteAble(),\n    registerUI()\n], Rect);\n\nconst { copy, add, includes: includes$1 } = BoundsHelper;\nconst rect = Rect.prototype, group = Group.prototype;\nconst childrenRenderBounds = {};\nlet Box = class Box extends Group {\n    get __tag() { return 'Box'; }\n    get isBranchLeaf() { return true; }\n    constructor(data) {\n        super(data);\n        this.__layout.renderChanged || this.__layout.renderChange();\n    }\n    __updateStrokeSpread() { return 0; }\n    __updateRectRenderSpread() { return 0; }\n    __updateRenderSpread() { return this.__updateRectRenderSpread() || -1; }\n    __updateRectBoxBounds() { }\n    __updateBoxBounds(_secondLayout) {\n        const data = this.__;\n        if (this.children.length) {\n            if (data.__autoSide) {\n                super.__updateBoxBounds();\n                const { boxBounds } = this.__layout;\n                if (!data.__autoSize) {\n                    if (data.__autoWidth) {\n                        boxBounds.width += boxBounds.x, boxBounds.x = 0;\n                        boxBounds.height = data.height, boxBounds.y = 0;\n                    }\n                    else {\n                        boxBounds.height += boxBounds.y, boxBounds.y = 0;\n                        boxBounds.width = data.width, boxBounds.x = 0;\n                    }\n                }\n                this.__updateNaturalSize();\n            }\n            else\n                this.__updateRectBoxBounds();\n        }\n        else\n            this.__updateRectBoxBounds();\n    }\n    __updateStrokeBounds() { }\n    __updateRenderBounds() {\n        let isOverflow;\n        const { renderBounds } = this.__layout;\n        if (this.children.length) {\n            super.__updateRenderBounds();\n            copy(childrenRenderBounds, renderBounds);\n            this.__updateRectRenderBounds();\n            isOverflow = !includes$1(renderBounds, childrenRenderBounds);\n            if (isOverflow && this.__.overflow !== 'hide')\n                add(renderBounds, childrenRenderBounds);\n        }\n        else\n            this.__updateRectRenderBounds();\n        !this.isOverflow !== !isOverflow && (this.isOverflow = isOverflow);\n    }\n    __updateRectRenderBounds() { }\n    __updateRectChange() { }\n    __updateChange() {\n        super.__updateChange();\n        this.__updateRectChange();\n    }\n    __renderRect(_canvas, _options) { }\n    __renderGroup(_canvas, _options) { }\n    __render(canvas, options) {\n        if (this.__.__drawAfterFill) {\n            this.__renderRect(canvas, options);\n        }\n        else {\n            this.__renderRect(canvas, options);\n            if (this.children.length)\n                this.__renderGroup(canvas, options);\n        }\n    }\n    __drawContent(canvas, options) {\n        this.__renderGroup(canvas, options);\n        if (this.__.__hasStroke) {\n            canvas.setWorld(this.__nowWorld);\n            this.__drawRenderPath(canvas);\n        }\n    }\n};\n__decorate([\n    dataProcessor(BoxData)\n], Box.prototype, \"__\", void 0);\n__decorate([\n    dataType(false)\n], Box.prototype, \"resizeChildren\", void 0);\n__decorate([\n    affectRenderBoundsType('show')\n], Box.prototype, \"overflow\", void 0);\n__decorate([\n    rewrite(rect.__updateStrokeSpread)\n], Box.prototype, \"__updateStrokeSpread\", null);\n__decorate([\n    rewrite(rect.__updateRenderSpread)\n], Box.prototype, \"__updateRectRenderSpread\", null);\n__decorate([\n    rewrite(rect.__updateBoxBounds)\n], Box.prototype, \"__updateRectBoxBounds\", null);\n__decorate([\n    rewrite(rect.__updateStrokeBounds)\n], Box.prototype, \"__updateStrokeBounds\", null);\n__decorate([\n    rewrite(rect.__updateRenderBounds)\n], Box.prototype, \"__updateRectRenderBounds\", null);\n__decorate([\n    rewrite(rect.__updateChange)\n], Box.prototype, \"__updateRectChange\", null);\n__decorate([\n    rewrite(rect.__render)\n], Box.prototype, \"__renderRect\", null);\n__decorate([\n    rewrite(group.__render)\n], Box.prototype, \"__renderGroup\", null);\nBox = __decorate([\n    rewriteAble(),\n    registerUI()\n], Box);\n\nlet Frame = class Frame extends Box {\n    get __tag() { return 'Frame'; }\n    get isFrame() { return true; }\n    constructor(data) {\n        super(data);\n    }\n};\n__decorate([\n    dataProcessor(FrameData)\n], Frame.prototype, \"__\", void 0);\n__decorate([\n    surfaceType('#FFFFFF')\n], Frame.prototype, \"fill\", void 0);\n__decorate([\n    affectRenderBoundsType('hide')\n], Frame.prototype, \"overflow\", void 0);\nFrame = __decorate([\n    registerUI()\n], Frame);\n\nconst { moveTo: moveTo$3, closePath: closePath$2, ellipse } = PathCommandDataHelper;\nlet Ellipse = class Ellipse extends UI {\n    get __tag() { return 'Ellipse'; }\n    constructor(data) {\n        super(data);\n    }\n    __updatePath() {\n        const { width, height, innerRadius, startAngle, endAngle } = this.__;\n        const rx = width / 2, ry = height / 2;\n        const path = this.__.path = [];\n        if (innerRadius) {\n            if (startAngle || endAngle) {\n                if (innerRadius < 1)\n                    ellipse(path, rx, ry, rx * innerRadius, ry * innerRadius, 0, startAngle, endAngle, false);\n                ellipse(path, rx, ry, rx, ry, 0, endAngle, startAngle, true);\n                if (innerRadius < 1)\n                    closePath$2(path);\n            }\n            else {\n                if (innerRadius < 1) {\n                    ellipse(path, rx, ry, rx * innerRadius, ry * innerRadius);\n                    moveTo$3(path, width, ry);\n                }\n                ellipse(path, rx, ry, rx, ry, 0, 360, 0, true);\n            }\n            if (Platform.ellipseToCurve)\n                this.__.path = this.getPath(true);\n        }\n        else {\n            if (startAngle || endAngle) {\n                moveTo$3(path, rx, ry);\n                ellipse(path, rx, ry, rx, ry, 0, startAngle, endAngle, false);\n                closePath$2(path);\n            }\n            else {\n                ellipse(path, rx, ry, rx, ry);\n            }\n        }\n    }\n};\n__decorate([\n    dataProcessor(EllipseData)\n], Ellipse.prototype, \"__\", void 0);\n__decorate([\n    pathType(0)\n], Ellipse.prototype, \"innerRadius\", void 0);\n__decorate([\n    pathType(0)\n], Ellipse.prototype, \"startAngle\", void 0);\n__decorate([\n    pathType(0)\n], Ellipse.prototype, \"endAngle\", void 0);\nEllipse = __decorate([\n    registerUI()\n], Ellipse);\n\nconst { moveTo: moveTo$2, lineTo: lineTo$2, drawPoints: drawPoints$1 } = PathCommandDataHelper;\nconst { rotate, getAngle, getDistance, defaultPoint } = PointHelper;\nconst { toBounds } = PathBounds;\nlet Line = class Line extends UI {\n    get __tag() { return 'Line'; }\n    get toPoint() {\n        const { width, rotation } = this.__;\n        const to = getPointData();\n        if (width)\n            to.x = width;\n        if (rotation)\n            rotate(to, rotation);\n        return to;\n    }\n    set toPoint(value) {\n        this.width = getDistance(defaultPoint, value);\n        this.rotation = getAngle(defaultPoint, value);\n        if (this.height)\n            this.height = 0;\n    }\n    constructor(data) {\n        super(data);\n    }\n    __updatePath() {\n        const data = this.__;\n        const path = data.path = [];\n        if (data.points) {\n            drawPoints$1(path, data.points, false, data.closed);\n        }\n        else {\n            moveTo$2(path, 0, 0);\n            lineTo$2(path, this.width, 0);\n        }\n    }\n    __updateRenderPath() {\n        const data = this.__;\n        if (!this.pathInputed && data.points && data.curve) {\n            drawPoints$1(data.__pathForRender = [], data.points, data.curve, data.closed);\n            if (data.__useArrow)\n                PathArrow.addArrows(this, false);\n        }\n        else\n            super.__updateRenderPath();\n    }\n    __updateBoxBounds() {\n        if (this.points) {\n            toBounds(this.__.__pathForRender, this.__layout.boxBounds);\n        }\n        else\n            super.__updateBoxBounds();\n    }\n};\n__decorate([\n    dataProcessor(LineData)\n], Line.prototype, \"__\", void 0);\n__decorate([\n    affectStrokeBoundsType('center')\n], Line.prototype, \"strokeAlign\", void 0);\n__decorate([\n    boundsType(0)\n], Line.prototype, \"height\", void 0);\n__decorate([\n    pathType()\n], Line.prototype, \"points\", void 0);\n__decorate([\n    pathType(0)\n], Line.prototype, \"curve\", void 0);\n__decorate([\n    pathType(false)\n], Line.prototype, \"closed\", void 0);\nLine = __decorate([\n    registerUI()\n], Line);\n\nconst { sin: sin$1, cos: cos$1, PI: PI$1 } = Math;\nconst { moveTo: moveTo$1, lineTo: lineTo$1, closePath: closePath$1, drawPoints } = PathCommandDataHelper;\nconst line = Line.prototype;\nlet Polygon = class Polygon extends UI {\n    get __tag() { return 'Polygon'; }\n    constructor(data) {\n        super(data);\n    }\n    __updatePath() {\n        const path = this.__.path = [];\n        if (this.__.points) {\n            drawPoints(path, this.__.points, false, true);\n        }\n        else {\n            const { width, height, sides } = this.__;\n            const rx = width / 2, ry = height / 2;\n            moveTo$1(path, rx, 0);\n            for (let i = 1; i < sides; i++) {\n                lineTo$1(path, rx + rx * sin$1((i * 2 * PI$1) / sides), ry - ry * cos$1((i * 2 * PI$1) / sides));\n            }\n        }\n        closePath$1(path);\n    }\n    __updateRenderPath() { }\n    __updateBoxBounds() { }\n};\n__decorate([\n    dataProcessor(PolygonData)\n], Polygon.prototype, \"__\", void 0);\n__decorate([\n    pathType(3)\n], Polygon.prototype, \"sides\", void 0);\n__decorate([\n    pathType()\n], Polygon.prototype, \"points\", void 0);\n__decorate([\n    pathType(0)\n], Polygon.prototype, \"curve\", void 0);\n__decorate([\n    rewrite(line.__updateRenderPath)\n], Polygon.prototype, \"__updateRenderPath\", null);\n__decorate([\n    rewrite(line.__updateBoxBounds)\n], Polygon.prototype, \"__updateBoxBounds\", null);\nPolygon = __decorate([\n    rewriteAble(),\n    registerUI()\n], Polygon);\n\nconst { sin, cos, PI } = Math;\nconst { moveTo, lineTo, closePath } = PathCommandDataHelper;\nlet Star = class Star extends UI {\n    get __tag() { return 'Star'; }\n    constructor(data) {\n        super(data);\n    }\n    __updatePath() {\n        const { width, height, corners, innerRadius } = this.__;\n        const rx = width / 2, ry = height / 2;\n        const path = this.__.path = [];\n        moveTo(path, rx, 0);\n        for (let i = 1; i < corners * 2; i++) {\n            lineTo(path, rx + (i % 2 === 0 ? rx : rx * innerRadius) * sin((i * PI) / corners), ry - (i % 2 === 0 ? ry : ry * innerRadius) * cos((i * PI) / corners));\n        }\n        closePath(path);\n    }\n};\n__decorate([\n    dataProcessor(StarData)\n], Star.prototype, \"__\", void 0);\n__decorate([\n    pathType(5)\n], Star.prototype, \"corners\", void 0);\n__decorate([\n    pathType(0.382)\n], Star.prototype, \"innerRadius\", void 0);\nStar = __decorate([\n    registerUI()\n], Star);\n\nlet Image = class Image extends Rect {\n    get __tag() { return 'Image'; }\n    get ready() { return this.image ? this.image.ready : false; }\n    constructor(data) {\n        super(data);\n        this.on(ImageEvent.LOADED, (e) => {\n            if (e.attrName === 'fill' && e.attrValue.url === this.url)\n                this.image = e.image;\n        });\n    }\n    destroy() {\n        this.image = null;\n        super.destroy();\n    }\n};\n__decorate([\n    dataProcessor(ImageData)\n], Image.prototype, \"__\", void 0);\n__decorate([\n    boundsType('')\n], Image.prototype, \"url\", void 0);\nImage = __decorate([\n    registerUI()\n], Image);\nconst MyImage = Image;\n\nlet Canvas = class Canvas extends Rect {\n    get __tag() { return 'Canvas'; }\n    get ready() { return !this.url; }\n    constructor(data) {\n        super(data);\n        this.canvas = Creator.canvas(this.__);\n        this.context = this.canvas.context;\n        if (data && data.url)\n            this.drawImage(data.url);\n    }\n    drawImage(url) {\n        new LeaferImage({ url }).load((image) => {\n            this.context.drawImage(image.view, 0, 0);\n            this.url = undefined;\n            this.paint();\n            this.emitEvent(new ImageEvent(ImageEvent.LOADED, { image }));\n        });\n    }\n    draw(ui, offset, scale, rotation) {\n        const matrix = new Matrix(ui.worldTransform).invert();\n        const m = new Matrix();\n        if (offset)\n            m.translate(offset.x, offset.y);\n        if (scale)\n            typeof scale === 'number' ? m.scale(scale) : m.scale(scale.x, scale.y);\n        if (rotation)\n            m.rotate(rotation);\n        matrix.multiplyParent(m);\n        ui.__render(this.canvas, { matrix: matrix.withScale() });\n        this.paint();\n    }\n    paint() {\n        this.forceRender();\n    }\n    __drawContent(canvas, _options) {\n        const { width, height } = this.__, { view } = this.canvas;\n        canvas.drawImage(view, 0, 0, view.width, view.height, 0, 0, width, height);\n    }\n    __updateSize() {\n        const { canvas } = this;\n        if (canvas) {\n            const { smooth } = this.__;\n            if (canvas.smooth !== smooth)\n                canvas.smooth = smooth;\n            canvas.resize(this.__);\n        }\n    }\n    destroy() {\n        if (this.canvas) {\n            this.canvas.destroy();\n            this.canvas = this.context = null;\n        }\n        super.destroy();\n    }\n};\n__decorate([\n    dataProcessor(CanvasData)\n], Canvas.prototype, \"__\", void 0);\n__decorate([\n    resizeType(100)\n], Canvas.prototype, \"width\", void 0);\n__decorate([\n    resizeType(100)\n], Canvas.prototype, \"height\", void 0);\n__decorate([\n    resizeType(1)\n], Canvas.prototype, \"pixelRatio\", void 0);\n__decorate([\n    resizeType(true)\n], Canvas.prototype, \"smooth\", void 0);\n__decorate([\n    resizeType()\n], Canvas.prototype, \"contextSettings\", void 0);\nCanvas = __decorate([\n    registerUI()\n], Canvas);\n\nconst { copyAndSpread, includes, isSame, spread, setList } = BoundsHelper;\nlet Text = class Text extends UI {\n    get __tag() { return 'Text'; }\n    get textDrawData() {\n        this.__layout.update();\n        return this.__.__textDrawData;\n    }\n    constructor(data) {\n        super(data);\n    }\n    __drawHitPath(canvas) {\n        const { __lineHeight, fontSize, __baseLine, __textDrawData: data } = this.__;\n        canvas.beginPath();\n        if (this.__.__letterSpacing < 0) {\n            this.__drawPathByData(canvas);\n        }\n        else {\n            data.rows.forEach(row => canvas.rect(row.x, row.y - __baseLine, row.width, __lineHeight < fontSize ? fontSize : __lineHeight));\n        }\n    }\n    __drawPathByData(drawer, _data) {\n        const { x, y, width, height } = this.__layout.boxBounds;\n        drawer.rect(x, y, width, height);\n    }\n    __drawRenderPath(canvas) {\n        canvas.font = this.__.__font;\n    }\n    __updateTextDrawData() {\n        const data = this.__;\n        const { lineHeight, letterSpacing, fontFamily, fontSize, fontWeight, italic, textCase, textOverflow, padding } = data;\n        data.__lineHeight = UnitConvert.number(lineHeight, fontSize);\n        data.__letterSpacing = UnitConvert.number(letterSpacing, fontSize);\n        data.__padding = padding ? MathHelper.fourNumber(padding) : undefined;\n        data.__baseLine = data.__lineHeight - (data.__lineHeight - fontSize * 0.7) / 2;\n        data.__font = `${italic ? 'italic ' : ''}${textCase === 'small-caps' ? 'small-caps ' : ''}${fontWeight !== 'normal' ? fontWeight + ' ' : ''}${fontSize}px ${fontFamily}`;\n        data.__clipText = textOverflow !== 'show' && !data.__autoSize;\n        data.__textDrawData = TextConvert.getDrawData(data.text, this.__);\n    }\n    __updateBoxBounds() {\n        const data = this.__;\n        const layout = this.__layout;\n        const { fontSize, italic, padding, __autoWidth: autoWidth, __autoHeight: autoHeight } = data;\n        this.__updateTextDrawData();\n        const { bounds } = data.__textDrawData;\n        const b = layout.boxBounds;\n        if (data.__lineHeight < fontSize)\n            spread(bounds, fontSize / 2);\n        if (autoWidth || autoHeight) {\n            b.x = autoWidth ? bounds.x : 0;\n            b.y = autoHeight ? bounds.y : 0;\n            b.width = autoWidth ? bounds.width : data.width;\n            b.height = autoHeight ? bounds.height : data.height;\n            if (padding) {\n                const [top, right, bottom, left] = data.__padding;\n                if (autoWidth)\n                    b.x -= left, b.width += (right + left);\n                if (autoHeight)\n                    b.y -= top, b.height += (bottom + top);\n            }\n            this.__updateNaturalSize();\n        }\n        else\n            super.__updateBoxBounds();\n        if (italic)\n            b.width += fontSize * 0.16;\n        const contentBounds = includes(b, bounds) ? b : bounds;\n        if (!isSame(contentBounds, layout.contentBounds)) {\n            layout.contentBounds = contentBounds;\n            layout.renderChanged = true;\n            setList(data.__textBoxBounds = {}, [b, bounds]);\n        }\n        else\n            data.__textBoxBounds = contentBounds;\n    }\n    __updateRenderSpread() {\n        let width = super.__updateRenderSpread();\n        if (!width)\n            width = this.__layout.boxBounds === this.__layout.contentBounds ? 0 : 1;\n        return width;\n    }\n    __updateRenderBounds() {\n        copyAndSpread(this.__layout.renderBounds, this.__.__textBoxBounds, this.__layout.renderSpread);\n    }\n};\n__decorate([\n    dataProcessor(TextData)\n], Text.prototype, \"__\", void 0);\n__decorate([\n    boundsType(0)\n], Text.prototype, \"width\", void 0);\n__decorate([\n    boundsType(0)\n], Text.prototype, \"height\", void 0);\n__decorate([\n    dataType(false)\n], Text.prototype, \"resizeFontSize\", void 0);\n__decorate([\n    surfaceType('#000000')\n], Text.prototype, \"fill\", void 0);\n__decorate([\n    affectStrokeBoundsType('outside')\n], Text.prototype, \"strokeAlign\", void 0);\n__decorate([\n    hitType('all')\n], Text.prototype, \"hitFill\", void 0);\n__decorate([\n    boundsType('')\n], Text.prototype, \"text\", void 0);\n__decorate([\n    boundsType('L')\n], Text.prototype, \"fontFamily\", void 0);\n__decorate([\n    boundsType(12)\n], Text.prototype, \"fontSize\", void 0);\n__decorate([\n    boundsType('normal')\n], Text.prototype, \"fontWeight\", void 0);\n__decorate([\n    boundsType(false)\n], Text.prototype, \"italic\", void 0);\n__decorate([\n    boundsType('none')\n], Text.prototype, \"textCase\", void 0);\n__decorate([\n    boundsType('none')\n], Text.prototype, \"textDecoration\", void 0);\n__decorate([\n    boundsType(0)\n], Text.prototype, \"letterSpacing\", void 0);\n__decorate([\n    boundsType({ type: 'percent', value: 1.5 })\n], Text.prototype, \"lineHeight\", void 0);\n__decorate([\n    boundsType(0)\n], Text.prototype, \"paraIndent\", void 0);\n__decorate([\n    boundsType(0)\n], Text.prototype, \"paraSpacing\", void 0);\n__decorate([\n    boundsType('left')\n], Text.prototype, \"textAlign\", void 0);\n__decorate([\n    boundsType('top')\n], Text.prototype, \"verticalAlign\", void 0);\n__decorate([\n    boundsType(true)\n], Text.prototype, \"autoSizeAlign\", void 0);\n__decorate([\n    boundsType('normal')\n], Text.prototype, \"textWrap\", void 0);\n__decorate([\n    boundsType('show')\n], Text.prototype, \"textOverflow\", void 0);\nText = __decorate([\n    registerUI()\n], Text);\n\nlet Path = class Path extends UI {\n    get __tag() { return 'Path'; }\n    constructor(data) {\n        super(data);\n    }\n};\n__decorate([\n    dataProcessor(PathData)\n], Path.prototype, \"__\", void 0);\n__decorate([\n    affectStrokeBoundsType('center')\n], Path.prototype, \"strokeAlign\", void 0);\nPath = __decorate([\n    registerUI()\n], Path);\n\nlet Pen = class Pen extends Group {\n    get __tag() { return 'Pen'; }\n    constructor(data) {\n        super(data);\n    }\n    setStyle(data) {\n        const path = this.pathElement = new Path(data);\n        this.pathStyle = data;\n        this.__path = path.path || (path.path = []);\n        this.add(path);\n        return this;\n    }\n    beginPath() { return this; }\n    moveTo(_x, _y) { return this; }\n    lineTo(_x, _y) { return this; }\n    bezierCurveTo(_x1, _y1, _x2, _y2, _x, _y) { return this; }\n    quadraticCurveTo(_x1, _y1, _x, _y) { return this; }\n    closePath() { return this; }\n    rect(_x, _y, _width, _height) { return this; }\n    roundRect(_x, _y, _width, _height, _cornerRadius) { return this; }\n    ellipse(_x, _y, _radiusX, _radiusY, _rotation, _startAngle, _endAngle, _anticlockwise) { return this; }\n    arc(_x, _y, _radius, _startAngle, _endAngle, _anticlockwise) { return this; }\n    arcTo(_x1, _y1, _x2, _y2, _radius) { return this; }\n    drawEllipse(_x, _y, _radiusX, _radiusY, _rotation, _startAngle, _endAngle, _anticlockwise) { return this; }\n    drawArc(_x, _y, _radius, _startAngle, _endAngle, _anticlockwise) { return this; }\n    drawPoints(_points, _curve, _close) { return this; }\n    clearPath() { return this; }\n    paint() {\n        if (!this.pathElement.__layout.boxChanged)\n            this.pathElement.forceUpdate('path');\n    }\n};\n__decorate([\n    dataProcessor(PenData)\n], Pen.prototype, \"__\", void 0);\n__decorate([\n    penPathType()\n], Pen.prototype, \"path\", void 0);\nPen = __decorate([\n    useModule(PathCreator, ['set', 'path', 'paint']),\n    registerUI()\n], Pen);\nfunction penPathType() {\n    return (target, key) => {\n        defineKey(target, key, {\n            get() { return this.__path; }\n        });\n    };\n}\n\nexport { Box, BoxData, Canvas, CanvasData, ColorConvert, Effect, Ellipse, EllipseData, Export, Frame, FrameData, Group, GroupData, Image, ImageData, Leafer, LeaferData, Line, LineData, MyImage, Paint, PaintGradient, PaintImage, Path, PathArrow, PathData, Pen, PenData, Polygon, PolygonData, Rect, RectData, RectRender, Star, StarData, State, Text, TextConvert, TextData, Transition, UI, UIBounds, UIData, UIRender, UnitConvert, effectType, resizeType, zoomLayerType };\n", "import { Leafer, State, UI, ImageManager, Rect, Box, Group, Platform as Platform$1, Creator as Creator$1 } from '@leafer-ui/draw';\nexport * from '@leafer-ui/draw';\nimport { registerUI, Creator, PropertyEvent, Debug, DataHelper, canvasSizeAttrs, LayoutEvent, RenderEvent, Event, EventCreator, registerUIEvent, LeafList, PointHelper, BoundsHelper, Bounds, ResizeEvent, LeaferEvent, CanvasManager, Leaf, Matrix, Platform, tempBounds, LeaferCanvasBase } from '@leafer/core';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nlet App = class App extends Leafer {\n    get __tag() { return 'App'; }\n    get isApp() { return true; }\n    constructor(userConfig, data) {\n        super(userConfig, data);\n    }\n    init(userConfig, parentApp) {\n        super.init(userConfig, parentApp);\n        if (userConfig) {\n            const { ground, tree, sky, editor } = userConfig;\n            if (ground)\n                this.ground = this.addLeafer(ground);\n            if (tree || editor)\n                this.tree = this.addLeafer(tree);\n            if (sky || editor)\n                this.sky = this.addLeafer(sky || { type: 'draw', usePartRender: false });\n            if (editor)\n                this.sky.add(this.editor = Creator.editor(editor));\n        }\n    }\n    __setApp() {\n        const { canvas } = this;\n        const { realCanvas, view } = this.config;\n        if (realCanvas || view === this.canvas.view || !canvas.parentView)\n            this.realCanvas = true;\n        else\n            canvas.unrealCanvas();\n        this.leafer = this;\n        this.watcher.disable();\n        this.layouter.disable();\n        this.__eventIds.push(this.on_(PropertyEvent.CHANGE, this.__onPropertyChange, this));\n    }\n    start() {\n        super.start();\n        this.children.forEach(leafer => leafer.start());\n    }\n    stop() {\n        this.children.forEach(leafer => leafer.stop());\n        super.stop();\n    }\n    unlockLayout() {\n        super.unlockLayout();\n        this.children.forEach(leafer => leafer.unlockLayout());\n    }\n    lockLayout() {\n        super.lockLayout();\n        this.children.forEach(leafer => leafer.lockLayout());\n    }\n    forceRender(bounds) {\n        this.children.forEach(leafer => leafer.forceRender(bounds));\n    }\n    addLeafer(merge) {\n        const leafer = new Leafer(merge);\n        this.add(leafer);\n        return leafer;\n    }\n    add(leafer, index) {\n        if (!leafer.view) {\n            if (this.realCanvas && !this.canvas.bounds) {\n                setTimeout(() => this.add(leafer, index), 10);\n                return;\n            }\n            leafer.init(this.__getChildConfig(leafer.userConfig), this);\n        }\n        super.add(leafer, index);\n        if (index !== undefined)\n            leafer.canvas.childIndex = index;\n        this.__listenChildEvents(leafer);\n    }\n    __onPropertyChange() {\n        if (Debug.showHitView)\n            this.children.forEach(leafer => leafer.forceUpdate('surface'));\n    }\n    __onCreated() {\n        this.created = this.children.every(child => child.created);\n    }\n    __onReady() {\n        if (this.children.every(child => child.ready))\n            super.__onReady();\n    }\n    __onViewReady() {\n        if (this.children.every(child => child.viewReady))\n            super.__onViewReady();\n    }\n    __onChildRenderEnd(e) {\n        this.renderer.addBlock(e.renderBounds);\n        if (this.viewReady)\n            this.renderer.update();\n    }\n    __render(canvas, options) {\n        if (canvas.context) {\n            const m = options.matrix;\n            if (m)\n                canvas.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n            this.children.forEach(leafer => canvas.copyWorld(leafer.canvas));\n        }\n    }\n    __onResize(event) {\n        this.children.forEach(leafer => leafer.resize(event));\n        super.__onResize(event);\n    }\n    __checkUpdateLayout() {\n        this.children.forEach(leafer => leafer.__layout.update());\n    }\n    __getChildConfig(userConfig) {\n        let config = Object.assign({}, this.config);\n        config.hittable = config.realCanvas = undefined;\n        if (userConfig)\n            DataHelper.assign(config, userConfig);\n        if (this.autoLayout)\n            DataHelper.copyAttrs(config, this, canvasSizeAttrs);\n        config.view = this.realCanvas ? undefined : this.view;\n        config.fill = undefined;\n        return config;\n    }\n    __listenChildEvents(leafer) {\n        leafer.once(LayoutEvent.END, () => this.__onReady());\n        leafer.once(RenderEvent.START, () => this.__onCreated());\n        leafer.once(RenderEvent.END, () => this.__onViewReady());\n        if (this.realCanvas)\n            this.__eventIds.push(leafer.on_(RenderEvent.END, this.__onChildRenderEnd, this));\n    }\n};\nApp = __decorate([\n    registerUI()\n], App);\n\nconst downKeyMap = {};\nconst Keyboard = {\n    isHoldSpaceKey() {\n        return Keyboard.isHold('Space');\n    },\n    isHold(code) {\n        return downKeyMap[code];\n    },\n    setDownCode(code) {\n        if (!downKeyMap[code])\n            downKeyMap[code] = true;\n    },\n    setUpCode(code) {\n        downKeyMap[code] = false;\n    }\n};\n\nconst PointerButton = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n    defaultLeft(event) { if (!event.buttons)\n        event.buttons = 1; },\n    left(event) { return event.buttons === 1; },\n    right(event) { return event.buttons === 2; },\n    middle(event) { return event.buttons === 4; }\n};\n\nclass UIEvent extends Event {\n    get spaceKey() { return Keyboard.isHoldSpaceKey(); }\n    get left() { return PointerButton.left(this); }\n    get right() { return PointerButton.right(this); }\n    get middle() { return PointerButton.middle(this); }\n    constructor(params) {\n        super(params.type);\n        this.bubbles = true;\n        Object.assign(this, params);\n    }\n    getBoxPoint(relative) {\n        return (relative || this.current).getBoxPoint(this);\n    }\n    getInnerPoint(relative) {\n        return (relative || this.current).getInnerPoint(this);\n    }\n    getLocalPoint(relative) {\n        return (relative || this.current).getLocalPoint(this);\n    }\n    getPagePoint() {\n        return this.current.getPagePoint(this);\n    }\n    getInner(relative) { return this.getInnerPoint(relative); }\n    getLocal(relative) { return this.getLocalPoint(relative); }\n    getPage() { return this.getPagePoint(); }\n    static changeName(oldName, newName) {\n        EventCreator.changeName(oldName, newName);\n    }\n}\n\nlet PointerEvent = class PointerEvent extends UIEvent {\n};\nPointerEvent.POINTER = 'pointer';\nPointerEvent.BEFORE_DOWN = 'pointer.before_down';\nPointerEvent.BEFORE_MOVE = 'pointer.before_move';\nPointerEvent.BEFORE_UP = 'pointer.before_up';\nPointerEvent.DOWN = 'pointer.down';\nPointerEvent.MOVE = 'pointer.move';\nPointerEvent.UP = 'pointer.up';\nPointerEvent.OVER = 'pointer.over';\nPointerEvent.OUT = 'pointer.out';\nPointerEvent.ENTER = 'pointer.enter';\nPointerEvent.LEAVE = 'pointer.leave';\nPointerEvent.TAP = 'tap';\nPointerEvent.DOUBLE_TAP = 'double_tap';\nPointerEvent.CLICK = 'click';\nPointerEvent.DOUBLE_CLICK = 'double_click';\nPointerEvent.LONG_PRESS = 'long_press';\nPointerEvent.LONG_TAP = 'long_tap';\nPointerEvent.MENU = 'pointer.menu';\nPointerEvent.MENU_TAP = 'pointer.menu_tap';\nPointerEvent = __decorate([\n    registerUIEvent()\n], PointerEvent);\nconst MyPointerEvent = PointerEvent;\n\nconst tempMove = {};\nlet DragEvent = class DragEvent extends PointerEvent {\n    static setList(data) {\n        this.list = data instanceof LeafList ? data : new LeafList(data);\n    }\n    static setData(data) {\n        this.data = data;\n    }\n    static getValidMove(leaf, start, total) {\n        const { draggable, dragBounds } = leaf, move = leaf.getLocalPoint(total, null, true);\n        PointHelper.move(move, start.x - leaf.x, start.y - leaf.y);\n        if (dragBounds)\n            this.getMoveInDragBounds(leaf.__local, dragBounds === 'parent' ? leaf.parent.boxBounds : dragBounds, move, true);\n        if (draggable === 'x')\n            move.y = 0;\n        if (draggable === 'y')\n            move.x = 0;\n        return move;\n    }\n    static getMoveInDragBounds(childBox, dragBounds, move, change) {\n        const x = childBox.x + move.x, y = childBox.y + move.y, right = x + childBox.width, bottom = y + childBox.height;\n        const boundsRight = dragBounds.x + dragBounds.width, boundsBottom = dragBounds.y + dragBounds.height;\n        if (!change)\n            move = Object.assign({}, move);\n        if (BoundsHelper.includes(childBox, dragBounds)) {\n            if (x > dragBounds.x)\n                move.x += dragBounds.x - x;\n            else if (right < boundsRight)\n                move.x += boundsRight - right;\n            if (y > dragBounds.y)\n                move.y += dragBounds.y - y;\n            else if (bottom < boundsBottom)\n                move.y += boundsBottom - bottom;\n        }\n        else {\n            if (x < dragBounds.x)\n                move.x += dragBounds.x - x;\n            else if (right > boundsRight)\n                move.x += boundsRight - right;\n            if (y < dragBounds.y)\n                move.y += dragBounds.y - y;\n            else if (bottom > boundsBottom)\n                move.y += boundsBottom - bottom;\n        }\n        return move;\n    }\n    getPageMove(total) {\n        this.assignMove(total);\n        return this.current.getPagePoint(tempMove, null, true);\n    }\n    getInnerMove(relative, total) {\n        if (!relative)\n            relative = this.current;\n        this.assignMove(total);\n        return relative.getInnerPoint(tempMove, null, true);\n    }\n    getLocalMove(relative, total) {\n        if (!relative)\n            relative = this.current;\n        this.assignMove(total);\n        return relative.getLocalPoint(tempMove, null, true);\n    }\n    getPageTotal() {\n        return this.getPageMove(true);\n    }\n    getInnerTotal(relative) {\n        return this.getInnerMove(relative, true);\n    }\n    getLocalTotal(relative) {\n        return this.getLocalMove(relative, true);\n    }\n    getPageBounds() {\n        const total = this.getPageTotal(), start = this.getPagePoint(), bounds = {};\n        BoundsHelper.set(bounds, start.x - total.x, start.y - total.y, total.x, total.y);\n        BoundsHelper.unsign(bounds);\n        return bounds;\n    }\n    assignMove(total) {\n        tempMove.x = total ? this.totalX : this.moveX;\n        tempMove.y = total ? this.totalY : this.moveY;\n    }\n};\nDragEvent.BEFORE_DRAG = 'drag.before_drag';\nDragEvent.START = 'drag.start';\nDragEvent.DRAG = 'drag';\nDragEvent.END = 'drag.end';\nDragEvent.OVER = 'drag.over';\nDragEvent.OUT = 'drag.out';\nDragEvent.ENTER = 'drag.enter';\nDragEvent.LEAVE = 'drag.leave';\nDragEvent = __decorate([\n    registerUIEvent()\n], DragEvent);\nconst MyDragEvent = DragEvent;\n\nlet DropEvent = class DropEvent extends PointerEvent {\n    static setList(data) {\n        DragEvent.setList(data);\n    }\n    static setData(data) {\n        DragEvent.setData(data);\n    }\n};\nDropEvent.DROP = 'drop';\nDropEvent = __decorate([\n    registerUIEvent()\n], DropEvent);\n\nlet MoveEvent = class MoveEvent extends DragEvent {\n};\nMoveEvent.BEFORE_MOVE = 'move.before_move';\nMoveEvent.START = 'move.start';\nMoveEvent.MOVE = 'move';\nMoveEvent.END = 'move.end';\nMoveEvent = __decorate([\n    registerUIEvent()\n], MoveEvent);\n\nlet RotateEvent = class RotateEvent extends UIEvent {\n};\nRotateEvent.BEFORE_ROTATE = 'rotate.before_rotate';\nRotateEvent.START = 'rotate.start';\nRotateEvent.ROTATE = 'rotate';\nRotateEvent.END = 'rotate.end';\nRotateEvent = __decorate([\n    registerUIEvent()\n], RotateEvent);\n\nlet SwipeEvent = class SwipeEvent extends DragEvent {\n};\nSwipeEvent.SWIPE = 'swipe';\nSwipeEvent.LEFT = 'swipe.left';\nSwipeEvent.RIGHT = 'swipe.right';\nSwipeEvent.UP = 'swipe.up';\nSwipeEvent.DOWN = 'swipe.down';\nSwipeEvent = __decorate([\n    registerUIEvent()\n], SwipeEvent);\n\nlet ZoomEvent = class ZoomEvent extends UIEvent {\n};\nZoomEvent.BEFORE_ZOOM = 'zoom.before_zoom';\nZoomEvent.START = 'zoom.start';\nZoomEvent.ZOOM = 'zoom';\nZoomEvent.END = 'zoom.end';\nZoomEvent = __decorate([\n    registerUIEvent()\n], ZoomEvent);\n\nlet KeyEvent = class KeyEvent extends UIEvent {\n};\nKeyEvent.DOWN = 'key.down';\nKeyEvent.HOLD = 'key.hold';\nKeyEvent.UP = 'key.up';\nKeyEvent = __decorate([\n    registerUIEvent()\n], KeyEvent);\n\nfunction addInteractionWindow(leafer) {\n    if (leafer.isApp)\n        return;\n    leafer.__eventIds.push(leafer.on_(MoveEvent.BEFORE_MOVE, (e) => {\n        leafer.zoomLayer.move(leafer.getValidMove(e.moveX, e.moveY));\n    }), leafer.on_(ZoomEvent.BEFORE_ZOOM, (e) => {\n        const { zoomLayer } = leafer;\n        const changeScale = leafer.getValidScale(e.scale);\n        if (changeScale !== 1) {\n            PointHelper.scaleOf(zoomLayer, e, changeScale);\n            zoomLayer.scale = zoomLayer.__.scaleX * changeScale;\n        }\n    }));\n}\n\nfunction document(leafer) {\n    addInteractionWindow(leafer);\n    const { move, zoom } = leafer.config;\n    move.scroll = 'limit';\n    zoom.min = 1;\n}\n\nfunction block(leafer) {\n    const { config } = leafer;\n    (config.wheel || (config.wheel = {})).preventDefault = false;\n    (config.touch || (config.touch = {})).preventDefault = 'auto';\n}\n\nconst debug$1 = Debug.get('LeaferTypeCreator');\nconst LeaferTypeCreator = {\n    list: {},\n    register(name, fn) {\n        list[name] && debug$1.repeat(name);\n        list[name] = fn;\n    },\n    run(name, leafer) {\n        const fn = list[name];\n        fn && fn(leafer);\n    }\n};\nconst { list, register } = LeaferTypeCreator;\nregister('design', addInteractionWindow);\nregister('document', document);\nregister('block', block);\n\nconst leafer = Leafer.prototype;\nleafer.initType = function (type) {\n    LeaferTypeCreator.run(type, this);\n};\nleafer.getValidMove = function (moveX, moveY) {\n    const { scroll, disabled } = this.app.config.move;\n    if (scroll) {\n        Math.abs(moveX) > Math.abs(moveY) ? moveY = 0 : moveX = 0;\n        if (scroll === 'limit') {\n            const { x, y, width, height } = new Bounds(this.__world).addPoint(this.zoomLayer);\n            const right = x + width - this.width, bottom = y + height - this.height;\n            if (x >= 0 && right <= 0)\n                moveX = 0;\n            else if (moveX > 0) {\n                if (x + moveX > 0)\n                    moveX = -x;\n            }\n            else if (moveX < 0 && right + moveX < 0)\n                moveX = -right;\n            if (y >= 0 && bottom <= 0)\n                moveY = 0;\n            else if (moveY > 0) {\n                if (y + moveY > 0)\n                    moveY = -y;\n            }\n            else if (moveY < 0 && bottom + moveY < 0)\n                moveY = -bottom;\n        }\n    }\n    return { x: disabled ? 0 : moveX, y: disabled ? 0 : moveY };\n};\nleafer.getValidScale = function (changeScale) {\n    const { scaleX } = this.zoomLayer.__, { min, max, disabled } = this.app.config.zoom, absScale = Math.abs(scaleX * changeScale);\n    if (absScale < min)\n        changeScale = min / scaleX;\n    else if (absScale > max)\n        changeScale = max / scaleX;\n    return disabled ? 1 : changeScale;\n};\n\nclass Transformer {\n    get transforming() { return !!(this.moveData || this.zoomData || this.rotateData); }\n    constructor(interaction) {\n        this.interaction = interaction;\n    }\n    move(data) {\n        const { interaction } = this;\n        if (!data.moveType)\n            data.moveType = 'move';\n        if (!this.moveData) {\n            const { path } = interaction.selector.getByPoint(data, interaction.hitRadius);\n            data.path = path;\n            this.moveData = Object.assign(Object.assign({}, data), { moveX: 0, moveY: 0 });\n            interaction.cancelHover();\n            interaction.emit(MoveEvent.START, this.moveData);\n        }\n        data.path = this.moveData.path;\n        interaction.emit(MoveEvent.BEFORE_MOVE, data);\n        interaction.emit(MoveEvent.MOVE, data);\n        this.transformEndWait();\n    }\n    zoom(data) {\n        const { interaction } = this;\n        if (!this.zoomData) {\n            const { path } = interaction.selector.getByPoint(data, interaction.hitRadius);\n            data.path = path;\n            this.zoomData = Object.assign(Object.assign({}, data), { scale: 1 });\n            interaction.cancelHover();\n            interaction.emit(ZoomEvent.START, this.zoomData);\n        }\n        data.path = this.zoomData.path;\n        interaction.emit(ZoomEvent.BEFORE_ZOOM, data);\n        interaction.emit(ZoomEvent.ZOOM, data);\n        this.transformEndWait();\n    }\n    rotate(data) {\n        const { interaction } = this;\n        if (!this.rotateData) {\n            const { path } = interaction.selector.getByPoint(data, interaction.hitRadius);\n            data.path = path;\n            this.rotateData = Object.assign(Object.assign({}, data), { rotation: 0 });\n            interaction.cancelHover();\n            interaction.emit(RotateEvent.START, this.rotateData);\n        }\n        data.path = this.rotateData.path;\n        interaction.emit(RotateEvent.BEFORE_ROTATE, data);\n        interaction.emit(RotateEvent.ROTATE, data);\n        this.transformEndWait();\n    }\n    transformEndWait() {\n        clearTimeout(this.transformTimer);\n        this.transformTimer = setTimeout(() => {\n            this.transformEnd();\n        }, this.interaction.config.pointer.transformTime);\n    }\n    transformEnd() {\n        this.moveEnd();\n        this.zoomEnd();\n        this.rotateEnd();\n    }\n    moveEnd() {\n        if (this.moveData) {\n            this.interaction.emit(MoveEvent.END, this.moveData);\n            this.moveData = null;\n        }\n    }\n    zoomEnd() {\n        if (this.zoomData) {\n            this.interaction.emit(ZoomEvent.END, this.zoomData);\n            this.zoomData = null;\n        }\n    }\n    rotateEnd() {\n        if (this.rotateData) {\n            this.interaction.emit(RotateEvent.END, this.rotateData);\n            this.rotateData = null;\n        }\n    }\n    destroy() {\n        this.zoomData = this.moveData = this.rotateData = null;\n    }\n}\n\nconst InteractionHelper = {\n    getMoveEventData(center, move, event) {\n        return Object.assign(Object.assign({}, event), { x: center.x, y: center.y, moveX: move.x, moveY: move.y });\n    },\n    getRotateEventData(center, angle, event) {\n        return Object.assign(Object.assign({}, event), { x: center.x, y: center.y, rotation: angle });\n    },\n    getZoomEventData(center, scale, event) {\n        return Object.assign(Object.assign({}, event), { x: center.x, y: center.y, scale });\n    },\n    getDragEventData(startPoint, lastPoint, event) {\n        return Object.assign(Object.assign({}, event), { x: event.x, y: event.y, moveX: event.x - lastPoint.x, moveY: event.y - lastPoint.y, totalX: event.x - startPoint.x, totalY: event.y - startPoint.y });\n    },\n    getDropEventData(event, list, data) {\n        return Object.assign(Object.assign({}, event), { list,\n            data });\n    },\n    getSwipeDirection(angle) {\n        if (angle < -45 && angle > -135) {\n            return SwipeEvent.UP;\n        }\n        else if (angle > 45 && angle < 135) {\n            return SwipeEvent.DOWN;\n        }\n        else if (angle <= 45 && angle >= -45) {\n            return SwipeEvent.RIGHT;\n        }\n        else {\n            return SwipeEvent.LEFT;\n        }\n    },\n    getSwipeEventData(startPoint, lastDragData, event) {\n        return Object.assign(Object.assign({}, event), { moveX: lastDragData.moveX, moveY: lastDragData.moveY, totalX: event.x - startPoint.x, totalY: event.y - startPoint.y, type: I.getSwipeDirection(PointHelper.getAngle(startPoint, event)) });\n    },\n    getBase(e) {\n        const pointerUpButtons = e.button === 1 ? 4 : e.button;\n        return {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            shiftKey: e.shiftKey,\n            metaKey: e.metaKey,\n            buttons: e.buttons === undefined ? 1 : (e.buttons === 0 ? pointerUpButtons : e.buttons),\n            origin: e\n        };\n    },\n    pathHasEventType(path, type) {\n        const { list } = path;\n        for (let i = 0, len = list.length; i < len; i++) {\n            if (list[i].hasEvent(type))\n                return true;\n        }\n        return false;\n    },\n    filterPathByEventType(path, type) {\n        const find = new LeafList();\n        const { list } = path;\n        for (let i = 0, len = list.length; i < len; i++) {\n            if (list[i].hasEvent(type))\n                find.add(list[i]);\n        }\n        return find;\n    },\n    pathCanDrag(path) {\n        return path && path.list.some(item => item.draggable || item.editable || (!item.isLeafer && item.hasEvent(DragEvent.DRAG)));\n    },\n    pathHasOutside(path) {\n        return path && path.list.some(item => item.isOutside);\n    },\n};\nconst I = InteractionHelper;\n\nconst emptyList = new LeafList();\nconst { getDragEventData, getDropEventData, getSwipeEventData } = InteractionHelper;\nclass Dragger {\n    constructor(interaction) {\n        this.interaction = interaction;\n    }\n    setDragData(data) {\n        if (this.animateWait)\n            this.dragEndReal();\n        this.downData = this.interaction.downData;\n        this.dragData = getDragEventData(data, data, data);\n        this.canAnimate = this.canDragOut = true;\n    }\n    getList(realDraggable, hover) {\n        const { proxy } = this.interaction.selector;\n        const hasProxyList = proxy && proxy.list.length, dragList = DragEvent.list || this.draggableList || emptyList;\n        return this.dragging && (hasProxyList ? (realDraggable ? emptyList : new LeafList(hover ? [...proxy.list, ...proxy.dragHoverExclude] : proxy.list)) : dragList);\n    }\n    checkDrag(data, canDrag) {\n        const { interaction } = this;\n        if (this.moving && data.buttons < 1) {\n            this.canAnimate = false;\n            interaction.pointerCancel();\n            return;\n        }\n        if (!this.moving && canDrag) {\n            if (this.moving = interaction.canMove(this.downData) || interaction.isHoldRightKey || interaction.isMobileDragEmpty) {\n                this.dragData.moveType = 'drag';\n                interaction.emit(MoveEvent.START, this.dragData);\n            }\n        }\n        if (!this.moving) {\n            this.dragStart(data, canDrag);\n        }\n        this.drag(data);\n    }\n    dragStart(data, canDrag) {\n        if (!this.dragging) {\n            this.dragging = canDrag && PointerButton.left(data);\n            if (this.dragging) {\n                this.interaction.emit(DragEvent.START, this.dragData);\n                this.getDraggableList(this.dragData.path);\n                this.setDragStartPoints(this.realDraggableList = this.getList(true));\n            }\n        }\n    }\n    setDragStartPoints(list) {\n        this.dragStartPoints = {};\n        list.forEach(leaf => this.dragStartPoints[leaf.innerId] = { x: leaf.x, y: leaf.y });\n    }\n    getDraggableList(path) {\n        let leaf;\n        for (let i = 0, len = path.length; i < len; i++) {\n            leaf = path.list[i];\n            if ((leaf.draggable || leaf.editable) && leaf.hitSelf && !leaf.locked) {\n                this.draggableList = new LeafList(leaf);\n                break;\n            }\n        }\n    }\n    drag(data) {\n        const { interaction, dragData, downData } = this;\n        const { path, throughPath } = downData;\n        this.dragData = getDragEventData(downData, dragData, data);\n        if (throughPath)\n            this.dragData.throughPath = throughPath;\n        this.dragData.path = path;\n        if (this.moving) {\n            this.dragData.moveType = 'drag';\n            interaction.emit(MoveEvent.BEFORE_MOVE, this.dragData);\n            interaction.emit(MoveEvent.MOVE, this.dragData);\n        }\n        else if (this.dragging) {\n            this.dragReal();\n            interaction.emit(DragEvent.BEFORE_DRAG, this.dragData);\n            interaction.emit(DragEvent.DRAG, this.dragData);\n        }\n    }\n    dragReal() {\n        const { running } = this.interaction;\n        const list = this.realDraggableList;\n        if (list.length && running) {\n            const { totalX, totalY } = this.dragData;\n            list.forEach(leaf => leaf.draggable && leaf.move(DragEvent.getValidMove(leaf, this.dragStartPoints[leaf.innerId], { x: totalX, y: totalY })));\n        }\n    }\n    dragOverOrOut(data) {\n        const { interaction } = this;\n        const { dragOverPath } = this;\n        const { path } = data;\n        this.dragOverPath = path;\n        if (dragOverPath) {\n            if (path.indexAt(0) !== dragOverPath.indexAt(0)) {\n                interaction.emit(DragEvent.OUT, data, dragOverPath);\n                interaction.emit(DragEvent.OVER, data, path);\n            }\n        }\n        else\n            interaction.emit(DragEvent.OVER, data, path);\n    }\n    dragEnterOrLeave(data) {\n        const { interaction } = this;\n        const { dragEnterPath } = this;\n        const { path } = data;\n        interaction.emit(DragEvent.LEAVE, data, dragEnterPath, path);\n        interaction.emit(DragEvent.ENTER, data, path, dragEnterPath);\n        this.dragEnterPath = path;\n    }\n    dragEnd(data, speed) {\n        if (!this.dragging && !this.moving)\n            return;\n        const { moveX, moveY } = this.dragData;\n        if (this.interaction.config.move.dragAnimate && this.canAnimate && this.moving && (Math.abs(moveX) > 1 || Math.abs(moveY) > 1)) {\n            data = Object.assign({}, data);\n            speed = (speed || (data.pointerType === 'touch' ? 2 : 1)) * 0.9;\n            PointHelper.move(data, moveX * speed, moveY * speed);\n            this.drag(data);\n            this.animate(() => { this.dragEnd(data, 1); });\n        }\n        else\n            this.dragEndReal(data);\n    }\n    dragEndReal(data) {\n        const { interaction, downData, dragData } = this;\n        if (!data)\n            data = dragData;\n        const { path, throughPath } = downData;\n        const endDragData = getDragEventData(downData, data, data);\n        if (throughPath)\n            endDragData.throughPath = throughPath;\n        endDragData.path = path;\n        if (this.moving) {\n            this.moving = false;\n            endDragData.moveType = 'drag';\n            interaction.emit(MoveEvent.END, endDragData);\n        }\n        if (this.dragging) {\n            const dropList = this.getList();\n            this.dragging = false;\n            interaction.emit(DragEvent.END, endDragData);\n            this.swipe(data, downData, dragData, endDragData);\n            this.drop(data, dropList, this.dragEnterPath);\n        }\n        this.autoMoveCancel();\n        this.dragReset();\n        this.animate(null, 'off');\n    }\n    animate(func, off) {\n        const animateWait = func || this.animateWait;\n        if (animateWait)\n            this.interaction.target.nextRender(animateWait, null, off);\n        this.animateWait = func;\n    }\n    swipe(data, downData, dragData, endDragData) {\n        const { interaction } = this;\n        if (PointHelper.getDistance(downData, data) > interaction.config.pointer.swipeDistance) {\n            const swipeData = getSwipeEventData(downData, dragData, endDragData);\n            this.interaction.emit(swipeData.type, swipeData);\n        }\n    }\n    drop(data, dropList, dragEnterPath) {\n        const dropData = getDropEventData(data, dropList, DragEvent.data);\n        dropData.path = dragEnterPath;\n        this.interaction.emit(DropEvent.DROP, dropData);\n        this.interaction.emit(DragEvent.LEAVE, data, dragEnterPath);\n    }\n    dragReset() {\n        DragEvent.list = DragEvent.data = this.draggableList = this.dragData = this.downData = this.dragOverPath = this.dragEnterPath = null;\n    }\n    checkDragOut(data) {\n        const { interaction } = this;\n        this.autoMoveCancel();\n        if (this.dragging && !interaction.shrinkCanvasBounds.hitPoint(data))\n            this.autoMoveOnDragOut(data);\n    }\n    autoMoveOnDragOut(data) {\n        const { interaction, downData, canDragOut } = this;\n        const { autoDistance, dragOut } = interaction.config.move;\n        if (!dragOut || !canDragOut || !autoDistance)\n            return;\n        const bounds = interaction.shrinkCanvasBounds;\n        const { x, y } = bounds;\n        const right = BoundsHelper.maxX(bounds);\n        const bottom = BoundsHelper.maxY(bounds);\n        const moveX = data.x < x ? autoDistance : (right < data.x ? -autoDistance : 0);\n        const moveY = data.y < y ? autoDistance : (bottom < data.y ? -autoDistance : 0);\n        let totalX = 0, totalY = 0;\n        this.autoMoveTimer = setInterval(() => {\n            totalX += moveX;\n            totalY += moveY;\n            PointHelper.move(downData, moveX, moveY);\n            PointHelper.move(this.dragData, moveX, moveY);\n            interaction.move(Object.assign(Object.assign({}, data), { moveX, moveY, totalX, totalY, moveType: 'drag' }));\n            interaction.pointerMoveReal(data);\n        }, 10);\n    }\n    autoMoveCancel() {\n        if (this.autoMoveTimer) {\n            clearInterval(this.autoMoveTimer);\n            this.autoMoveTimer = 0;\n        }\n    }\n    destroy() {\n        this.dragReset();\n    }\n}\n\nconst debug = Debug.get('emit');\nfunction emit(type, data, path, excludePath) {\n    if (!path && !data.path)\n        return;\n    let leaf;\n    data.type = type;\n    if (path) {\n        data = Object.assign(Object.assign({}, data), { path });\n    }\n    else {\n        path = data.path;\n    }\n    data.target = path.indexAt(0);\n    try {\n        for (let i = path.length - 1; i > -1; i--) {\n            leaf = path.list[i];\n            if (emitEvent(leaf, type, data, true, excludePath))\n                return;\n            if (leaf.isApp)\n                emitAppChildren(leaf, type, data, true, excludePath);\n        }\n        for (let i = 0, len = path.length; i < len; i++) {\n            leaf = path.list[i];\n            if (leaf.isApp)\n                emitAppChildren(leaf, type, data, false, excludePath);\n            if (emitEvent(leaf, type, data, false, excludePath))\n                return;\n        }\n    }\n    catch (e) {\n        debug.error(e);\n    }\n}\nconst allowTypes = ['move', 'zoom', 'rotate', 'key'];\nfunction emitAppChildren(leaf, type, data, capture, excludePath) {\n    if (allowTypes.some(name => type.startsWith(name)) && leaf.__.hitChildren && !exclude(leaf, excludePath)) {\n        let child;\n        for (let i = 0, len = leaf.children.length; i < len; i++) {\n            child = leaf.children[i];\n            if (!data.path.has(child) && child.__.hittable)\n                emitEvent(child, type, data, capture, excludePath);\n        }\n    }\n}\nfunction emitEvent(leaf, type, data, capture, excludePath) {\n    if (leaf.destroyed)\n        return false;\n    if (leaf.__.hitSelf && !exclude(leaf, excludePath)) {\n        if (State.updateEventStyle && !capture)\n            State.updateEventStyle(leaf, type);\n        if (leaf.hasEvent(type, capture)) {\n            data.phase = capture ? 1 : ((leaf === data.target) ? 2 : 3);\n            const event = EventCreator.get(type, data);\n            leaf.emitEvent(event, capture);\n            if (event.isStop)\n                return true;\n        }\n    }\n    return false;\n}\nfunction exclude(leaf, excludePath) {\n    return excludePath && excludePath.has(leaf);\n}\n\nconst MultiTouchHelper = {\n    getData(list) {\n        const a = list[0];\n        const b = list[1];\n        const lastCenter = PointHelper.getCenter(a.from, b.from);\n        const center = PointHelper.getCenter(a.to, b.to);\n        const move = { x: center.x - lastCenter.x, y: center.y - lastCenter.y };\n        const lastDistance = PointHelper.getDistance(a.from, b.from);\n        const distance = PointHelper.getDistance(a.to, b.to);\n        const scale = distance / lastDistance;\n        const angle = PointHelper.getRotation(a.from, b.from, a.to, b.to);\n        return { move, scale, angle, center };\n    }\n};\n\nconst config = {\n    wheel: {\n        zoomSpeed: 0.5,\n        moveSpeed: 0.5,\n        rotateSpeed: 0.5,\n        delta: { x: 80 / 4, y: 8.0 },\n        preventDefault: true\n    },\n    pointer: {\n        hitRadius: 5,\n        tapTime: 120,\n        longPressTime: 800,\n        transformTime: 500,\n        hover: true,\n        dragHover: true,\n        dragDistance: 2,\n        swipeDistance: 20,\n        preventDefaultMenu: true\n    },\n    touch: {\n        preventDefault: true\n    },\n    multiTouch: {},\n    cursor: true,\n    keyEvent: true\n};\n\nconst { pathHasEventType, getMoveEventData, getZoomEventData, getRotateEventData, pathCanDrag, pathHasOutside } = InteractionHelper;\nclass InteractionBase {\n    get dragging() { return this.dragger.dragging; }\n    get transforming() { return this.transformer.transforming; }\n    get moveMode() { return this.m.drag === true || this.isHoldSpaceKey || this.isHoldMiddleKey || (this.isHoldRightKey && this.dragger.moving) || this.isDragEmpty; }\n    get canHover() { return this.p.hover && !this.config.mobile; }\n    get isDragEmpty() { return this.m.dragEmpty && this.isRootPath(this.hoverData) && (!this.downData || this.isRootPath(this.downData)); }\n    get isMobileDragEmpty() { return this.m.dragEmpty && !this.canHover && this.downData && this.isTreePath(this.downData); }\n    get isHoldMiddleKey() { return this.m.holdMiddleKey && this.downData && PointerButton.middle(this.downData); }\n    get isHoldRightKey() { return this.m.holdRightKey && this.downData && PointerButton.right(this.downData); }\n    get isHoldSpaceKey() { return this.m.holdSpaceKey && Keyboard.isHoldSpaceKey(); }\n    get m() { return this.config.move; }\n    get p() { return this.config.pointer; }\n    get hitRadius() { return this.p.hitRadius; }\n    constructor(target, canvas, selector, userConfig) {\n        this.config = DataHelper.clone(config);\n        this.tapCount = 0;\n        this.downKeyMap = {};\n        this.target = target;\n        this.canvas = canvas;\n        this.selector = selector;\n        this.defaultPath = new LeafList(target);\n        this.transformer = new Transformer(this);\n        this.dragger = new Dragger(this);\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.__listenEvents();\n    }\n    start() {\n        this.running = true;\n    }\n    stop() {\n        this.running = false;\n    }\n    receive(_event) { }\n    pointerDown(data, useDefaultPath) {\n        if (!data)\n            data = this.hoverData;\n        if (!data)\n            return;\n        PointerButton.defaultLeft(data);\n        this.updateDownData(data);\n        this.checkPath(data, useDefaultPath);\n        this.downTime = Date.now();\n        this.emit(PointerEvent.BEFORE_DOWN, data);\n        this.emit(PointerEvent.DOWN, data);\n        if (PointerButton.left(data)) {\n            this.tapWait();\n            this.longPressWait(data);\n        }\n        this.waitRightTap = PointerButton.right(data);\n        this.dragger.setDragData(data);\n        if (!this.isHoldRightKey)\n            this.updateCursor(data);\n    }\n    pointerMove(data) {\n        if (!data)\n            data = this.hoverData;\n        if (!data)\n            return;\n        const { downData } = this;\n        if (downData)\n            PointerButton.defaultLeft(data);\n        const hit = this.canvas.bounds.hitPoint(data);\n        if (hit || downData) {\n            this.pointerMoveReal(data);\n            if (downData)\n                this.dragger.checkDragOut(data);\n        }\n    }\n    pointerMoveReal(data) {\n        const { dragHover, dragDistance } = this.p;\n        this.emit(PointerEvent.BEFORE_MOVE, data, this.defaultPath);\n        if (this.downData) {\n            const canDrag = PointHelper.getDistance(this.downData, data) > dragDistance;\n            if (canDrag) {\n                if (this.waitTap)\n                    this.pointerWaitCancel();\n                this.waitRightTap = false;\n            }\n            this.dragger.checkDrag(data, canDrag);\n        }\n        if (!this.dragger.moving) {\n            this.updateHoverData(data);\n            this.checkPath(data);\n            this.emit(PointerEvent.MOVE, data);\n            if (!(this.dragging && !dragHover))\n                this.pointerHover(data);\n            if (this.dragger.dragging) {\n                this.dragger.dragOverOrOut(data);\n                this.dragger.dragEnterOrLeave(data);\n            }\n        }\n        this.updateCursor(this.downData || data);\n    }\n    pointerUp(data) {\n        const { downData } = this;\n        if (!data)\n            data = downData;\n        if (!downData)\n            return;\n        PointerButton.defaultLeft(data);\n        data.multiTouch = downData.multiTouch;\n        this.findPath(data);\n        const upData = Object.assign(Object.assign({}, data), { path: data.path.clone() });\n        data.path.addList(downData.path.list);\n        this.checkPath(data);\n        this.downData = null;\n        this.emit(PointerEvent.BEFORE_UP, data);\n        this.emit(PointerEvent.UP, data);\n        this.touchLeave(data);\n        if (!data.isCancel) {\n            this.tap(data);\n            this.menuTap(data);\n        }\n        this.dragger.dragEnd(data);\n        this.updateCursor(upData);\n    }\n    pointerCancel() {\n        const data = Object.assign({}, this.dragger.dragData);\n        data.isCancel = true;\n        this.pointerUp(data);\n    }\n    multiTouch(data, list) {\n        if (this.config.multiTouch.disabled)\n            return;\n        const { move, angle, scale, center } = MultiTouchHelper.getData(list);\n        this.rotate(getRotateEventData(center, angle, data));\n        this.zoom(getZoomEventData(center, scale, data));\n        this.move(getMoveEventData(center, move, data));\n    }\n    menu(data) {\n        this.findPath(data);\n        this.emit(PointerEvent.MENU, data);\n        this.waitMenuTap = true;\n        if (!this.downData && this.waitRightTap)\n            this.menuTap(data);\n    }\n    menuTap(data) {\n        if (this.waitRightTap && this.waitMenuTap) {\n            this.emit(PointerEvent.MENU_TAP, data);\n            this.waitRightTap = this.waitMenuTap = false;\n        }\n    }\n    move(data) {\n        this.transformer.move(data);\n    }\n    zoom(data) {\n        this.transformer.zoom(data);\n    }\n    rotate(data) {\n        this.transformer.rotate(data);\n    }\n    transformEnd() {\n        this.transformer.transformEnd();\n    }\n    keyDown(data) {\n        if (!this.config.keyEvent)\n            return;\n        const { code } = data;\n        if (!this.downKeyMap[code]) {\n            this.downKeyMap[code] = true;\n            Keyboard.setDownCode(code);\n            this.emit(KeyEvent.HOLD, data, this.defaultPath);\n            if (this.moveMode) {\n                this.cancelHover();\n                this.updateCursor();\n            }\n        }\n        this.emit(KeyEvent.DOWN, data, this.defaultPath);\n    }\n    keyUp(data) {\n        if (!this.config.keyEvent)\n            return;\n        const { code } = data;\n        this.downKeyMap[code] = false;\n        Keyboard.setUpCode(code);\n        this.emit(KeyEvent.UP, data, this.defaultPath);\n        if (this.cursor === 'grab')\n            this.updateCursor();\n    }\n    pointerHover(data) {\n        if (this.canHover) {\n            this.pointerOverOrOut(data);\n            this.pointerEnterOrLeave(data);\n        }\n    }\n    pointerOverOrOut(data) {\n        const { path } = data;\n        const { overPath } = this;\n        this.overPath = path;\n        if (overPath) {\n            if (path.indexAt(0) !== overPath.indexAt(0)) {\n                this.emit(PointerEvent.OUT, data, overPath);\n                this.emit(PointerEvent.OVER, data, path);\n            }\n        }\n        else {\n            this.emit(PointerEvent.OVER, data, path);\n        }\n    }\n    pointerEnterOrLeave(data) {\n        let { path } = data;\n        if (this.downData && !this.moveMode) {\n            path = path.clone();\n            this.downData.path.forEach(leaf => path.add(leaf));\n        }\n        const { enterPath } = this;\n        this.enterPath = path;\n        this.emit(PointerEvent.LEAVE, data, enterPath, path);\n        this.emit(PointerEvent.ENTER, data, path, enterPath);\n    }\n    touchLeave(data) {\n        if (data.pointerType === 'touch') {\n            if (this.enterPath) {\n                this.emit(PointerEvent.LEAVE, data);\n                if (this.dragger.dragging)\n                    this.emit(DropEvent.LEAVE, data);\n            }\n        }\n    }\n    tap(data) {\n        const { pointer } = this.config;\n        const hasLong = this.longTap(data);\n        if (!pointer.tapMore && hasLong)\n            return;\n        if (!this.waitTap)\n            return;\n        if (pointer.tapMore)\n            this.emitTap(data);\n        const useTime = Date.now() - this.downTime;\n        const hasDouble = [PointerEvent.DOUBLE_TAP, PointerEvent.DOUBLE_CLICK].some(type => pathHasEventType(data.path, type));\n        if (useTime < pointer.tapTime + 50 && hasDouble) {\n            this.tapCount++;\n            if (this.tapCount === 2) {\n                this.tapWaitCancel();\n                this.emitDoubleTap(data);\n            }\n            else {\n                clearTimeout(this.tapTimer);\n                this.tapTimer = setTimeout(() => {\n                    if (!pointer.tapMore) {\n                        this.tapWaitCancel();\n                        this.emitTap(data);\n                    }\n                }, pointer.tapTime);\n            }\n        }\n        else {\n            if (!pointer.tapMore) {\n                this.tapWaitCancel();\n                this.emitTap(data);\n            }\n        }\n    }\n    findPath(data, options) {\n        const { hitRadius, through } = this.p;\n        const { bottomList } = this;\n        const find = this.selector.getByPoint(data, hitRadius, Object.assign({ bottomList, name: data.type }, (options || { through })));\n        if (find.throughPath)\n            data.throughPath = find.throughPath;\n        data.path = find.path;\n        return find.path;\n    }\n    isRootPath(data) {\n        return data && data.path.list[0].isLeafer;\n    }\n    isTreePath(data) {\n        const app = this.target.app;\n        if (!app || !app.isApp)\n            return false;\n        return app.editor && (!data.path.has(app.editor) && data.path.has(app.tree) && !data.target.syncEventer);\n    }\n    checkPath(data, useDefaultPath) {\n        if (useDefaultPath || (this.moveMode && !pathHasOutside(data.path)))\n            data.path = this.defaultPath;\n    }\n    canMove(data) {\n        return data && (this.moveMode || (this.m.drag === 'auto' && !pathCanDrag(data.path))) && !pathHasOutside(data.path);\n    }\n    isDrag(leaf) {\n        return this.dragger.getList().has(leaf);\n    }\n    isPress(leaf) {\n        return this.downData && this.downData.path.has(leaf);\n    }\n    isHover(leaf) {\n        return this.enterPath && this.enterPath.has(leaf);\n    }\n    isFocus(leaf) {\n        return this.focusData === leaf;\n    }\n    cancelHover() {\n        const { hoverData } = this;\n        if (hoverData) {\n            hoverData.path = this.defaultPath;\n            this.pointerHover(hoverData);\n        }\n    }\n    updateDownData(data, options, merge) {\n        const { downData } = this;\n        if (!data && downData)\n            data = downData;\n        if (!data)\n            return;\n        this.findPath(data, options);\n        if (merge && downData)\n            data.path.addList(downData.path.list);\n        this.downData = data;\n    }\n    updateHoverData(data) {\n        if (!data)\n            data = this.hoverData;\n        if (!data)\n            return;\n        this.findPath(data, { exclude: this.dragger.getList(false, true), name: PointerEvent.MOVE });\n        this.hoverData = data;\n    }\n    updateCursor(data) {\n        if (!this.config.cursor || !this.canHover)\n            return;\n        if (!data) {\n            this.updateHoverData();\n            data = this.downData || this.hoverData;\n        }\n        if (this.dragger.moving) {\n            return this.setCursor('grabbing');\n        }\n        else if (this.canMove(data)) {\n            return this.setCursor(this.downData ? 'grabbing' : 'grab');\n        }\n        else if (!data)\n            return;\n        let leaf, cursor;\n        const { path } = data;\n        for (let i = 0, len = path.length; i < len; i++) {\n            leaf = path.list[i];\n            cursor = (leaf.syncEventer && leaf.syncEventer.cursor) || leaf.cursor;\n            if (cursor)\n                break;\n        }\n        this.setCursor(cursor);\n    }\n    setCursor(cursor) {\n        this.cursor = cursor;\n    }\n    getLocal(clientPoint, updateClient) {\n        const clientBounds = this.canvas.getClientBounds(updateClient);\n        return { x: clientPoint.clientX - clientBounds.x, y: clientPoint.clientY - clientBounds.y };\n    }\n    emitTap(data) {\n        this.emit(PointerEvent.TAP, data);\n        this.emit(PointerEvent.CLICK, data);\n    }\n    emitDoubleTap(data) {\n        this.emit(PointerEvent.DOUBLE_TAP, data);\n        this.emit(PointerEvent.DOUBLE_CLICK, data);\n    }\n    pointerWaitCancel() {\n        this.tapWaitCancel();\n        this.longPressWaitCancel();\n    }\n    tapWait() {\n        clearTimeout(this.tapTimer);\n        this.waitTap = true;\n    }\n    tapWaitCancel() {\n        clearTimeout(this.tapTimer);\n        this.waitTap = false;\n        this.tapCount = 0;\n    }\n    longPressWait(data) {\n        clearTimeout(this.longPressTimer);\n        this.longPressTimer = setTimeout(() => {\n            this.longPressed = true;\n            this.emit(PointerEvent.LONG_PRESS, data);\n        }, this.p.longPressTime);\n    }\n    longTap(data) {\n        let hasLong;\n        if (this.longPressed) {\n            this.emit(PointerEvent.LONG_TAP, data);\n            if (pathHasEventType(data.path, PointerEvent.LONG_TAP) || pathHasEventType(data.path, PointerEvent.LONG_PRESS))\n                hasLong = true;\n        }\n        this.longPressWaitCancel();\n        return hasLong;\n    }\n    longPressWaitCancel() {\n        clearTimeout(this.longPressTimer);\n        this.longPressed = false;\n    }\n    __onResize() {\n        this.shrinkCanvasBounds = new Bounds(this.canvas.bounds);\n        this.shrinkCanvasBounds.spread(-2);\n    }\n    __listenEvents() {\n        const { target } = this;\n        this.__eventIds = [target.on_(ResizeEvent.RESIZE, this.__onResize, this)];\n        target.once(LeaferEvent.READY, () => this.__onResize());\n    }\n    __removeListenEvents() {\n        this.target.off_(this.__eventIds);\n        this.__eventIds.length = 0;\n    }\n    emit(type, data, path, excludePath) {\n        if (this.running)\n            emit(type, data, path, excludePath);\n    }\n    destroy() {\n        if (this.__eventIds.length) {\n            this.stop();\n            this.__removeListenEvents();\n            this.dragger.destroy();\n            this.transformer.destroy();\n            this.downData = this.overPath = this.enterPath = null;\n        }\n    }\n}\n\nclass Cursor {\n    static set(name, value) {\n        this.custom[name] = value;\n    }\n    static get(name) {\n        return this.custom[name];\n    }\n}\nCursor.custom = {};\n\nclass HitCanvasManager extends CanvasManager {\n    constructor() {\n        super(...arguments);\n        this.maxTotal = 1000;\n        this.pathList = new LeafList();\n        this.pixelList = new LeafList();\n    }\n    getPixelType(leaf, config) {\n        this.__autoClear();\n        this.pixelList.add(leaf);\n        return Creator.hitCanvas(config);\n    }\n    getPathType(leaf) {\n        this.__autoClear();\n        this.pathList.add(leaf);\n        return Creator.hitCanvas();\n    }\n    clearImageType() {\n        this.__clearLeafList(this.pixelList);\n    }\n    clearPathType() {\n        this.__clearLeafList(this.pathList);\n    }\n    __clearLeafList(leafList) {\n        if (leafList.length) {\n            leafList.forEach(leaf => {\n                if (leaf.__hitCanvas) {\n                    leaf.__hitCanvas.destroy();\n                    leaf.__hitCanvas = null;\n                }\n            });\n            leafList.reset();\n        }\n    }\n    __autoClear() {\n        if (this.pathList.length + this.pixelList.length > this.maxTotal)\n            this.clear();\n    }\n    clear() {\n        this.clearPathType();\n        this.clearImageType();\n    }\n}\n\nconst { toInnerRadiusPointOf, copy, setRadius } = PointHelper;\nconst inner = {};\nconst leaf = Leaf.prototype;\nleaf.__hitWorld = function (point) {\n    if (!this.__.hitSelf)\n        return false;\n    if (this.__.hitRadius) {\n        copy(inner, point), point = inner;\n        setRadius(point, this.__.hitRadius);\n    }\n    toInnerRadiusPointOf(point, this.__world, inner);\n    const { width, height } = this.__world;\n    const isSmall = width < 10 && height < 10;\n    if (this.__.hitBox || isSmall) {\n        if (BoundsHelper.hitRadiusPoint(this.__layout.boxBounds, inner))\n            return true;\n        if (isSmall)\n            return false;\n    }\n    if (this.__layout.hitCanvasChanged || !this.__hitCanvas) {\n        this.__updateHitCanvas();\n        if (!this.__layout.boundsChanged)\n            this.__layout.hitCanvasChanged = false;\n    }\n    return this.__hit(inner);\n};\nleaf.__hitFill = function (inner) { var _a; return (_a = this.__hitCanvas) === null || _a === void 0 ? void 0 : _a.hitFill(inner, this.__.windingRule); };\nleaf.__hitStroke = function (inner, strokeWidth) { var _a; return (_a = this.__hitCanvas) === null || _a === void 0 ? void 0 : _a.hitStroke(inner, strokeWidth); };\nleaf.__hitPixel = function (inner) { var _a; return (_a = this.__hitCanvas) === null || _a === void 0 ? void 0 : _a.hitPixel(inner, this.__layout.renderBounds, this.__hitCanvas.hitScale); };\nleaf.__drawHitPath = function (canvas) { if (canvas)\n    this.__drawRenderPath(canvas); };\n\nconst matrix = new Matrix();\nconst ui$2 = UI.prototype;\nui$2.__updateHitCanvas = function () {\n    const data = this.__, { hitCanvasManager } = this.leafer;\n    const isHitPixelFill = (data.__pixelFill || data.__isCanvas) && data.hitFill === 'pixel';\n    const isHitPixelStroke = data.__pixelStroke && data.hitStroke === 'pixel';\n    const isHitPixel = isHitPixelFill || isHitPixelStroke;\n    if (!this.__hitCanvas)\n        this.__hitCanvas = isHitPixel ? hitCanvasManager.getPixelType(this, { contextSettings: { willReadFrequently: true } }) : hitCanvasManager.getPathType(this);\n    const h = this.__hitCanvas;\n    if (isHitPixel) {\n        const { renderBounds } = this.__layout;\n        const size = Platform.image.hitCanvasSize;\n        const scale = h.hitScale = tempBounds.set(0, 0, size, size).getFitMatrix(renderBounds).a;\n        const { x, y, width, height } = tempBounds.set(renderBounds).scale(scale);\n        h.resize({ width, height, pixelRatio: 1 });\n        h.clear();\n        ImageManager.patternLocked = true;\n        this.__renderShape(h, { matrix: matrix.setWith(this.__world).scaleWith(1 / scale).invertWith().translate(-x, -y) }, !isHitPixelFill, !isHitPixelStroke);\n        ImageManager.patternLocked = false;\n        h.resetTransform();\n        data.__isHitPixel = true;\n    }\n    else {\n        data.__isHitPixel && (data.__isHitPixel = false);\n    }\n    this.__drawHitPath(h);\n    h.setStrokeOptions(data);\n};\nui$2.__hit = function (inner) {\n    if (Platform.name === 'miniapp')\n        this.__drawHitPath(this.__hitCanvas);\n    const data = this.__;\n    if (data.__isHitPixel && this.__hitPixel(inner))\n        return true;\n    const { hitFill } = data;\n    const needHitFillPath = ((data.fill || data.__isCanvas) && (hitFill === 'path' || (hitFill === 'pixel' && !(data.__pixelFill || data.__isCanvas)))) || hitFill === 'all';\n    if (needHitFillPath && this.__hitFill(inner))\n        return true;\n    const { hitStroke, __strokeWidth } = data;\n    const needHitStrokePath = (data.stroke && (hitStroke === 'path' || (hitStroke === 'pixel' && !data.__pixelStroke))) || hitStroke === 'all';\n    if (!needHitFillPath && !needHitStrokePath)\n        return false;\n    const radiusWidth = inner.radiusX * 2;\n    let hitWidth = radiusWidth;\n    if (needHitStrokePath) {\n        switch (data.strokeAlign) {\n            case 'inside':\n                hitWidth += __strokeWidth * 2;\n                if (!needHitFillPath && this.__hitFill(inner) && this.__hitStroke(inner, hitWidth))\n                    return true;\n                hitWidth = radiusWidth;\n                break;\n            case 'center':\n                hitWidth += __strokeWidth;\n                break;\n            case 'outside':\n                hitWidth += __strokeWidth * 2;\n                if (!needHitFillPath) {\n                    if (!this.__hitFill(inner) && this.__hitStroke(inner, hitWidth))\n                        return true;\n                    hitWidth = radiusWidth;\n                }\n                break;\n        }\n    }\n    return hitWidth ? this.__hitStroke(inner, hitWidth) : false;\n};\n\nconst ui$1 = UI.prototype, rect = Rect.prototype, box = Box.prototype;\nrect.__updateHitCanvas = box.__updateHitCanvas = function () {\n    if (this.stroke || this.cornerRadius || ((this.fill || this.__.__isCanvas) && this.hitFill === 'pixel') || this.hitStroke === 'all')\n        ui$1.__updateHitCanvas.call(this);\n    else if (this.__hitCanvas)\n        this.__hitCanvas = null;\n};\nrect.__hitFill = box.__hitFill = function (inner) {\n    return this.__hitCanvas ? ui$1.__hitFill.call(this, inner) : BoundsHelper.hitRadiusPoint(this.__layout.boxBounds, inner);\n};\n\nconst ui = UI.prototype, group = Group.prototype;\nfunction getSelector(ui) {\n    return ui.leafer ? ui.leafer.selector : (Platform$1.selector || (Platform$1.selector = Creator$1.selector()));\n}\nui.find = function (condition, options) {\n    return getSelector(this).getBy(condition, this, false, options);\n};\nui.findOne = function (condition, options) {\n    return getSelector(this).getBy(condition, this, true, options);\n};\ngroup.pick = function (hitPoint, options) {\n    this.__layout.update();\n    if (!options)\n        options = {};\n    return getSelector(this).getByPoint(hitPoint, options.hitRadius || 0, Object.assign(Object.assign({}, options), { target: this }));\n};\n\nconst canvas = LeaferCanvasBase.prototype;\ncanvas.hitFill = function (point, fillRule) {\n    return fillRule ? this.context.isPointInPath(point.x, point.y, fillRule) : this.context.isPointInPath(point.x, point.y);\n};\ncanvas.hitStroke = function (point, strokeWidth) {\n    this.strokeWidth = strokeWidth;\n    return this.context.isPointInStroke(point.x, point.y);\n};\ncanvas.hitPixel = function (radiusPoint, offset, scale = 1) {\n    let { x, y, radiusX, radiusY } = radiusPoint;\n    if (offset)\n        x -= offset.x, y -= offset.y;\n    tempBounds.set(x - radiusX, y - radiusY, radiusX * 2, radiusY * 2).scale(scale).ceil();\n    const { data } = this.context.getImageData(tempBounds.x, tempBounds.y, tempBounds.width || 1, tempBounds.height || 1);\n    for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] > 0)\n            return true;\n    }\n    return data[3] > 0;\n};\n\nexport { App, Cursor, DragEvent, DropEvent, HitCanvasManager, InteractionBase, InteractionHelper, KeyEvent, Keyboard, LeaferTypeCreator, MoveEvent, MultiTouchHelper, MyDragEvent, MyPointerEvent, PointerButton, PointerEvent, RotateEvent, SwipeEvent, UIEvent, ZoomEvent, addInteractionWindow };\n", "import { Debug, LeaferCanvasBase, Platform, DataHelper, canvasSizeAttrs, ResizeEvent, canvasPatch, Creator, LeaferImage, defineKey, FileHelper, LeafList, RenderEvent, ChildEvent, WatchEvent, PropertyEvent, LeafHelper, BranchHelper, Bounds, LeafBoundsHelper, LeafLevelList, LayoutEvent, Run, ImageManager, BoundsHelper, Answer, MathHelper, MatrixHelper, AlignHelper, ImageEvent, AroundHelper, PointHelper, Direction4, TwoPointBoundsHelper, TaskProcessor, Matrix } from '@leafer/core';\nexport * from '@leafer/core';\nexport { LeaferImage } from '@leafer/core';\nimport { InteractionHelper, InteractionBase, Cursor, HitCanvasManager } from '@leafer-ui/core';\nexport * from '@leafer-ui/core';\nimport { PaintImage, ColorConvert, PaintGradient, Export, Group, TextConvert, Paint, Effect } from '@leafer-ui/draw';\n\nconst debug$3 = Debug.get('LeaferCanvas');\nclass LeaferCanvas extends LeaferCanvasBase {\n    set zIndex(zIndex) {\n        const { style } = this.view;\n        style.zIndex = zIndex;\n        this.setAbsolute(this.view);\n    }\n    set childIndex(index) {\n        const { view, parentView } = this;\n        if (view && parentView) {\n            const beforeNode = parentView.children[index];\n            if (beforeNode) {\n                this.setAbsolute(beforeNode);\n                parentView.insertBefore(view, beforeNode);\n            }\n            else {\n                parentView.appendChild(beforeNode);\n            }\n        }\n    }\n    init() {\n        const { config } = this;\n        const view = config.view || config.canvas;\n        view ? this.__createViewFrom(view) : this.__createView();\n        const { style } = this.view;\n        style.display || (style.display = 'block');\n        this.parentView = this.view.parentElement;\n        if (this.parentView) {\n            const pStyle = this.parentView.style;\n            pStyle.webkitUserSelect = pStyle.userSelect = 'none';\n        }\n        if (Platform.syncDomFont && !this.parentView) {\n            style.display = 'none';\n            document.body.appendChild(this.view);\n        }\n        this.__createContext();\n        if (!this.autoLayout)\n            this.resize(config);\n    }\n    set backgroundColor(color) { this.view.style.backgroundColor = color; }\n    get backgroundColor() { return this.view.style.backgroundColor; }\n    set hittable(hittable) { this.view.style.pointerEvents = hittable ? 'auto' : 'none'; }\n    get hittable() { return this.view.style.pointerEvents !== 'none'; }\n    __createView() {\n        this.view = document.createElement('canvas');\n    }\n    __createViewFrom(inputView) {\n        let find = (typeof inputView === 'string') ? document.getElementById(inputView) : inputView;\n        if (find) {\n            if (find instanceof HTMLCanvasElement) {\n                this.view = find;\n            }\n            else {\n                let parent = find;\n                if (find === window || find === document) {\n                    const div = document.createElement('div');\n                    const { style } = div;\n                    style.position = 'absolute';\n                    style.top = style.bottom = style.left = style.right = '0px';\n                    document.body.appendChild(div);\n                    parent = div;\n                }\n                this.__createView();\n                const view = this.view;\n                if (parent.hasChildNodes()) {\n                    this.setAbsolute(view);\n                    parent.style.position || (parent.style.position = 'relative');\n                }\n                parent.appendChild(view);\n            }\n        }\n        else {\n            debug$3.error(`no id: ${inputView}`);\n            this.__createView();\n        }\n    }\n    setAbsolute(view) {\n        const { style } = view;\n        style.position = 'absolute';\n        style.top = style.left = '0px';\n    }\n    updateViewSize() {\n        const { width, height, pixelRatio } = this;\n        const { style } = this.view;\n        style.width = width + 'px';\n        style.height = height + 'px';\n        this.view.width = Math.ceil(width * pixelRatio);\n        this.view.height = Math.ceil(height * pixelRatio);\n    }\n    updateClientBounds() {\n        this.clientBounds = this.view.getBoundingClientRect();\n    }\n    startAutoLayout(autoBounds, listener) {\n        this.resizeListener = listener;\n        if (autoBounds) {\n            this.autoBounds = autoBounds;\n            try {\n                this.resizeObserver = new ResizeObserver((entries) => {\n                    this.updateClientBounds();\n                    for (const entry of entries)\n                        this.checkAutoBounds(entry.contentRect);\n                });\n                const parent = this.parentView;\n                if (parent) {\n                    this.resizeObserver.observe(parent);\n                    this.checkAutoBounds(parent.getBoundingClientRect());\n                }\n                else {\n                    this.checkAutoBounds(this.view);\n                    debug$3.warn('no parent');\n                }\n            }\n            catch (_a) {\n                this.imitateResizeObserver();\n            }\n        }\n        else {\n            window.addEventListener('resize', () => {\n                const pixelRatio = Platform.devicePixelRatio;\n                if (this.pixelRatio !== pixelRatio) {\n                    const { width, height } = this;\n                    this.emitResize({ width, height, pixelRatio });\n                }\n            });\n        }\n    }\n    imitateResizeObserver() {\n        if (this.autoLayout) {\n            if (this.parentView)\n                this.checkAutoBounds(this.parentView.getBoundingClientRect());\n            Platform.requestRender(this.imitateResizeObserver.bind(this));\n        }\n    }\n    checkAutoBounds(parentSize) {\n        const view = this.view;\n        const { x, y, width, height } = this.autoBounds.getBoundsFrom(parentSize);\n        const size = { width, height, pixelRatio: Platform.devicePixelRatio };\n        if (!this.isSameSize(size)) {\n            const { style } = view;\n            style.marginLeft = x + 'px';\n            style.marginTop = y + 'px';\n            this.emitResize(size);\n        }\n    }\n    stopAutoLayout() {\n        this.autoLayout = false;\n        this.resizeListener = null;\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n    }\n    emitResize(size) {\n        const oldSize = {};\n        DataHelper.copyAttrs(oldSize, this, canvasSizeAttrs);\n        this.resize(size);\n        if (this.resizeListener && this.width !== undefined)\n            this.resizeListener(new ResizeEvent(size, oldSize));\n    }\n    unrealCanvas() {\n        if (!this.unreal && this.parentView) {\n            const view = this.view;\n            if (view)\n                view.remove();\n            this.view = this.parentView;\n            this.unreal = true;\n        }\n    }\n    destroy() {\n        if (this.view) {\n            this.stopAutoLayout();\n            if (!this.unreal) {\n                const view = this.view;\n                if (view.parentElement)\n                    view.remove();\n            }\n            super.destroy();\n        }\n    }\n}\n\ncanvasPatch(CanvasRenderingContext2D.prototype);\ncanvasPatch(Path2D.prototype);\n\nconst { mineType, fileType } = FileHelper;\nObject.assign(Creator, {\n    canvas: (options, manager) => new LeaferCanvas(options, manager),\n    image: (options) => new LeaferImage(options)\n});\nfunction useCanvas(_canvasType, _power) {\n    Platform.origin = {\n        createCanvas(width, height) {\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n        },\n        canvasToDataURL: (canvas, type, quality) => canvas.toDataURL(mineType(type), quality),\n        canvasToBolb: (canvas, type, quality) => new Promise((resolve) => canvas.toBlob(resolve, mineType(type), quality)),\n        canvasSaveAs: (canvas, filename, quality) => {\n            const url = canvas.toDataURL(mineType(fileType(filename)), quality);\n            return Platform.origin.download(url, filename);\n        },\n        download(url, filename) {\n            return new Promise((resolve) => {\n                let el = document.createElement('a');\n                el.href = url;\n                el.download = filename;\n                document.body.appendChild(el);\n                el.click();\n                document.body.removeChild(el);\n                resolve();\n            });\n        },\n        loadImage(src) {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n                const { crossOrigin } = Platform.image;\n                if (crossOrigin) {\n                    img.setAttribute('crossOrigin', crossOrigin);\n                    img.crossOrigin = crossOrigin;\n                }\n                img.onload = () => { resolve(img); };\n                img.onerror = (e) => { reject(e); };\n                img.src = Platform.image.getRealURL(src);\n            });\n        }\n    };\n    Platform.event = {\n        stopDefault(origin) { origin.preventDefault(); },\n        stopNow(origin) { origin.stopImmediatePropagation(); },\n        stop(origin) { origin.stopPropagation(); }\n    };\n    Platform.canvas = Creator.canvas();\n    Platform.conicGradientSupport = !!Platform.canvas.context.createConicGradient;\n}\nPlatform.name = 'web';\nPlatform.isMobile = 'ontouchstart' in window;\nPlatform.requestRender = function (render) { window.requestAnimationFrame(render); };\ndefineKey(Platform, 'devicePixelRatio', { get() { return Math.max(1, devicePixelRatio); } });\nconst { userAgent } = navigator;\nif (userAgent.indexOf(\"Firefox\") > -1) {\n    Platform.conicGradientRotate90 = true;\n    Platform.intWheelDeltaY = true;\n    Platform.syncDomFont = true;\n}\nelse if (userAgent.indexOf(\"Safari\") > -1 && userAgent.indexOf(\"Chrome\") === -1) {\n    Platform.fullImageShadow = true;\n}\nif (userAgent.indexOf('Windows') > -1) {\n    Platform.os = 'Windows';\n    Platform.intWheelDeltaY = true;\n}\nelse if (userAgent.indexOf('Mac') > -1) {\n    Platform.os = 'Mac';\n}\nelse if (userAgent.indexOf('Linux') > -1) {\n    Platform.os = 'Linux';\n}\n\nclass Watcher {\n    get childrenChanged() { return this.hasAdd || this.hasRemove || this.hasVisible; }\n    get updatedList() {\n        if (this.hasRemove) {\n            const updatedList = new LeafList();\n            this.__updatedList.list.forEach(item => { if (item.leafer)\n                updatedList.add(item); });\n            return updatedList;\n        }\n        else {\n            return this.__updatedList;\n        }\n    }\n    constructor(target, userConfig) {\n        this.totalTimes = 0;\n        this.config = {};\n        this.__updatedList = new LeafList();\n        this.target = target;\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.__listenEvents();\n    }\n    start() {\n        if (this.disabled)\n            return;\n        this.running = true;\n    }\n    stop() {\n        this.running = false;\n    }\n    disable() {\n        this.stop();\n        this.__removeListenEvents();\n        this.disabled = true;\n    }\n    update() {\n        this.changed = true;\n        if (this.running)\n            this.target.emit(RenderEvent.REQUEST);\n    }\n    __onAttrChange(event) {\n        this.__updatedList.add(event.target);\n        this.update();\n    }\n    __onChildEvent(event) {\n        if (event.type === ChildEvent.ADD) {\n            this.hasAdd = true;\n            this.__pushChild(event.child);\n        }\n        else {\n            this.hasRemove = true;\n            this.__updatedList.add(event.parent);\n        }\n        this.update();\n    }\n    __pushChild(child) {\n        this.__updatedList.add(child);\n        if (child.isBranch)\n            this.__loopChildren(child);\n    }\n    __loopChildren(parent) {\n        const { children } = parent;\n        for (let i = 0, len = children.length; i < len; i++)\n            this.__pushChild(children[i]);\n    }\n    __onRquestData() {\n        this.target.emitEvent(new WatchEvent(WatchEvent.DATA, { updatedList: this.updatedList }));\n        this.__updatedList = new LeafList();\n        this.totalTimes++;\n        this.changed = false;\n        this.hasVisible = false;\n        this.hasRemove = false;\n        this.hasAdd = false;\n    }\n    __listenEvents() {\n        const { target } = this;\n        this.__eventIds = [\n            target.on_(PropertyEvent.CHANGE, this.__onAttrChange, this),\n            target.on_([ChildEvent.ADD, ChildEvent.REMOVE], this.__onChildEvent, this),\n            target.on_(WatchEvent.REQUEST, this.__onRquestData, this)\n        ];\n    }\n    __removeListenEvents() {\n        this.target.off_(this.__eventIds);\n    }\n    destroy() {\n        if (this.target) {\n            this.stop();\n            this.__removeListenEvents();\n            this.target = null;\n            this.__updatedList = null;\n        }\n    }\n}\n\nconst { updateAllMatrix: updateAllMatrix$1, updateBounds: updateOneBounds, updateAllWorldOpacity } = LeafHelper;\nconst { pushAllChildBranch, pushAllParent } = BranchHelper;\nfunction updateMatrix(updateList, levelList) {\n    let layout;\n    updateList.list.forEach(leaf => {\n        layout = leaf.__layout;\n        if (levelList.without(leaf) && !layout.proxyZoom) {\n            if (layout.matrixChanged) {\n                updateAllMatrix$1(leaf, true);\n                levelList.add(leaf);\n                if (leaf.isBranch)\n                    pushAllChildBranch(leaf, levelList);\n                pushAllParent(leaf, levelList);\n            }\n            else if (layout.boundsChanged) {\n                levelList.add(leaf);\n                if (leaf.isBranch)\n                    leaf.__tempNumber = 0;\n                pushAllParent(leaf, levelList);\n            }\n        }\n    });\n}\nfunction updateBounds(boundsList) {\n    let list, branch, children;\n    boundsList.sort(true);\n    boundsList.levels.forEach(level => {\n        list = boundsList.levelMap[level];\n        for (let i = 0, len = list.length; i < len; i++) {\n            branch = list[i];\n            if (branch.isBranch && branch.__tempNumber) {\n                children = branch.children;\n                for (let j = 0, jLen = children.length; j < jLen; j++) {\n                    if (!children[j].isBranch) {\n                        updateOneBounds(children[j]);\n                    }\n                }\n            }\n            updateOneBounds(branch);\n        }\n    });\n}\nfunction updateChange(updateList) {\n    let layout;\n    updateList.list.forEach(leaf => {\n        layout = leaf.__layout;\n        if (layout.opacityChanged)\n            updateAllWorldOpacity(leaf);\n        if (layout.stateStyleChanged)\n            setTimeout(() => layout.stateStyleChanged && leaf.updateState());\n        leaf.__updateChange();\n    });\n}\n\nconst { worldBounds } = LeafBoundsHelper;\nconst bigBounds = { x: 0, y: 0, width: 100000, height: 100000 };\nclass LayoutBlockData {\n    constructor(list) {\n        this.updatedBounds = new Bounds();\n        this.beforeBounds = new Bounds();\n        this.afterBounds = new Bounds();\n        if (list instanceof Array)\n            list = new LeafList(list);\n        this.updatedList = list;\n    }\n    setBefore() {\n        this.beforeBounds.setListWithFn(this.updatedList.list, worldBounds);\n    }\n    setAfter() {\n        const { list } = this.updatedList;\n        if (list.some(leaf => leaf.noBounds)) {\n            this.afterBounds.set(bigBounds);\n        }\n        else {\n            this.afterBounds.setListWithFn(list, worldBounds);\n        }\n        this.updatedBounds.setList([this.beforeBounds, this.afterBounds]);\n    }\n    merge(data) {\n        this.updatedList.addList(data.updatedList.list);\n        this.beforeBounds.add(data.beforeBounds);\n        this.afterBounds.add(data.afterBounds);\n        this.updatedBounds.add(data.updatedBounds);\n    }\n    destroy() {\n        this.updatedList = null;\n    }\n}\n\nconst { updateAllMatrix, updateAllChange } = LeafHelper;\nconst debug$2 = Debug.get('Layouter');\nclass Layouter {\n    constructor(target, userConfig) {\n        this.totalTimes = 0;\n        this.config = {};\n        this.__levelList = new LeafLevelList();\n        this.target = target;\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.__listenEvents();\n    }\n    start() {\n        if (this.disabled)\n            return;\n        this.running = true;\n    }\n    stop() {\n        this.running = false;\n    }\n    disable() {\n        this.stop();\n        this.__removeListenEvents();\n        this.disabled = true;\n    }\n    layout() {\n        if (!this.running)\n            return;\n        const { target } = this;\n        this.times = 0;\n        try {\n            target.emit(LayoutEvent.START);\n            this.layoutOnce();\n            target.emitEvent(new LayoutEvent(LayoutEvent.END, this.layoutedBlocks, this.times));\n        }\n        catch (e) {\n            debug$2.error(e);\n        }\n        this.layoutedBlocks = null;\n    }\n    layoutAgain() {\n        if (this.layouting) {\n            this.waitAgain = true;\n        }\n        else {\n            this.layoutOnce();\n        }\n    }\n    layoutOnce() {\n        if (this.layouting)\n            return debug$2.warn('layouting');\n        if (this.times > 3)\n            return debug$2.warn('layout max times');\n        this.times++;\n        this.totalTimes++;\n        this.layouting = true;\n        this.target.emit(WatchEvent.REQUEST);\n        if (this.totalTimes > 1) {\n            this.partLayout();\n        }\n        else {\n            this.fullLayout();\n        }\n        this.layouting = false;\n        if (this.waitAgain) {\n            this.waitAgain = false;\n            this.layoutOnce();\n        }\n    }\n    partLayout() {\n        var _a;\n        if (!((_a = this.__updatedList) === null || _a === void 0 ? void 0 : _a.length))\n            return;\n        const t = Run.start('PartLayout');\n        const { target, __updatedList: updateList } = this;\n        const { BEFORE, LAYOUT, AFTER } = LayoutEvent;\n        const blocks = this.getBlocks(updateList);\n        blocks.forEach(item => item.setBefore());\n        target.emitEvent(new LayoutEvent(BEFORE, blocks, this.times));\n        this.extraBlock = null;\n        updateList.sort();\n        updateMatrix(updateList, this.__levelList);\n        updateBounds(this.__levelList);\n        updateChange(updateList);\n        if (this.extraBlock)\n            blocks.push(this.extraBlock);\n        blocks.forEach(item => item.setAfter());\n        target.emitEvent(new LayoutEvent(LAYOUT, blocks, this.times));\n        target.emitEvent(new LayoutEvent(AFTER, blocks, this.times));\n        this.addBlocks(blocks);\n        this.__levelList.reset();\n        this.__updatedList = null;\n        Run.end(t);\n    }\n    fullLayout() {\n        const t = Run.start('FullLayout');\n        const { target } = this;\n        const { BEFORE, LAYOUT, AFTER } = LayoutEvent;\n        const blocks = this.getBlocks(new LeafList(target));\n        target.emitEvent(new LayoutEvent(BEFORE, blocks, this.times));\n        Layouter.fullLayout(target);\n        blocks.forEach(item => { item.setAfter(); });\n        target.emitEvent(new LayoutEvent(LAYOUT, blocks, this.times));\n        target.emitEvent(new LayoutEvent(AFTER, blocks, this.times));\n        this.addBlocks(blocks);\n        Run.end(t);\n    }\n    static fullLayout(target) {\n        updateAllMatrix(target, true);\n        if (target.isBranch) {\n            BranchHelper.updateBounds(target);\n        }\n        else {\n            LeafHelper.updateBounds(target);\n        }\n        updateAllChange(target);\n    }\n    addExtra(leaf) {\n        if (!this.__updatedList.has(leaf)) {\n            const { updatedList, beforeBounds } = this.extraBlock || (this.extraBlock = new LayoutBlockData([]));\n            updatedList.length ? beforeBounds.add(leaf.__world) : beforeBounds.set(leaf.__world);\n            updatedList.add(leaf);\n        }\n    }\n    createBlock(data) {\n        return new LayoutBlockData(data);\n    }\n    getBlocks(list) {\n        return [this.createBlock(list)];\n    }\n    addBlocks(current) {\n        this.layoutedBlocks ? this.layoutedBlocks.push(...current) : this.layoutedBlocks = current;\n    }\n    __onReceiveWatchData(event) {\n        this.__updatedList = event.data.updatedList;\n    }\n    __listenEvents() {\n        const { target } = this;\n        this.__eventIds = [\n            target.on_(LayoutEvent.REQUEST, this.layout, this),\n            target.on_(LayoutEvent.AGAIN, this.layoutAgain, this),\n            target.on_(WatchEvent.DATA, this.__onReceiveWatchData, this)\n        ];\n    }\n    __removeListenEvents() {\n        this.target.off_(this.__eventIds);\n    }\n    destroy() {\n        if (this.target) {\n            this.stop();\n            this.__removeListenEvents();\n            this.target = this.config = null;\n        }\n    }\n}\n\nconst debug$1 = Debug.get('Renderer');\nclass Renderer {\n    get needFill() { return !!(!this.canvas.allowBackgroundColor && this.config.fill); }\n    constructor(target, canvas, userConfig) {\n        this.FPS = 60;\n        this.totalTimes = 0;\n        this.times = 0;\n        this.config = {\n            usePartRender: true,\n            maxFPS: 60\n        };\n        this.target = target;\n        this.canvas = canvas;\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.__listenEvents();\n        this.__requestRender();\n    }\n    start() {\n        this.running = true;\n    }\n    stop() {\n        this.running = false;\n    }\n    update() {\n        this.changed = true;\n    }\n    requestLayout() {\n        this.target.emit(LayoutEvent.REQUEST);\n    }\n    render(callback) {\n        if (!(this.running && this.canvas.view)) {\n            this.changed = true;\n            return;\n        }\n        const { target } = this;\n        this.times = 0;\n        this.totalBounds = new Bounds();\n        debug$1.log(target.innerName, '--->');\n        try {\n            if (!target.isApp)\n                target.app.emit(RenderEvent.CHILD_START, target);\n            this.emitRender(RenderEvent.START);\n            this.renderOnce(callback);\n            this.emitRender(RenderEvent.END, this.totalBounds);\n            ImageManager.clearRecycled();\n        }\n        catch (e) {\n            this.rendering = false;\n            debug$1.error(e);\n        }\n        debug$1.log('-------------|');\n    }\n    renderAgain() {\n        if (this.rendering) {\n            this.waitAgain = true;\n        }\n        else {\n            this.renderOnce();\n        }\n    }\n    renderOnce(callback) {\n        if (this.rendering)\n            return debug$1.warn('rendering');\n        if (this.times > 3)\n            return debug$1.warn('render max times');\n        this.times++;\n        this.totalTimes++;\n        this.rendering = true;\n        this.changed = false;\n        this.renderBounds = new Bounds();\n        this.renderOptions = {};\n        if (callback) {\n            this.emitRender(RenderEvent.BEFORE);\n            callback();\n        }\n        else {\n            this.requestLayout();\n            if (this.ignore) {\n                this.ignore = this.rendering = false;\n                return;\n            }\n            this.emitRender(RenderEvent.BEFORE);\n            if (this.config.usePartRender && this.totalTimes > 1) {\n                this.partRender();\n            }\n            else {\n                this.fullRender();\n            }\n        }\n        this.emitRender(RenderEvent.RENDER, this.renderBounds, this.renderOptions);\n        this.emitRender(RenderEvent.AFTER, this.renderBounds, this.renderOptions);\n        this.updateBlocks = null;\n        this.rendering = false;\n        if (this.waitAgain) {\n            this.waitAgain = false;\n            this.renderOnce();\n        }\n    }\n    partRender() {\n        const { canvas, updateBlocks: list } = this;\n        if (!list)\n            return debug$1.warn('PartRender: need update attr');\n        this.mergeBlocks();\n        list.forEach(block => { if (canvas.bounds.hit(block) && !block.isEmpty())\n            this.clipRender(block); });\n    }\n    clipRender(block) {\n        const t = Run.start('PartRender');\n        const { canvas } = this;\n        const bounds = block.getIntersect(canvas.bounds);\n        const includes = block.includes(this.target.__world);\n        const realBounds = new Bounds(bounds);\n        canvas.save();\n        if (includes && !Debug.showRepaint) {\n            canvas.clear();\n        }\n        else {\n            bounds.spread(10 + 1 / this.canvas.pixelRatio).ceil();\n            canvas.clearWorld(bounds, true);\n            canvas.clipWorld(bounds, true);\n        }\n        this.__render(bounds, includes, realBounds);\n        canvas.restore();\n        Run.end(t);\n    }\n    fullRender() {\n        const t = Run.start('FullRender');\n        const { canvas } = this;\n        canvas.save();\n        canvas.clear();\n        this.__render(canvas.bounds, true);\n        canvas.restore();\n        Run.end(t);\n    }\n    __render(bounds, includes, realBounds) {\n        const options = bounds.includes(this.target.__world) ? { includes } : { bounds, includes };\n        if (this.needFill)\n            this.canvas.fillWorld(bounds, this.config.fill);\n        if (Debug.showRepaint)\n            this.canvas.strokeWorld(bounds, 'red');\n        this.target.__render(this.canvas, options);\n        this.renderBounds = realBounds = realBounds || bounds;\n        this.renderOptions = options;\n        this.totalBounds.isEmpty() ? this.totalBounds = realBounds : this.totalBounds.add(realBounds);\n        if (Debug.showHitView)\n            this.renderHitView(options);\n        if (Debug.showBoundsView)\n            this.renderBoundsView(options);\n        this.canvas.updateRender(realBounds);\n    }\n    renderHitView(_options) { }\n    renderBoundsView(_options) { }\n    addBlock(block) {\n        if (!this.updateBlocks)\n            this.updateBlocks = [];\n        this.updateBlocks.push(block);\n    }\n    mergeBlocks() {\n        const { updateBlocks: list } = this;\n        if (list) {\n            const bounds = new Bounds();\n            bounds.setList(list);\n            list.length = 0;\n            list.push(bounds);\n        }\n    }\n    __requestRender() {\n        const startTime = Date.now();\n        Platform.requestRender(() => {\n            this.FPS = Math.min(60, Math.ceil(1000 / (Date.now() - startTime)));\n            if (this.running) {\n                if (this.changed && this.canvas.view)\n                    this.render();\n                this.target.emit(RenderEvent.NEXT);\n            }\n            if (this.target)\n                this.__requestRender();\n        });\n    }\n    __onResize(e) {\n        if (this.canvas.unreal)\n            return;\n        if (e.bigger || !e.samePixelRatio) {\n            const { width, height } = e.old;\n            const bounds = new Bounds(0, 0, width, height);\n            if (!bounds.includes(this.target.__world) || this.needFill || !e.samePixelRatio) {\n                this.addBlock(this.canvas.bounds);\n                this.target.forceUpdate('surface');\n                return;\n            }\n        }\n        this.addBlock(new Bounds(0, 0, 1, 1));\n        this.changed = true;\n    }\n    __onLayoutEnd(event) {\n        if (event.data)\n            event.data.map(item => {\n                let empty;\n                if (item.updatedList)\n                    item.updatedList.list.some(leaf => {\n                        empty = (!leaf.__world.width || !leaf.__world.height);\n                        if (empty) {\n                            if (!leaf.isLeafer)\n                                debug$1.tip(leaf.innerName, ': empty');\n                            empty = (!leaf.isBranch || leaf.isBranchLeaf);\n                        }\n                        return empty;\n                    });\n                this.addBlock(empty ? this.canvas.bounds : item.updatedBounds);\n            });\n    }\n    emitRender(type, bounds, options) {\n        this.target.emitEvent(new RenderEvent(type, this.times, bounds, options));\n    }\n    __listenEvents() {\n        const { target } = this;\n        this.__eventIds = [\n            target.on_(RenderEvent.REQUEST, this.update, this),\n            target.on_(LayoutEvent.END, this.__onLayoutEnd, this),\n            target.on_(RenderEvent.AGAIN, this.renderAgain, this),\n            target.on_(ResizeEvent.RESIZE, this.__onResize, this)\n        ];\n    }\n    __removeListenEvents() {\n        this.target.off_(this.__eventIds);\n    }\n    destroy() {\n        if (this.target) {\n            this.stop();\n            this.__removeListenEvents();\n            this.target = this.canvas = this.config = null;\n        }\n    }\n}\n\nconst { hitRadiusPoint } = BoundsHelper;\nclass Picker {\n    constructor(target, selector) {\n        this.target = target;\n        this.selector = selector;\n    }\n    getByPoint(hitPoint, hitRadius, options) {\n        if (!hitRadius)\n            hitRadius = 0;\n        if (!options)\n            options = {};\n        const through = options.through || false;\n        const ignoreHittable = options.ignoreHittable || false;\n        const target = options.target || this.target;\n        this.exclude = options.exclude || null;\n        this.point = { x: hitPoint.x, y: hitPoint.y, radiusX: hitRadius, radiusY: hitRadius };\n        this.findList = new LeafList(options.findList);\n        if (!options.findList)\n            this.hitBranch(target);\n        const { list } = this.findList;\n        const leaf = this.getBestMatchLeaf(list, options.bottomList, ignoreHittable);\n        const path = ignoreHittable ? this.getPath(leaf) : this.getHitablePath(leaf);\n        this.clear();\n        return through ? { path, target: leaf, throughPath: list.length ? this.getThroughPath(list) : path } : { path, target: leaf };\n    }\n    getBestMatchLeaf(list, bottomList, ignoreHittable) {\n        if (list.length) {\n            let find;\n            this.findList = new LeafList();\n            const { x, y } = this.point;\n            const point = { x, y, radiusX: 0, radiusY: 0 };\n            for (let i = 0, len = list.length; i < len; i++) {\n                find = list[i];\n                if (ignoreHittable || LeafHelper.worldHittable(find)) {\n                    this.hitChild(find, point);\n                    if (this.findList.length)\n                        return this.findList.list[0];\n                }\n            }\n        }\n        if (bottomList) {\n            for (let i = 0, len = bottomList.length; i < len; i++) {\n                this.hitChild(bottomList[i].target, this.point, bottomList[i].proxy);\n                if (this.findList.length)\n                    return this.findList.list[0];\n            }\n        }\n        return list[0];\n    }\n    getPath(leaf) {\n        const path = new LeafList();\n        while (leaf) {\n            path.add(leaf);\n            leaf = leaf.parent;\n        }\n        if (this.target)\n            path.add(this.target);\n        return path;\n    }\n    getHitablePath(leaf) {\n        const path = this.getPath(leaf && leaf.hittable ? leaf : null);\n        let item, hittablePath = new LeafList();\n        for (let i = path.list.length - 1; i > -1; i--) {\n            item = path.list[i];\n            if (!item.__.hittable)\n                break;\n            hittablePath.addAt(item, 0);\n            if (!item.__.hitChildren)\n                break;\n        }\n        return hittablePath;\n    }\n    getThroughPath(list) {\n        const throughPath = new LeafList();\n        const pathList = [];\n        for (let i = list.length - 1; i > -1; i--) {\n            pathList.push(this.getPath(list[i]));\n        }\n        let path, nextPath, leaf;\n        for (let i = 0, len = pathList.length; i < len; i++) {\n            path = pathList[i], nextPath = pathList[i + 1];\n            for (let j = 0, jLen = path.length; j < jLen; j++) {\n                leaf = path.list[j];\n                if (nextPath && nextPath.has(leaf))\n                    break;\n                throughPath.add(leaf);\n            }\n        }\n        return throughPath;\n    }\n    hitBranch(branch) {\n        this.eachFind(branch.children, branch.__onlyHitMask);\n    }\n    eachFind(children, hitMask) {\n        let child, hit;\n        const { point } = this, len = children.length;\n        for (let i = len - 1; i > -1; i--) {\n            child = children[i];\n            if (!child.__.visible || (hitMask && !child.__.mask))\n                continue;\n            hit = child.__.hitRadius ? true : hitRadiusPoint(child.__world, point);\n            if (child.isBranch) {\n                if (hit || child.__ignoreHitWorld) {\n                    this.eachFind(child.children, child.__onlyHitMask);\n                    if (child.isBranchLeaf)\n                        this.hitChild(child, point);\n                }\n            }\n            else {\n                if (hit)\n                    this.hitChild(child, point);\n            }\n        }\n    }\n    hitChild(child, point, proxy) {\n        if (this.exclude && this.exclude.has(child))\n            return;\n        if (child.__hitWorld(point)) {\n            const { parent } = child;\n            if (parent && parent.__hasMask && !child.__.mask && !parent.children.some(item => item.__.mask && item.__hitWorld(point)))\n                return;\n            this.findList.add(proxy || child);\n        }\n    }\n    clear() {\n        this.point = null;\n        this.findList = null;\n        this.exclude = null;\n    }\n    destroy() {\n        this.clear();\n    }\n}\n\nconst { Yes, NoAndSkip, YesAndSkip } = Answer;\nconst idCondition = {}, classNameCondition = {}, tagCondition = {};\nclass Selector {\n    constructor(target, userConfig) {\n        this.config = {};\n        this.innerIdMap = {};\n        this.idMap = {};\n        this.methods = {\n            id: (leaf, name) => leaf.id === name ? (this.target && (this.idMap[name] = leaf), 1) : 0,\n            innerId: (leaf, innerId) => leaf.innerId === innerId ? (this.target && (this.innerIdMap[innerId] = leaf), 1) : 0,\n            className: (leaf, name) => leaf.className === name ? 1 : 0,\n            tag: (leaf, name) => leaf.__tag === name ? 1 : 0,\n            tags: (leaf, nameMap) => nameMap[leaf.__tag] ? 1 : 0\n        };\n        this.target = target;\n        if (userConfig)\n            this.config = DataHelper.default(userConfig, this.config);\n        this.picker = new Picker(target, this);\n        if (target)\n            this.__listenEvents();\n    }\n    getBy(condition, branch, one, options) {\n        switch (typeof condition) {\n            case 'number':\n                const leaf = this.getByInnerId(condition, branch);\n                return one ? leaf : (leaf ? [leaf] : []);\n            case 'string':\n                switch (condition[0]) {\n                    case '#':\n                        idCondition.id = condition.substring(1), condition = idCondition;\n                        break;\n                    case '.':\n                        classNameCondition.className = condition.substring(1), condition = classNameCondition;\n                        break;\n                    default:\n                        tagCondition.tag = condition, condition = tagCondition;\n                }\n            case 'object':\n                if (condition.id !== undefined) {\n                    const leaf = this.getById(condition.id, branch);\n                    return one ? leaf : (leaf ? [leaf] : []);\n                }\n                else if (condition.tag) {\n                    const { tag } = condition, isArray = tag instanceof Array;\n                    return this.getByMethod(isArray ? this.methods.tags : this.methods.tag, branch, one, isArray ? DataHelper.toMap(tag) : tag);\n                }\n                else {\n                    return this.getByMethod(this.methods.className, branch, one, condition.className);\n                }\n            case 'function':\n                return this.getByMethod(condition, branch, one, options);\n        }\n    }\n    getByPoint(hitPoint, hitRadius, options) {\n        if (Platform.name === 'node' && this.target)\n            this.target.emit(LayoutEvent.CHECK_UPDATE);\n        return this.picker.getByPoint(hitPoint, hitRadius, options);\n    }\n    getByInnerId(innerId, branch) {\n        const cache = this.innerIdMap[innerId];\n        if (cache)\n            return cache;\n        this.eachFind(this.toChildren(branch), this.methods.innerId, null, innerId);\n        return this.findLeaf;\n    }\n    getById(id, branch) {\n        const cache = this.idMap[id];\n        if (cache && LeafHelper.hasParent(cache, branch || this.target))\n            return cache;\n        this.eachFind(this.toChildren(branch), this.methods.id, null, id);\n        return this.findLeaf;\n    }\n    getByClassName(className, branch) {\n        return this.getByMethod(this.methods.className, branch, false, className);\n    }\n    getByTag(tag, branch) {\n        return this.getByMethod(this.methods.tag, branch, false, tag);\n    }\n    getByMethod(method, branch, one, options) {\n        const list = one ? null : [];\n        this.eachFind(this.toChildren(branch), method, list, options);\n        return list || this.findLeaf;\n    }\n    eachFind(children, method, list, options) {\n        let child, result;\n        for (let i = 0, len = children.length; i < len; i++) {\n            child = children[i];\n            result = method(child, options);\n            if (result === Yes || result === YesAndSkip) {\n                if (list) {\n                    list.push(child);\n                }\n                else {\n                    this.findLeaf = child;\n                    return;\n                }\n            }\n            if (child.isBranch && result < NoAndSkip)\n                this.eachFind(child.children, method, list, options);\n        }\n    }\n    toChildren(branch) {\n        this.findLeaf = null;\n        return [branch || this.target];\n    }\n    __onRemoveChild(event) {\n        const { id, innerId } = event.child;\n        if (this.idMap[id])\n            delete this.idMap[id];\n        if (this.innerIdMap[innerId])\n            delete this.innerIdMap[innerId];\n    }\n    __checkIdChange(event) {\n        if (event.attrName === 'id') {\n            const id = event.oldValue;\n            if (this.idMap[id])\n                delete this.idMap[id];\n        }\n    }\n    __listenEvents() {\n        this.__eventIds = [\n            this.target.on_(ChildEvent.REMOVE, this.__onRemoveChild, this),\n            this.target.on_(PropertyEvent.CHANGE, this.__checkIdChange, this)\n        ];\n    }\n    __removeListenEvents() {\n        this.target.off_(this.__eventIds);\n        this.__eventIds.length = 0;\n    }\n    destroy() {\n        if (this.__eventIds.length) {\n            this.__removeListenEvents();\n            this.picker.destroy();\n            this.findLeaf = null;\n            this.innerIdMap = {};\n            this.idMap = {};\n        }\n    }\n}\n\nObject.assign(Creator, {\n    watcher: (target, options) => new Watcher(target, options),\n    layouter: (target, options) => new Layouter(target, options),\n    renderer: (target, canvas, options) => new Renderer(target, canvas, options),\n    selector: (target, options) => new Selector(target, options)\n});\nPlatform.layout = Layouter.fullLayout;\n\nconst PointerEventHelper = {\n    convert(e, local) {\n        const base = InteractionHelper.getBase(e);\n        const data = Object.assign(Object.assign({}, base), { x: local.x, y: local.y, width: e.width, height: e.height, pointerType: e.pointerType, pressure: e.pressure });\n        if (data.pointerType === 'pen') {\n            data.tangentialPressure = e.tangentialPressure;\n            data.tiltX = e.tiltX;\n            data.tiltY = e.tiltY;\n            data.twist = e.twist;\n        }\n        return data;\n    },\n    convertMouse(e, local) {\n        const base = InteractionHelper.getBase(e);\n        return Object.assign(Object.assign({}, base), { x: local.x, y: local.y, width: 1, height: 1, pointerType: 'mouse', pressure: 0.5 });\n    },\n    convertTouch(e, local) {\n        const touch = PointerEventHelper.getTouch(e);\n        const base = InteractionHelper.getBase(e);\n        return Object.assign(Object.assign({}, base), { x: local.x, y: local.y, width: 1, height: 1, pointerType: 'touch', multiTouch: e.touches.length > 1, pressure: touch.force });\n    },\n    getTouch(e) {\n        return e.targetTouches[0] || e.changedTouches[0];\n    }\n};\n\nconst WheelEventHelper = {\n    getMove(e, config) {\n        let { moveSpeed } = config;\n        let { deltaX, deltaY } = e;\n        if (e.shiftKey && !deltaX) {\n            deltaX = deltaY;\n            deltaY = 0;\n        }\n        if (deltaX > 50)\n            deltaX = Math.max(50, deltaX / 3);\n        if (deltaY > 50)\n            deltaY = Math.max(50, deltaY / 3);\n        return { x: -deltaX * moveSpeed * 2, y: -deltaY * moveSpeed * 2 };\n    },\n    getScale(e, config) {\n        let zoom;\n        let scale = 1;\n        let { zoomMode, zoomSpeed } = config;\n        const delta = e.deltaY || e.deltaX;\n        if (zoomMode) {\n            zoom = (zoomMode === 'mouse') ? true : (!e.deltaX && (Platform.intWheelDeltaY ? Math.abs(delta) > 17 : Math.ceil(delta) !== delta));\n            if (e.shiftKey || e.metaKey || e.ctrlKey)\n                zoom = true;\n        }\n        else {\n            zoom = !e.shiftKey && (e.metaKey || e.ctrlKey);\n        }\n        if (zoom) {\n            zoomSpeed = MathHelper.within(zoomSpeed, 0, 1);\n            const min = e.deltaY ? config.delta.y : config.delta.x;\n            scale = 1 - delta / (min * 4) * zoomSpeed;\n            if (scale < 0.5)\n                scale = 0.5;\n            if (scale >= 1.5)\n                scale = 1.5;\n        }\n        return scale;\n    }\n};\n\nconst KeyEventHelper = {\n    convert(e) {\n        const base = InteractionHelper.getBase(e);\n        const data = Object.assign(Object.assign({}, base), { code: e.code, key: e.key });\n        return data;\n    }\n};\n\nconst { getMoveEventData, getZoomEventData, getRotateEventData, pathCanDrag } = InteractionHelper;\nclass Interaction extends InteractionBase {\n    __listenEvents() {\n        super.__listenEvents();\n        const view = this.view = this.canvas.view;\n        this.viewEvents = {\n            'pointerdown': this.onPointerDown,\n            'mousedown': this.onMouseDown,\n            'touchstart': this.onTouchStart,\n            'contextmenu': this.onContextMenu,\n            'wheel': this.onWheel,\n            'gesturestart': this.onGesturestart,\n            'gesturechange': this.onGesturechange,\n            'gestureend': this.onGestureend\n        };\n        this.windowEvents = {\n            'pointermove': this.onPointerMove,\n            'pointerup': this.onPointerUp,\n            'pointercancel': this.onPointerCancel,\n            'mousemove': this.onMouseMove,\n            'mouseup': this.onMouseUp,\n            'touchmove': this.onTouchMove,\n            'touchend': this.onTouchEnd,\n            'touchcancel': this.onTouchCancel,\n            'keydown': this.onKeyDown,\n            'keyup': this.onKeyUp,\n            'scroll': this.onScroll\n        };\n        const { viewEvents, windowEvents } = this;\n        for (let name in viewEvents) {\n            viewEvents[name] = viewEvents[name].bind(this);\n            view.addEventListener(name, viewEvents[name]);\n        }\n        for (let name in windowEvents) {\n            windowEvents[name] = windowEvents[name].bind(this);\n            window.addEventListener(name, windowEvents[name]);\n        }\n    }\n    __removeListenEvents() {\n        super.__removeListenEvents();\n        const { viewEvents, windowEvents } = this;\n        for (let name in viewEvents) {\n            this.view.removeEventListener(name, viewEvents[name]);\n            this.viewEvents = {};\n        }\n        for (let name in windowEvents) {\n            window.removeEventListener(name, windowEvents[name]);\n            this.windowEvents = {};\n        }\n    }\n    getTouches(touches) {\n        const list = [];\n        for (let i = 0, len = touches.length; i < len; i++) {\n            list.push(touches[i]);\n        }\n        return list;\n    }\n    preventDefaultPointer(e) {\n        const { pointer } = this.config;\n        if (pointer.preventDefault)\n            e.preventDefault();\n    }\n    preventDefaultWheel(e) {\n        const { wheel } = this.config;\n        if (wheel.preventDefault)\n            e.preventDefault();\n    }\n    preventWindowPointer(e) {\n        return !this.downData && e.target !== this.view;\n    }\n    onKeyDown(e) {\n        this.keyDown(KeyEventHelper.convert(e));\n    }\n    onKeyUp(e) {\n        this.keyUp(KeyEventHelper.convert(e));\n    }\n    onContextMenu(e) {\n        if (this.config.pointer.preventDefaultMenu)\n            e.preventDefault();\n        this.menu(PointerEventHelper.convert(e, this.getLocal(e)));\n    }\n    onScroll() {\n        this.canvas.updateClientBounds();\n    }\n    onPointerDown(e) {\n        this.preventDefaultPointer(e);\n        if (this.config.pointer.touch || this.useMultiTouch)\n            return;\n        this.usePointer || (this.usePointer = true);\n        this.pointerDown(PointerEventHelper.convert(e, this.getLocal(e)));\n    }\n    onPointerMove(e) {\n        if (this.config.pointer.touch || this.useMultiTouch || this.preventWindowPointer(e))\n            return;\n        this.usePointer || (this.usePointer = true);\n        this.pointerMove(PointerEventHelper.convert(e, this.getLocal(e, true)));\n    }\n    onPointerUp(e) {\n        if (this.downData)\n            this.preventDefaultPointer(e);\n        if (this.config.pointer.touch || this.useMultiTouch || this.preventWindowPointer(e))\n            return;\n        this.pointerUp(PointerEventHelper.convert(e, this.getLocal(e)));\n    }\n    onPointerCancel() {\n        if (this.useMultiTouch)\n            return;\n        this.pointerCancel();\n    }\n    onMouseDown(e) {\n        this.preventDefaultPointer(e);\n        if (this.useTouch || this.usePointer)\n            return;\n        this.pointerDown(PointerEventHelper.convertMouse(e, this.getLocal(e)));\n    }\n    onMouseMove(e) {\n        if (this.useTouch || this.usePointer || this.preventWindowPointer(e))\n            return;\n        this.pointerMove(PointerEventHelper.convertMouse(e, this.getLocal(e, true)));\n    }\n    onMouseUp(e) {\n        if (this.downData)\n            this.preventDefaultPointer(e);\n        if (this.useTouch || this.usePointer || this.preventWindowPointer(e))\n            return;\n        this.pointerUp(PointerEventHelper.convertMouse(e, this.getLocal(e)));\n    }\n    onMouseCancel() {\n        if (this.useTouch || this.usePointer)\n            return;\n        this.pointerCancel();\n    }\n    onTouchStart(e) {\n        const touch = PointerEventHelper.getTouch(e);\n        const local = this.getLocal(touch, true);\n        const { preventDefault } = this.config.touch;\n        if (preventDefault === true || (preventDefault === 'auto' && pathCanDrag(this.findPath(local))))\n            e.preventDefault();\n        this.multiTouchStart(e);\n        if (this.usePointer)\n            return;\n        if (this.touchTimer) {\n            window.clearTimeout(this.touchTimer);\n            this.touchTimer = 0;\n        }\n        this.useTouch = true;\n        this.pointerDown(PointerEventHelper.convertTouch(e, local));\n    }\n    onTouchMove(e) {\n        this.multiTouchMove(e);\n        if (this.usePointer || this.preventWindowPointer(e))\n            return;\n        const touch = PointerEventHelper.getTouch(e);\n        this.pointerMove(PointerEventHelper.convertTouch(e, this.getLocal(touch)));\n    }\n    onTouchEnd(e) {\n        this.multiTouchEnd();\n        if (this.usePointer || this.preventWindowPointer(e))\n            return;\n        if (this.touchTimer)\n            clearTimeout(this.touchTimer);\n        this.touchTimer = setTimeout(() => {\n            this.useTouch = false;\n        }, 500);\n        const touch = PointerEventHelper.getTouch(e);\n        this.pointerUp(PointerEventHelper.convertTouch(e, this.getLocal(touch)));\n    }\n    onTouchCancel() {\n        if (this.usePointer)\n            return;\n        this.pointerCancel();\n    }\n    multiTouchStart(e) {\n        this.useMultiTouch = (e.touches.length > 1);\n        this.touches = this.useMultiTouch ? this.getTouches(e.touches) : undefined;\n        if (this.useMultiTouch)\n            this.pointerCancel();\n    }\n    multiTouchMove(e) {\n        if (!this.useMultiTouch)\n            return;\n        if (e.touches.length > 1) {\n            const touches = this.getTouches(e.touches);\n            const list = this.getKeepTouchList(this.touches, touches);\n            if (list.length > 1) {\n                this.multiTouch(InteractionHelper.getBase(e), list);\n                this.touches = touches;\n            }\n        }\n    }\n    multiTouchEnd() {\n        this.touches = null;\n        this.useMultiTouch = false;\n        this.transformEnd();\n    }\n    getKeepTouchList(old, touches) {\n        let to;\n        const list = [];\n        old.forEach(from => {\n            to = touches.find(touch => touch.identifier === from.identifier);\n            if (to)\n                list.push({ from: this.getLocal(from), to: this.getLocal(to) });\n        });\n        return list;\n    }\n    getLocalTouchs(points) {\n        return points.map(point => this.getLocal(point));\n    }\n    onWheel(e) {\n        this.preventDefaultWheel(e);\n        const { wheel } = this.config;\n        if (wheel.disabled)\n            return;\n        const scale = wheel.getScale ? wheel.getScale(e, wheel) : WheelEventHelper.getScale(e, wheel);\n        const local = this.getLocal(e);\n        const eventBase = InteractionHelper.getBase(e);\n        scale !== 1 ? this.zoom(getZoomEventData(local, scale, eventBase)) : this.move(getMoveEventData(local, wheel.getMove ? wheel.getMove(e, wheel) : WheelEventHelper.getMove(e, wheel), eventBase));\n    }\n    onGesturestart(e) {\n        if (this.useMultiTouch)\n            return;\n        this.preventDefaultWheel(e);\n        this.lastGestureScale = 1;\n        this.lastGestureRotation = 0;\n    }\n    onGesturechange(e) {\n        if (this.useMultiTouch)\n            return;\n        this.preventDefaultWheel(e);\n        const local = this.getLocal(e);\n        const eventBase = InteractionHelper.getBase(e);\n        const changeScale = e.scale / this.lastGestureScale;\n        const changeAngle = e.rotation - this.lastGestureRotation;\n        let { rotateSpeed } = this.config.wheel;\n        rotateSpeed = MathHelper.within(rotateSpeed, 0, 1);\n        this.zoom(getZoomEventData(local, changeScale * changeScale, eventBase));\n        this.rotate(getRotateEventData(local, changeAngle / Math.PI * 180 * (rotateSpeed / 4 + 0.1), eventBase));\n        this.lastGestureScale = e.scale;\n        this.lastGestureRotation = e.rotation;\n    }\n    onGestureend(e) {\n        if (this.useMultiTouch)\n            return;\n        this.preventDefaultWheel(e);\n        this.transformEnd();\n    }\n    setCursor(cursor) {\n        super.setCursor(cursor);\n        const list = [];\n        this.eachCursor(cursor, list);\n        if (typeof list[list.length - 1] === 'object')\n            list.push('default');\n        this.canvas.view.style.cursor = list.map(item => (typeof item === 'object') ? `url(${item.url}) ${item.x || 0} ${item.y || 0}` : item).join(',');\n    }\n    eachCursor(cursor, list, level = 0) {\n        level++;\n        if (cursor instanceof Array) {\n            cursor.forEach(item => this.eachCursor(item, list, level));\n        }\n        else {\n            const custom = typeof cursor === 'string' && Cursor.get(cursor);\n            if (custom && level < 2) {\n                this.eachCursor(custom, list, level);\n            }\n            else {\n                list.push(cursor);\n            }\n        }\n    }\n    destroy() {\n        if (this.view) {\n            super.destroy();\n            this.view = null;\n            this.touches = null;\n        }\n    }\n}\n\nfunction fillText(ui, canvas) {\n    let row;\n    const { rows, decorationY, decorationHeight } = ui.__.__textDrawData;\n    for (let i = 0, len = rows.length; i < len; i++) {\n        row = rows[i];\n        if (row.text)\n            canvas.fillText(row.text, row.x, row.y);\n        else if (row.data)\n            row.data.forEach(charData => { canvas.fillText(charData.char, charData.x, row.y); });\n        if (decorationY)\n            canvas.fillRect(row.x, row.y + decorationY, row.width, decorationHeight);\n    }\n}\n\nfunction fill(fill, ui, canvas) {\n    canvas.fillStyle = fill;\n    ui.__.__font ? fillText(ui, canvas) : (ui.__.windingRule ? canvas.fill(ui.__.windingRule) : canvas.fill());\n}\nfunction fills(fills, ui, canvas) {\n    let item;\n    const { windingRule, __font } = ui.__;\n    for (let i = 0, len = fills.length; i < len; i++) {\n        item = fills[i];\n        if (item.image && PaintImage.checkImage(ui, canvas, item, !__font))\n            continue;\n        if (item.style) {\n            canvas.fillStyle = item.style;\n            if (item.transform) {\n                canvas.save();\n                canvas.transform(item.transform);\n                if (item.blendMode)\n                    canvas.blendMode = item.blendMode;\n                __font ? fillText(ui, canvas) : (windingRule ? canvas.fill(windingRule) : canvas.fill());\n                canvas.restore();\n            }\n            else {\n                if (item.blendMode) {\n                    canvas.saveBlendMode(item.blendMode);\n                    __font ? fillText(ui, canvas) : (windingRule ? canvas.fill(windingRule) : canvas.fill());\n                    canvas.restoreBlendMode();\n                }\n                else {\n                    __font ? fillText(ui, canvas) : (windingRule ? canvas.fill(windingRule) : canvas.fill());\n                }\n            }\n        }\n    }\n}\n\nfunction strokeText(stroke, ui, canvas) {\n    const { strokeAlign } = ui.__;\n    const isStrokes = typeof stroke !== 'string';\n    switch (strokeAlign) {\n        case 'center':\n            canvas.setStroke(isStrokes ? undefined : stroke, ui.__.strokeWidth, ui.__);\n            isStrokes ? drawStrokesStyle(stroke, true, ui, canvas) : drawTextStroke(ui, canvas);\n            break;\n        case 'inside':\n            drawAlignStroke('inside', stroke, isStrokes, ui, canvas);\n            break;\n        case 'outside':\n            drawAlignStroke('outside', stroke, isStrokes, ui, canvas);\n            break;\n    }\n}\nfunction drawAlignStroke(align, stroke, isStrokes, ui, canvas) {\n    const { __strokeWidth, __font } = ui.__;\n    const out = canvas.getSameCanvas(true, true);\n    out.setStroke(isStrokes ? undefined : stroke, __strokeWidth * 2, ui.__);\n    out.font = __font;\n    isStrokes ? drawStrokesStyle(stroke, true, ui, out) : drawTextStroke(ui, out);\n    out.blendMode = align === 'outside' ? 'destination-out' : 'destination-in';\n    fillText(ui, out);\n    out.blendMode = 'normal';\n    if (ui.__worldFlipped)\n        canvas.copyWorldByReset(out, ui.__nowWorld);\n    else\n        canvas.copyWorldToInner(out, ui.__nowWorld, ui.__layout.renderBounds);\n    out.recycle(ui.__nowWorld);\n}\nfunction drawTextStroke(ui, canvas) {\n    let row;\n    const { rows, decorationY, decorationHeight } = ui.__.__textDrawData;\n    for (let i = 0, len = rows.length; i < len; i++) {\n        row = rows[i];\n        if (row.text)\n            canvas.strokeText(row.text, row.x, row.y);\n        else if (row.data)\n            row.data.forEach(charData => { canvas.strokeText(charData.char, charData.x, row.y); });\n        if (decorationY)\n            canvas.strokeRect(row.x, row.y + decorationY, row.width, decorationHeight);\n    }\n}\nfunction drawStrokesStyle(strokes, isText, ui, canvas) {\n    let item;\n    for (let i = 0, len = strokes.length; i < len; i++) {\n        item = strokes[i];\n        if (item.image && PaintImage.checkImage(ui, canvas, item, false))\n            continue;\n        if (item.style) {\n            canvas.strokeStyle = item.style;\n            if (item.blendMode) {\n                canvas.saveBlendMode(item.blendMode);\n                isText ? drawTextStroke(ui, canvas) : canvas.stroke();\n                canvas.restoreBlendMode();\n            }\n            else {\n                isText ? drawTextStroke(ui, canvas) : canvas.stroke();\n            }\n        }\n    }\n}\n\nfunction stroke(stroke, ui, canvas) {\n    const options = ui.__;\n    const { __strokeWidth, strokeAlign, __font } = options;\n    if (!__strokeWidth)\n        return;\n    if (__font) {\n        strokeText(stroke, ui, canvas);\n    }\n    else {\n        switch (strokeAlign) {\n            case 'center':\n                canvas.setStroke(stroke, __strokeWidth, options);\n                canvas.stroke();\n                if (options.__useArrow)\n                    strokeArrow(ui, canvas);\n                break;\n            case 'inside':\n                canvas.save();\n                canvas.setStroke(stroke, __strokeWidth * 2, options);\n                options.windingRule ? canvas.clip(options.windingRule) : canvas.clip();\n                canvas.stroke();\n                canvas.restore();\n                break;\n            case 'outside':\n                const out = canvas.getSameCanvas(true, true);\n                out.setStroke(stroke, __strokeWidth * 2, options);\n                ui.__drawRenderPath(out);\n                out.stroke();\n                options.windingRule ? out.clip(options.windingRule) : out.clip();\n                out.clearWorld(ui.__layout.renderBounds);\n                if (ui.__worldFlipped)\n                    canvas.copyWorldByReset(out, ui.__nowWorld);\n                else\n                    canvas.copyWorldToInner(out, ui.__nowWorld, ui.__layout.renderBounds);\n                out.recycle(ui.__nowWorld);\n                break;\n        }\n    }\n}\nfunction strokes(strokes, ui, canvas) {\n    const options = ui.__;\n    const { __strokeWidth, strokeAlign, __font } = options;\n    if (!__strokeWidth)\n        return;\n    if (__font) {\n        strokeText(strokes, ui, canvas);\n    }\n    else {\n        switch (strokeAlign) {\n            case 'center':\n                canvas.setStroke(undefined, __strokeWidth, options);\n                drawStrokesStyle(strokes, false, ui, canvas);\n                if (options.__useArrow)\n                    strokeArrow(ui, canvas);\n                break;\n            case 'inside':\n                canvas.save();\n                canvas.setStroke(undefined, __strokeWidth * 2, options);\n                options.windingRule ? canvas.clip(options.windingRule) : canvas.clip();\n                drawStrokesStyle(strokes, false, ui, canvas);\n                canvas.restore();\n                break;\n            case 'outside':\n                const { renderBounds } = ui.__layout;\n                const out = canvas.getSameCanvas(true, true);\n                ui.__drawRenderPath(out);\n                out.setStroke(undefined, __strokeWidth * 2, options);\n                drawStrokesStyle(strokes, false, ui, out);\n                options.windingRule ? out.clip(options.windingRule) : out.clip();\n                out.clearWorld(renderBounds);\n                if (ui.__worldFlipped)\n                    canvas.copyWorldByReset(out, ui.__nowWorld);\n                else\n                    canvas.copyWorldToInner(out, ui.__nowWorld, renderBounds);\n                out.recycle(ui.__nowWorld);\n                break;\n        }\n    }\n}\nfunction strokeArrow(ui, canvas) {\n    if (ui.__.dashPattern) {\n        canvas.beginPath();\n        ui.__drawPathByData(canvas, ui.__.__pathForArrow);\n        canvas.dashPattern = null;\n        canvas.stroke();\n    }\n}\n\nconst { getSpread, getOuterOf, getByMove, getIntersectData } = BoundsHelper;\nfunction shape(ui, current, options) {\n    const canvas = current.getSameCanvas();\n    const nowWorld = ui.__nowWorld;\n    let bounds, fitMatrix, shapeBounds, worldCanvas;\n    let { scaleX, scaleY } = nowWorld;\n    if (scaleX < 0)\n        scaleX = -scaleX;\n    if (scaleY < 0)\n        scaleY = -scaleY;\n    if (current.bounds.includes(nowWorld)) {\n        worldCanvas = canvas;\n        bounds = shapeBounds = nowWorld;\n    }\n    else {\n        const { renderShapeSpread: spread } = ui.__layout;\n        const worldClipBounds = getIntersectData(spread ? getSpread(current.bounds, scaleX === scaleY ? spread * scaleX : [spread * scaleY, spread * scaleX]) : current.bounds, nowWorld);\n        fitMatrix = current.bounds.getFitMatrix(worldClipBounds);\n        let { a: fitScaleX, d: fitScaleY } = fitMatrix;\n        if (fitMatrix.a < 1) {\n            worldCanvas = current.getSameCanvas();\n            ui.__renderShape(worldCanvas, options);\n            scaleX *= fitScaleX;\n            scaleY *= fitScaleY;\n        }\n        shapeBounds = getOuterOf(nowWorld, fitMatrix);\n        bounds = getByMove(shapeBounds, -fitMatrix.e, -fitMatrix.f);\n        if (options.matrix) {\n            const { matrix } = options;\n            fitMatrix.multiply(matrix);\n            fitScaleX *= matrix.scaleX;\n            fitScaleY *= matrix.scaleY;\n        }\n        options = Object.assign(Object.assign({}, options), { matrix: fitMatrix.withScale(fitScaleX, fitScaleY) });\n    }\n    ui.__renderShape(canvas, options);\n    return {\n        canvas, matrix: fitMatrix, bounds,\n        worldCanvas, shapeBounds, scaleX, scaleY\n    };\n}\n\nlet recycleMap;\nfunction compute(attrName, ui) {\n    const data = ui.__, leafPaints = [];\n    let paints = data.__input[attrName], hasOpacityPixel;\n    if (!(paints instanceof Array))\n        paints = [paints];\n    recycleMap = PaintImage.recycleImage(attrName, data);\n    for (let i = 0, len = paints.length, item; i < len; i++) {\n        item = getLeafPaint(attrName, paints[i], ui);\n        if (item)\n            leafPaints.push(item);\n    }\n    data['_' + attrName] = leafPaints.length ? leafPaints : undefined;\n    if (leafPaints.length && leafPaints[0].image)\n        hasOpacityPixel = leafPaints[0].image.hasOpacityPixel;\n    attrName === 'fill' ? data.__pixelFill = hasOpacityPixel : data.__pixelStroke = hasOpacityPixel;\n}\nfunction getLeafPaint(attrName, paint, ui) {\n    if (typeof paint !== 'object' || paint.visible === false || paint.opacity === 0)\n        return undefined;\n    const { boxBounds } = ui.__layout;\n    switch (paint.type) {\n        case 'solid':\n            let { type, blendMode, color, opacity } = paint;\n            return { type, blendMode, style: ColorConvert.string(color, opacity) };\n        case 'image':\n            return PaintImage.image(ui, attrName, paint, boxBounds, !recycleMap || !recycleMap[paint.url]);\n        case 'linear':\n            return PaintGradient.linearGradient(paint, boxBounds);\n        case 'radial':\n            return PaintGradient.radialGradient(paint, boxBounds);\n        case 'angular':\n            return PaintGradient.conicGradient(paint, boxBounds);\n        default:\n            return paint.r !== undefined ? { type: 'solid', style: ColorConvert.string(paint) } : undefined;\n    }\n}\n\nconst PaintModule = {\n    compute,\n    fill,\n    fills,\n    fillText,\n    stroke,\n    strokes,\n    strokeText,\n    drawTextStroke,\n    shape\n};\n\nlet origin = {};\nconst { get: get$3, rotateOfOuter: rotateOfOuter$1, translate: translate$1, scaleOfOuter: scaleOfOuter$1, scale: scaleHelper, rotate } = MatrixHelper;\nfunction fillOrFitMode(data, box, x, y, scaleX, scaleY, rotation) {\n    const transform = get$3();\n    translate$1(transform, box.x + x, box.y + y);\n    scaleHelper(transform, scaleX, scaleY);\n    if (rotation)\n        rotateOfOuter$1(transform, { x: box.x + box.width / 2, y: box.y + box.height / 2 }, rotation);\n    data.transform = transform;\n}\nfunction clipMode(data, box, x, y, scaleX, scaleY, rotation) {\n    const transform = get$3();\n    translate$1(transform, box.x + x, box.y + y);\n    if (scaleX)\n        scaleHelper(transform, scaleX, scaleY);\n    if (rotation)\n        rotate(transform, rotation);\n    data.transform = transform;\n}\nfunction repeatMode(data, box, width, height, x, y, scaleX, scaleY, rotation, align) {\n    const transform = get$3();\n    if (rotation) {\n        if (align === 'center') {\n            rotateOfOuter$1(transform, { x: width / 2, y: height / 2 }, rotation);\n        }\n        else {\n            rotate(transform, rotation);\n            switch (rotation) {\n                case 90:\n                    translate$1(transform, height, 0);\n                    break;\n                case 180:\n                    translate$1(transform, width, height);\n                    break;\n                case 270:\n                    translate$1(transform, 0, width);\n                    break;\n            }\n        }\n    }\n    origin.x = box.x + x;\n    origin.y = box.y + y;\n    translate$1(transform, origin.x, origin.y);\n    if (scaleX)\n        scaleOfOuter$1(transform, origin, scaleX, scaleY);\n    data.transform = transform;\n}\n\nconst { get: get$2, translate } = MatrixHelper;\nconst tempBox = new Bounds();\nconst tempPoint = {};\nconst tempScaleData = {};\nfunction createData(leafPaint, image, paint, box) {\n    const { blendMode, sync } = paint;\n    if (blendMode)\n        leafPaint.blendMode = blendMode;\n    if (sync)\n        leafPaint.sync = sync;\n    leafPaint.data = getPatternData(paint, box, image);\n}\nfunction getPatternData(paint, box, image) {\n    let { width, height } = image;\n    if (paint.padding)\n        box = tempBox.set(box).shrink(paint.padding);\n    if (paint.mode === 'strench')\n        paint.mode = 'stretch';\n    const { opacity, mode, align, offset, scale, size, rotation, repeat } = paint;\n    const sameBox = box.width === width && box.height === height;\n    const data = { mode };\n    const swapSize = align !== 'center' && (rotation || 0) % 180 === 90;\n    const swapWidth = swapSize ? height : width, swapHeight = swapSize ? width : height;\n    let x = 0, y = 0, scaleX, scaleY;\n    if (!mode || mode === 'cover' || mode === 'fit') {\n        if (!sameBox || rotation) {\n            const sw = box.width / swapWidth, sh = box.height / swapHeight;\n            scaleX = scaleY = mode === 'fit' ? Math.min(sw, sh) : Math.max(sw, sh);\n            x += (box.width - width * scaleX) / 2, y += (box.height - height * scaleY) / 2;\n        }\n    }\n    else if (scale || size) {\n        MathHelper.getScaleData(scale, size, image, tempScaleData);\n        scaleX = tempScaleData.scaleX;\n        scaleY = tempScaleData.scaleY;\n    }\n    if (align) {\n        const imageBounds = { x, y, width: swapWidth, height: swapHeight };\n        if (scaleX)\n            imageBounds.width *= scaleX, imageBounds.height *= scaleY;\n        AlignHelper.toPoint(align, imageBounds, box, tempPoint, true);\n        x += tempPoint.x, y += tempPoint.y;\n    }\n    if (offset)\n        x += offset.x, y += offset.y;\n    switch (mode) {\n        case 'stretch':\n            if (!sameBox)\n                width = box.width, height = box.height;\n            break;\n        case 'normal':\n        case 'clip':\n            if (x || y || scaleX || rotation)\n                clipMode(data, box, x, y, scaleX, scaleY, rotation);\n            break;\n        case 'repeat':\n            if (!sameBox || scaleX || rotation)\n                repeatMode(data, box, width, height, x, y, scaleX, scaleY, rotation, align);\n            if (!repeat)\n                data.repeat = 'repeat';\n            break;\n        case 'fit':\n        case 'cover':\n        default:\n            if (scaleX)\n                fillOrFitMode(data, box, x, y, scaleX, scaleY, rotation);\n    }\n    if (!data.transform) {\n        if (box.x || box.y) {\n            data.transform = get$2();\n            translate(data.transform, box.x, box.y);\n        }\n    }\n    if (scaleX && mode !== 'stretch') {\n        data.scaleX = scaleX;\n        data.scaleY = scaleY;\n    }\n    data.width = width;\n    data.height = height;\n    if (opacity)\n        data.opacity = opacity;\n    if (repeat)\n        data.repeat = typeof repeat === 'string' ? (repeat === 'x' ? 'repeat-x' : 'repeat-y') : 'repeat';\n    return data;\n}\n\nlet cache, box = new Bounds();\nconst { isSame } = BoundsHelper;\nfunction image(ui, attrName, paint, boxBounds, firstUse) {\n    let leafPaint, event;\n    const image = ImageManager.get(paint);\n    if (cache && paint === cache.paint && isSame(boxBounds, cache.boxBounds)) {\n        leafPaint = cache.leafPaint;\n    }\n    else {\n        leafPaint = { type: paint.type, image };\n        cache = image.use > 1 ? { leafPaint, paint, boxBounds: box.set(boxBounds) } : null;\n    }\n    if (firstUse || image.loading)\n        event = { image, attrName, attrValue: paint };\n    if (image.ready) {\n        checkSizeAndCreateData(ui, attrName, paint, image, leafPaint, boxBounds);\n        if (firstUse) {\n            onLoad(ui, event);\n            onLoadSuccess(ui, event);\n        }\n    }\n    else if (image.error) {\n        if (firstUse)\n            onLoadError(ui, event, image.error);\n    }\n    else {\n        if (firstUse) {\n            ignoreRender(ui, true);\n            onLoad(ui, event);\n        }\n        leafPaint.loadId = image.load(() => {\n            ignoreRender(ui, false);\n            if (!ui.destroyed) {\n                if (checkSizeAndCreateData(ui, attrName, paint, image, leafPaint, boxBounds)) {\n                    if (image.hasOpacityPixel)\n                        ui.__layout.hitCanvasChanged = true;\n                    ui.forceUpdate('surface');\n                }\n                onLoadSuccess(ui, event);\n            }\n            leafPaint.loadId = null;\n        }, (error) => {\n            ignoreRender(ui, false);\n            onLoadError(ui, event, error);\n            leafPaint.loadId = null;\n        });\n    }\n    return leafPaint;\n}\nfunction checkSizeAndCreateData(ui, attrName, paint, image, leafPaint, boxBounds) {\n    if (attrName === 'fill' && !ui.__.__naturalWidth) {\n        const data = ui.__;\n        data.__naturalWidth = image.width / data.pixelRatio;\n        data.__naturalHeight = image.height / data.pixelRatio;\n        if (data.__autoSide) {\n            ui.forceUpdate('width');\n            if (ui.__proxyData) {\n                ui.setProxyAttr('width', data.width);\n                ui.setProxyAttr('height', data.height);\n            }\n            return false;\n        }\n    }\n    if (!leafPaint.data)\n        createData(leafPaint, image, paint, boxBounds);\n    return true;\n}\nfunction onLoad(ui, event) {\n    emit(ui, ImageEvent.LOAD, event);\n}\nfunction onLoadSuccess(ui, event) {\n    emit(ui, ImageEvent.LOADED, event);\n}\nfunction onLoadError(ui, event, error) {\n    event.error = error;\n    ui.forceUpdate('surface');\n    emit(ui, ImageEvent.ERROR, event);\n}\nfunction emit(ui, type, data) {\n    if (ui.hasEvent(type))\n        ui.emitEvent(new ImageEvent(type, data));\n}\nfunction ignoreRender(ui, value) {\n    const { leafer } = ui;\n    if (leafer && leafer.viewReady)\n        leafer.renderer.ignore = value;\n}\n\nconst { get: get$1, scale, copy: copy$1 } = MatrixHelper;\nconst { ceil, abs: abs$1 } = Math;\nfunction createPattern(ui, paint, pixelRatio) {\n    let { scaleX, scaleY } = ImageManager.patternLocked ? ui.__world : ui.__nowWorld;\n    const id = scaleX + '-' + scaleY + '-' + pixelRatio;\n    if (paint.patternId !== id && !ui.destroyed) {\n        scaleX = abs$1(scaleX);\n        scaleY = abs$1(scaleY);\n        const { image, data } = paint;\n        let imageScale, imageMatrix, { width, height, scaleX: sx, scaleY: sy, opacity, transform, repeat } = data;\n        if (sx) {\n            imageMatrix = get$1();\n            copy$1(imageMatrix, transform);\n            scale(imageMatrix, 1 / sx, 1 / sy);\n            scaleX *= sx;\n            scaleY *= sy;\n        }\n        scaleX *= pixelRatio;\n        scaleY *= pixelRatio;\n        width *= scaleX;\n        height *= scaleY;\n        const size = width * height;\n        if (!repeat) {\n            if (size > Platform.image.maxCacheSize)\n                return false;\n        }\n        let maxSize = Platform.image.maxPatternSize;\n        if (!image.isSVG) {\n            const imageSize = image.width * image.height;\n            if (maxSize > imageSize)\n                maxSize = imageSize;\n        }\n        if (size > maxSize)\n            imageScale = Math.sqrt(size / maxSize);\n        if (imageScale) {\n            scaleX /= imageScale;\n            scaleY /= imageScale;\n            width /= imageScale;\n            height /= imageScale;\n        }\n        if (sx) {\n            scaleX /= sx;\n            scaleY /= sy;\n        }\n        if (transform || scaleX !== 1 || scaleY !== 1) {\n            if (!imageMatrix) {\n                imageMatrix = get$1();\n                if (transform)\n                    copy$1(imageMatrix, transform);\n            }\n            scale(imageMatrix, 1 / scaleX, 1 / scaleY);\n        }\n        const canvas = image.getCanvas(ceil(width) || 1, ceil(height) || 1, opacity);\n        const pattern = image.getPattern(canvas, repeat || (Platform.origin.noRepeat || 'no-repeat'), imageMatrix, paint);\n        paint.style = pattern;\n        paint.patternId = id;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst { abs } = Math;\nfunction checkImage(ui, canvas, paint, allowPaint) {\n    const { scaleX, scaleY } = ImageManager.patternLocked ? ui.__world : ui.__nowWorld;\n    const { pixelRatio } = canvas;\n    if (!paint.data || (paint.patternId === scaleX + '-' + scaleY + '-' + pixelRatio && !Export.running)) {\n        return false;\n    }\n    else {\n        const { data } = paint;\n        if (allowPaint) {\n            if (!data.repeat) {\n                let { width, height } = data;\n                width *= abs(scaleX) * pixelRatio;\n                height *= abs(scaleY) * pixelRatio;\n                if (data.scaleX) {\n                    width *= data.scaleX;\n                    height *= data.scaleY;\n                }\n                allowPaint = (width * height > Platform.image.maxCacheSize) || Export.running;\n            }\n            else {\n                allowPaint = false;\n            }\n        }\n        if (allowPaint) {\n            canvas.save();\n            ui.windingRule ? canvas.clip(ui.windingRule) : canvas.clip();\n            if (paint.blendMode)\n                canvas.blendMode = paint.blendMode;\n            if (data.opacity)\n                canvas.opacity *= data.opacity;\n            if (data.transform)\n                canvas.transform(data.transform);\n            canvas.drawImage(paint.image.view, 0, 0, data.width, data.height);\n            canvas.restore();\n            return true;\n        }\n        else {\n            if (!paint.style || paint.sync || Export.running) {\n                createPattern(ui, paint, pixelRatio);\n            }\n            else {\n                if (!paint.patternTask) {\n                    paint.patternTask = ImageManager.patternTasker.add(() => __awaiter(this, void 0, void 0, function* () {\n                        paint.patternTask = null;\n                        if (canvas.bounds.hit(ui.__nowWorld))\n                            createPattern(ui, paint, pixelRatio);\n                        ui.forceUpdate('surface');\n                    }), 300);\n                }\n            }\n            return false;\n        }\n    }\n}\n\nfunction recycleImage(attrName, data) {\n    const paints = data['_' + attrName];\n    if (paints instanceof Array) {\n        let image, recycleMap, input, url;\n        for (let i = 0, len = paints.length; i < len; i++) {\n            image = paints[i].image;\n            url = image && image.url;\n            if (url) {\n                if (!recycleMap)\n                    recycleMap = {};\n                recycleMap[url] = true;\n                ImageManager.recycle(image);\n                if (image.loading) {\n                    if (!input) {\n                        input = (data.__input && data.__input[attrName]) || [];\n                        if (!(input instanceof Array))\n                            input = [input];\n                    }\n                    image.unload(paints[i].loadId, !input.some((item) => item.url === url));\n                }\n            }\n        }\n        return recycleMap;\n    }\n    return null;\n}\n\nconst PaintImageModule = {\n    image,\n    checkImage,\n    createPattern,\n    recycleImage,\n    createData,\n    getPatternData,\n    fillOrFitMode,\n    clipMode,\n    repeatMode\n};\n\nconst { toPoint: toPoint$2 } = AroundHelper;\nconst realFrom$2 = {};\nconst realTo$2 = {};\nfunction linearGradient(paint, box) {\n    let { from, to, type, blendMode, opacity } = paint;\n    toPoint$2(from || 'top', box, realFrom$2);\n    toPoint$2(to || 'bottom', box, realTo$2);\n    const style = Platform.canvas.createLinearGradient(realFrom$2.x, realFrom$2.y, realTo$2.x, realTo$2.y);\n    applyStops(style, paint.stops, opacity);\n    const data = { type, style };\n    if (blendMode)\n        data.blendMode = blendMode;\n    return data;\n}\nfunction applyStops(gradient, stops, opacity) {\n    if (stops) {\n        let stop;\n        for (let i = 0, len = stops.length; i < len; i++) {\n            stop = stops[i];\n            if (typeof stop === 'string') {\n                gradient.addColorStop(i / (len - 1), ColorConvert.string(stop, opacity));\n            }\n            else {\n                gradient.addColorStop(stop.offset, ColorConvert.string(stop.color, opacity));\n            }\n        }\n    }\n}\n\nconst { getAngle, getDistance: getDistance$1 } = PointHelper;\nconst { get, rotateOfOuter, scaleOfOuter } = MatrixHelper;\nconst { toPoint: toPoint$1 } = AroundHelper;\nconst realFrom$1 = {};\nconst realTo$1 = {};\nfunction radialGradient(paint, box) {\n    let { from, to, type, opacity, blendMode, stretch } = paint;\n    toPoint$1(from || 'center', box, realFrom$1);\n    toPoint$1(to || 'bottom', box, realTo$1);\n    const style = Platform.canvas.createRadialGradient(realFrom$1.x, realFrom$1.y, 0, realFrom$1.x, realFrom$1.y, getDistance$1(realFrom$1, realTo$1));\n    applyStops(style, paint.stops, opacity);\n    const data = { type, style };\n    const transform = getTransform(box, realFrom$1, realTo$1, stretch, true);\n    if (transform)\n        data.transform = transform;\n    if (blendMode)\n        data.blendMode = blendMode;\n    return data;\n}\nfunction getTransform(box, from, to, stretch, rotate90) {\n    let transform;\n    const { width, height } = box;\n    if (width !== height || stretch) {\n        const angle = getAngle(from, to);\n        transform = get();\n        if (rotate90) {\n            scaleOfOuter(transform, from, width / height * (stretch || 1), 1);\n            rotateOfOuter(transform, from, angle + 90);\n        }\n        else {\n            scaleOfOuter(transform, from, 1, width / height * (stretch || 1));\n            rotateOfOuter(transform, from, angle);\n        }\n    }\n    return transform;\n}\n\nconst { getDistance } = PointHelper;\nconst { toPoint } = AroundHelper;\nconst realFrom = {};\nconst realTo = {};\nfunction conicGradient(paint, box) {\n    let { from, to, type, opacity, blendMode, stretch } = paint;\n    toPoint(from || 'center', box, realFrom);\n    toPoint(to || 'bottom', box, realTo);\n    const style = Platform.conicGradientSupport ? Platform.canvas.createConicGradient(0, realFrom.x, realFrom.y) : Platform.canvas.createRadialGradient(realFrom.x, realFrom.y, 0, realFrom.x, realFrom.y, getDistance(realFrom, realTo));\n    applyStops(style, paint.stops, opacity);\n    const data = { type, style };\n    const transform = getTransform(box, realFrom, realTo, stretch || 1, Platform.conicGradientRotate90);\n    if (transform)\n        data.transform = transform;\n    if (blendMode)\n        data.blendMode = blendMode;\n    return data;\n}\n\nconst PaintGradientModule = {\n    linearGradient,\n    radialGradient,\n    conicGradient,\n    getTransform\n};\n\nconst { copy, toOffsetOutBounds: toOffsetOutBounds$1 } = BoundsHelper;\nconst tempBounds = {};\nconst offsetOutBounds$1 = {};\nfunction shadow(ui, current, shape) {\n    let copyBounds, spreadScale;\n    const { __nowWorld: nowWorld, __layout } = ui;\n    const { shadow } = ui.__;\n    const { worldCanvas, bounds, shapeBounds, scaleX, scaleY } = shape;\n    const other = current.getSameCanvas();\n    const end = shadow.length - 1;\n    toOffsetOutBounds$1(bounds, offsetOutBounds$1);\n    shadow.forEach((item, index) => {\n        other.setWorldShadow((offsetOutBounds$1.offsetX + item.x * scaleX), (offsetOutBounds$1.offsetY + item.y * scaleY), item.blur * scaleX, item.color);\n        spreadScale = item.spread ? 1 + item.spread * 2 / (__layout.boxBounds.width + (__layout.strokeBoxSpread || 0) * 2) : 0;\n        drawWorldShadow(other, offsetOutBounds$1, spreadScale, shape);\n        copyBounds = bounds;\n        if (item.box) {\n            other.restore();\n            other.save();\n            if (worldCanvas) {\n                other.copyWorld(other, bounds, nowWorld, 'copy');\n                copyBounds = nowWorld;\n            }\n            worldCanvas ? other.copyWorld(worldCanvas, nowWorld, nowWorld, 'destination-out') : other.copyWorld(shape.canvas, shapeBounds, bounds, 'destination-out');\n        }\n        if (ui.__worldFlipped) {\n            current.copyWorldByReset(other, copyBounds, nowWorld, item.blendMode);\n        }\n        else {\n            current.copyWorldToInner(other, copyBounds, __layout.renderBounds, item.blendMode);\n        }\n        if (end && index < end)\n            other.clearWorld(copyBounds, true);\n    });\n    other.recycle(copyBounds);\n}\nfunction drawWorldShadow(canvas, outBounds, spreadScale, shape) {\n    const { bounds, shapeBounds } = shape;\n    if (Platform.fullImageShadow) {\n        copy(tempBounds, canvas.bounds);\n        tempBounds.x += (outBounds.x - shapeBounds.x);\n        tempBounds.y += (outBounds.y - shapeBounds.y);\n        if (spreadScale) {\n            const { matrix } = shape;\n            tempBounds.x -= (bounds.x + (matrix ? matrix.e : 0) + bounds.width / 2) * (spreadScale - 1);\n            tempBounds.y -= (bounds.y + (matrix ? matrix.f : 0) + bounds.height / 2) * (spreadScale - 1);\n            tempBounds.width *= spreadScale;\n            tempBounds.height *= spreadScale;\n        }\n        canvas.copyWorld(shape.canvas, canvas.bounds, tempBounds);\n    }\n    else {\n        if (spreadScale) {\n            copy(tempBounds, outBounds);\n            tempBounds.x -= (outBounds.width / 2) * (spreadScale - 1);\n            tempBounds.y -= (outBounds.height / 2) * (spreadScale - 1);\n            tempBounds.width *= spreadScale;\n            tempBounds.height *= spreadScale;\n        }\n        canvas.copyWorld(shape.canvas, shapeBounds, spreadScale ? tempBounds : outBounds);\n    }\n}\n\nconst { toOffsetOutBounds } = BoundsHelper;\nconst offsetOutBounds = {};\nfunction innerShadow(ui, current, shape) {\n    let copyBounds, spreadScale;\n    const { __nowWorld: nowWorld, __layout: __layout } = ui;\n    const { innerShadow } = ui.__;\n    const { worldCanvas, bounds, shapeBounds, scaleX, scaleY } = shape;\n    const other = current.getSameCanvas();\n    const end = innerShadow.length - 1;\n    toOffsetOutBounds(bounds, offsetOutBounds);\n    innerShadow.forEach((item, index) => {\n        other.save();\n        other.setWorldShadow((offsetOutBounds.offsetX + item.x * scaleX), (offsetOutBounds.offsetY + item.y * scaleY), item.blur * scaleX);\n        spreadScale = item.spread ? 1 - item.spread * 2 / (__layout.boxBounds.width + (__layout.strokeBoxSpread || 0) * 2) : 0;\n        drawWorldShadow(other, offsetOutBounds, spreadScale, shape);\n        other.restore();\n        if (worldCanvas) {\n            other.copyWorld(other, bounds, nowWorld, 'copy');\n            other.copyWorld(worldCanvas, nowWorld, nowWorld, 'source-out');\n            copyBounds = nowWorld;\n        }\n        else {\n            other.copyWorld(shape.canvas, shapeBounds, bounds, 'source-out');\n            copyBounds = bounds;\n        }\n        other.fillWorld(copyBounds, item.color, 'source-in');\n        if (ui.__worldFlipped) {\n            current.copyWorldByReset(other, copyBounds, nowWorld, item.blendMode);\n        }\n        else {\n            current.copyWorldToInner(other, copyBounds, __layout.renderBounds, item.blendMode);\n        }\n        if (end && index < end)\n            other.clearWorld(copyBounds, true);\n    });\n    other.recycle(copyBounds);\n}\n\nfunction blur(ui, current, origin) {\n    const { blur } = ui.__;\n    origin.setWorldBlur(blur * ui.__nowWorld.a);\n    origin.copyWorldToInner(current, ui.__nowWorld, ui.__layout.renderBounds);\n    origin.filter = 'none';\n}\n\nfunction backgroundBlur(_ui, _current, _shape) {\n}\n\nconst EffectModule = {\n    shadow,\n    innerShadow,\n    blur,\n    backgroundBlur\n};\n\nconst { excludeRenderBounds } = LeafBoundsHelper;\nGroup.prototype.__renderMask = function (canvas, options) {\n    let child, maskCanvas, contentCanvas, maskOpacity, currentMask, mask;\n    const { children } = this;\n    for (let i = 0, len = children.length; i < len; i++) {\n        child = children[i], mask = child.__.mask;\n        if (mask) {\n            if (currentMask) {\n                maskEnd(this, currentMask, canvas, contentCanvas, maskCanvas, maskOpacity);\n                maskCanvas = contentCanvas = null;\n            }\n            if (mask === 'path' || mask === 'clipping-path') {\n                if (child.opacity < 1) {\n                    currentMask = 'opacity-path';\n                    maskOpacity = child.opacity;\n                    if (!contentCanvas)\n                        contentCanvas = getCanvas(canvas);\n                }\n                else {\n                    currentMask = 'path';\n                    canvas.save();\n                }\n                child.__clip(contentCanvas || canvas, options);\n            }\n            else {\n                currentMask = mask === 'grayscale' ? 'grayscale' : 'alpha';\n                if (!maskCanvas)\n                    maskCanvas = getCanvas(canvas);\n                if (!contentCanvas)\n                    contentCanvas = getCanvas(canvas);\n                child.__render(maskCanvas, options);\n            }\n            if (!(mask === 'clipping' || mask === 'clipping-path'))\n                continue;\n        }\n        if (excludeRenderBounds(child, options))\n            continue;\n        child.__render(contentCanvas || canvas, options);\n    }\n    maskEnd(this, currentMask, canvas, contentCanvas, maskCanvas, maskOpacity);\n};\nfunction maskEnd(leaf, maskMode, canvas, contentCanvas, maskCanvas, maskOpacity) {\n    switch (maskMode) {\n        case 'grayscale':\n            maskCanvas.useGrayscaleAlpha(leaf.__nowWorld);\n        case 'alpha':\n            usePixelMask(leaf, canvas, contentCanvas, maskCanvas);\n            break;\n        case 'opacity-path':\n            copyContent(leaf, canvas, contentCanvas, maskOpacity);\n            break;\n        case 'path':\n            canvas.restore();\n    }\n}\nfunction getCanvas(canvas) {\n    return canvas.getSameCanvas(false, true);\n}\nfunction usePixelMask(leaf, canvas, content, mask) {\n    const realBounds = leaf.__nowWorld;\n    content.resetTransform();\n    content.opacity = 1;\n    content.useMask(mask, realBounds);\n    mask.recycle(realBounds);\n    copyContent(leaf, canvas, content, 1);\n}\nfunction copyContent(leaf, canvas, content, maskOpacity) {\n    const realBounds = leaf.__nowWorld;\n    canvas.resetTransform();\n    canvas.opacity = maskOpacity;\n    canvas.copyWorld(content, realBounds);\n    content.recycle(realBounds);\n}\n\nconst money = '¥￥＄€£￡¢￠';\nconst letter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz';\nconst langBefore = '《（「〈『〖【〔｛┌＜‘“＝' + money;\nconst langAfter = '》）」〉』〗】〕｝┐＞’”！？，、。：；‰';\nconst langSymbol = '≮≯≈≠＝…';\nconst langBreak$1 = '—／～｜┆·';\nconst beforeChar = '{[(<\\'\"' + langBefore;\nconst afterChar = '>)]}%!?,.:;\\'\"' + langAfter;\nconst symbolChar = afterChar + '_#~&*+\\\\=|' + langSymbol;\nconst breakChar = '- ' + langBreak$1;\nconst cjkRangeList = [\n    [0x4E00, 0x9FFF],\n    [0x3400, 0x4DBF],\n    [0x20000, 0x2A6DF],\n    [0x2A700, 0x2B73F],\n    [0x2B740, 0x2B81F],\n    [0x2B820, 0x2CEAF],\n    [0x2CEB0, 0x2EBEF],\n    [0x30000, 0x3134F],\n    [0x31350, 0x323AF],\n    [0x2E80, 0x2EFF],\n    [0x2F00, 0x2FDF],\n    [0x2FF0, 0x2FFF],\n    [0x3000, 0x303F],\n    [0x31C0, 0x31EF],\n    [0x3200, 0x32FF],\n    [0x3300, 0x33FF],\n    [0xF900, 0xFAFF],\n    [0xFE30, 0xFE4F],\n    [0x1F200, 0x1F2FF],\n    [0x2F800, 0x2FA1F],\n];\nconst cjkReg = new RegExp(cjkRangeList.map(([start, end]) => `[\\\\u${start.toString(16)}-\\\\u${end.toString(16)}]`).join('|'));\nfunction mapChar(str) {\n    const map = {};\n    str.split('').forEach(char => map[char] = true);\n    return map;\n}\nconst letterMap = mapChar(letter);\nconst beforeMap = mapChar(beforeChar);\nconst afterMap = mapChar(afterChar);\nconst symbolMap = mapChar(symbolChar);\nconst breakMap = mapChar(breakChar);\nvar CharType;\n(function (CharType) {\n    CharType[CharType[\"Letter\"] = 0] = \"Letter\";\n    CharType[CharType[\"Single\"] = 1] = \"Single\";\n    CharType[CharType[\"Before\"] = 2] = \"Before\";\n    CharType[CharType[\"After\"] = 3] = \"After\";\n    CharType[CharType[\"Symbol\"] = 4] = \"Symbol\";\n    CharType[CharType[\"Break\"] = 5] = \"Break\";\n})(CharType || (CharType = {}));\nconst { Letter: Letter$1, Single: Single$1, Before: Before$1, After: After$1, Symbol: Symbol$1, Break: Break$1 } = CharType;\nfunction getCharType(char) {\n    if (letterMap[char]) {\n        return Letter$1;\n    }\n    else if (breakMap[char]) {\n        return Break$1;\n    }\n    else if (beforeMap[char]) {\n        return Before$1;\n    }\n    else if (afterMap[char]) {\n        return After$1;\n    }\n    else if (symbolMap[char]) {\n        return Symbol$1;\n    }\n    else if (cjkReg.test(char)) {\n        return Single$1;\n    }\n    else {\n        return Letter$1;\n    }\n}\n\nconst TextRowHelper = {\n    trimRight(row) {\n        const { words } = row;\n        let trimRight = 0, len = words.length, char;\n        for (let i = len - 1; i > -1; i--) {\n            char = words[i].data[0];\n            if (char.char === ' ') {\n                trimRight++;\n                row.width -= char.width;\n            }\n            else {\n                break;\n            }\n        }\n        if (trimRight)\n            words.splice(len - trimRight, trimRight);\n    }\n};\n\nfunction getTextCase(char, textCase, firstChar) {\n    switch (textCase) {\n        case 'title':\n            return firstChar ? char.toUpperCase() : char;\n        case 'upper':\n            return char.toUpperCase();\n        case 'lower':\n            return char.toLowerCase();\n        default:\n            return char;\n    }\n}\n\nconst { trimRight } = TextRowHelper;\nconst { Letter, Single, Before, After, Symbol, Break } = CharType;\nlet word, row, wordWidth, rowWidth, realWidth;\nlet char, charWidth, startCharSize, charSize, charType, lastCharType, langBreak, afterBreak, paraStart;\nlet textDrawData, rows = [], bounds, findMaxWidth;\nfunction createRows(drawData, content, style) {\n    textDrawData = drawData;\n    rows = drawData.rows;\n    bounds = drawData.bounds;\n    findMaxWidth = !bounds.width && !style.autoSizeAlign;\n    const { __letterSpacing, paraIndent, textCase } = style;\n    const { canvas } = Platform;\n    const { width, height } = bounds;\n    const charMode = width || height || __letterSpacing || (textCase !== 'none');\n    if (charMode) {\n        const wrap = style.textWrap !== 'none';\n        const breakAll = style.textWrap === 'break';\n        paraStart = true;\n        lastCharType = null;\n        startCharSize = charWidth = charSize = wordWidth = rowWidth = 0;\n        word = { data: [] }, row = { words: [] };\n        for (let i = 0, len = content.length; i < len; i++) {\n            char = content[i];\n            if (char === '\\n') {\n                if (wordWidth)\n                    addWord();\n                row.paraEnd = true;\n                addRow();\n                paraStart = true;\n            }\n            else {\n                charType = getCharType(char);\n                if (charType === Letter && textCase !== 'none')\n                    char = getTextCase(char, textCase, !wordWidth);\n                charWidth = canvas.measureText(char).width;\n                if (__letterSpacing) {\n                    if (__letterSpacing < 0)\n                        charSize = charWidth;\n                    charWidth += __letterSpacing;\n                }\n                langBreak = (charType === Single && (lastCharType === Single || lastCharType === Letter)) || (lastCharType === Single && charType !== After);\n                afterBreak = ((charType === Before || charType === Single) && (lastCharType === Symbol || lastCharType === After));\n                realWidth = paraStart && paraIndent ? width - paraIndent : width;\n                if (wrap && (width && rowWidth + wordWidth + charWidth > realWidth)) {\n                    if (breakAll) {\n                        if (wordWidth)\n                            addWord();\n                        if (rowWidth)\n                            addRow();\n                    }\n                    else {\n                        if (!afterBreak)\n                            afterBreak = charType === Letter && lastCharType == After;\n                        if (langBreak || afterBreak || charType === Break || charType === Before || charType === Single || (wordWidth + charWidth > realWidth)) {\n                            if (wordWidth)\n                                addWord();\n                            if (rowWidth)\n                                addRow();\n                        }\n                        else {\n                            if (rowWidth)\n                                addRow();\n                        }\n                    }\n                }\n                if (char === ' ' && paraStart !== true && (rowWidth + wordWidth) === 0) ;\n                else {\n                    if (charType === Break) {\n                        if (char === ' ' && wordWidth)\n                            addWord();\n                        addChar(char, charWidth);\n                        addWord();\n                    }\n                    else if (langBreak || afterBreak) {\n                        if (wordWidth)\n                            addWord();\n                        addChar(char, charWidth);\n                    }\n                    else {\n                        addChar(char, charWidth);\n                    }\n                }\n                lastCharType = charType;\n            }\n        }\n        if (wordWidth)\n            addWord();\n        if (rowWidth)\n            addRow();\n        rows.length > 0 && (rows[rows.length - 1].paraEnd = true);\n    }\n    else {\n        content.split('\\n').forEach(content => {\n            textDrawData.paraNumber++;\n            rowWidth = canvas.measureText(content).width;\n            rows.push({ x: paraIndent || 0, text: content, width: rowWidth, paraStart: true });\n            if (findMaxWidth)\n                setMaxWidth();\n        });\n    }\n}\nfunction addChar(char, width) {\n    if (charSize && !startCharSize)\n        startCharSize = charSize;\n    word.data.push({ char, width });\n    wordWidth += width;\n}\nfunction addWord() {\n    rowWidth += wordWidth;\n    word.width = wordWidth;\n    row.words.push(word);\n    word = { data: [] };\n    wordWidth = 0;\n}\nfunction addRow() {\n    if (paraStart) {\n        textDrawData.paraNumber++;\n        row.paraStart = true;\n        paraStart = false;\n    }\n    if (charSize) {\n        row.startCharSize = startCharSize;\n        row.endCharSize = charSize;\n        startCharSize = 0;\n    }\n    row.width = rowWidth;\n    if (bounds.width)\n        trimRight(row);\n    else if (findMaxWidth)\n        setMaxWidth();\n    rows.push(row);\n    row = { words: [] };\n    rowWidth = 0;\n}\nfunction setMaxWidth() {\n    if (rowWidth > (textDrawData.maxWidth || 0))\n        textDrawData.maxWidth = rowWidth;\n}\n\nconst CharMode = 0;\nconst WordMode = 1;\nconst TextMode = 2;\nfunction layoutChar(drawData, style, width, _height) {\n    const { rows } = drawData;\n    const { textAlign, paraIndent, letterSpacing } = style;\n    let charX, addWordWidth, indentWidth, mode, wordChar;\n    rows.forEach(row => {\n        if (row.words) {\n            indentWidth = paraIndent && row.paraStart ? paraIndent : 0;\n            addWordWidth = (width && textAlign === 'justify' && row.words.length > 1) ? (width - row.width - indentWidth) / (row.words.length - 1) : 0;\n            mode = (letterSpacing || row.isOverflow) ? CharMode : (addWordWidth > 0.01 ? WordMode : TextMode);\n            if (row.isOverflow && !letterSpacing)\n                row.textMode = true;\n            if (mode === TextMode) {\n                row.x += indentWidth;\n                toTextChar$1(row);\n            }\n            else {\n                row.x += indentWidth;\n                charX = row.x;\n                row.data = [];\n                row.words.forEach(word => {\n                    if (mode === WordMode) {\n                        wordChar = { char: '', x: charX };\n                        charX = toWordChar(word.data, charX, wordChar);\n                        if (row.isOverflow || wordChar.char !== ' ')\n                            row.data.push(wordChar);\n                    }\n                    else {\n                        charX = toChar(word.data, charX, row.data, row.isOverflow);\n                    }\n                    if (!row.paraEnd && addWordWidth) {\n                        charX += addWordWidth;\n                        row.width += addWordWidth;\n                    }\n                });\n            }\n            row.words = null;\n        }\n    });\n}\nfunction toTextChar$1(row) {\n    row.text = '';\n    row.words.forEach(word => {\n        word.data.forEach(char => {\n            row.text += char.char;\n        });\n    });\n}\nfunction toWordChar(data, charX, wordChar) {\n    data.forEach(char => {\n        wordChar.char += char.char;\n        charX += char.width;\n    });\n    return charX;\n}\nfunction toChar(data, charX, rowData, isOverflow) {\n    data.forEach(char => {\n        if (isOverflow || char.char !== ' ') {\n            char.x = charX;\n            rowData.push(char);\n        }\n        charX += char.width;\n    });\n    return charX;\n}\n\nfunction layoutText(drawData, style) {\n    const { rows, bounds } = drawData;\n    const { __lineHeight, __baseLine, __letterSpacing, __clipText, textAlign, verticalAlign, paraSpacing, autoSizeAlign } = style;\n    let { x, y, width, height } = bounds, realHeight = __lineHeight * rows.length + (paraSpacing ? paraSpacing * (drawData.paraNumber - 1) : 0);\n    let starY = __baseLine;\n    if (__clipText && realHeight > height) {\n        realHeight = Math.max(height, __lineHeight);\n        drawData.overflow = rows.length;\n    }\n    else if (height || autoSizeAlign) {\n        switch (verticalAlign) {\n            case 'middle':\n                y += (height - realHeight) / 2;\n                break;\n            case 'bottom': y += (height - realHeight);\n        }\n    }\n    starY += y;\n    let row, rowX, rowWidth, layoutWidth = (width || autoSizeAlign) ? width : drawData.maxWidth;\n    for (let i = 0, len = rows.length; i < len; i++) {\n        row = rows[i];\n        row.x = x;\n        if (row.width < width || (row.width > width && !__clipText)) {\n            switch (textAlign) {\n                case 'center':\n                    row.x += (layoutWidth - row.width) / 2;\n                    break;\n                case 'right': row.x += layoutWidth - row.width;\n            }\n        }\n        if (row.paraStart && paraSpacing && i > 0)\n            starY += paraSpacing;\n        row.y = starY;\n        starY += __lineHeight;\n        if (drawData.overflow > i && starY > realHeight) {\n            row.isOverflow = true;\n            drawData.overflow = i + 1;\n        }\n        rowX = row.x;\n        rowWidth = row.width;\n        if (__letterSpacing < 0) {\n            if (row.width < 0) {\n                rowWidth = -row.width + style.fontSize + __letterSpacing;\n                rowX -= rowWidth;\n                rowWidth += style.fontSize;\n            }\n            else {\n                rowWidth -= __letterSpacing;\n            }\n        }\n        if (rowX < bounds.x)\n            bounds.x = rowX;\n        if (rowWidth > bounds.width)\n            bounds.width = rowWidth;\n        if (__clipText && width && width < rowWidth) {\n            row.isOverflow = true;\n            if (!drawData.overflow)\n                drawData.overflow = rows.length;\n        }\n    }\n    bounds.y = y;\n    bounds.height = realHeight;\n}\n\nfunction clipText(drawData, style, x, width) {\n    if (!width)\n        return;\n    const { rows, overflow } = drawData;\n    let { textOverflow } = style;\n    rows.splice(overflow);\n    if (textOverflow && textOverflow !== 'show') {\n        if (textOverflow === 'hide')\n            textOverflow = '';\n        else if (textOverflow === 'ellipsis')\n            textOverflow = '...';\n        let char, charRight;\n        const ellipsisWidth = textOverflow ? Platform.canvas.measureText(textOverflow).width : 0;\n        const right = x + width - ellipsisWidth;\n        const list = style.textWrap === 'none' ? rows : [rows[overflow - 1]];\n        list.forEach(row => {\n            if (row.isOverflow && row.data) {\n                let end = row.data.length - 1;\n                for (let i = end; i > -1; i--) {\n                    char = row.data[i];\n                    charRight = char.x + char.width;\n                    if (i === end && charRight < right) {\n                        break;\n                    }\n                    else if (charRight < right && char.char !== ' ') {\n                        row.data.splice(i + 1);\n                        row.width -= char.width;\n                        break;\n                    }\n                    row.width -= char.width;\n                }\n                row.width += ellipsisWidth;\n                row.data.push({ char: textOverflow, x: charRight });\n                if (row.textMode)\n                    toTextChar(row);\n            }\n        });\n    }\n}\nfunction toTextChar(row) {\n    row.text = '';\n    row.data.forEach(char => {\n        row.text += char.char;\n    });\n    row.data = null;\n}\n\nfunction decorationText(drawData, style) {\n    const { fontSize } = style;\n    drawData.decorationHeight = fontSize / 11;\n    switch (style.textDecoration) {\n        case 'under':\n            drawData.decorationY = fontSize * 0.15;\n            break;\n        case 'delete':\n            drawData.decorationY = -fontSize * 0.35;\n    }\n}\n\nconst { top, right, bottom, left } = Direction4;\nfunction getDrawData(content, style) {\n    if (typeof content !== 'string')\n        content = String(content);\n    let x = 0, y = 0;\n    let width = style.__getInput('width') || 0;\n    let height = style.__getInput('height') || 0;\n    const { textDecoration, __font, __padding: padding } = style;\n    if (padding) {\n        if (width)\n            x = padding[left], width -= (padding[right] + padding[left]);\n        else if (!style.autoSizeAlign)\n            x = padding[left];\n        if (height)\n            y = padding[top], height -= (padding[top] + padding[bottom]);\n        else if (!style.autoSizeAlign)\n            y = padding[top];\n    }\n    const drawData = {\n        bounds: { x, y, width, height },\n        rows: [],\n        paraNumber: 0,\n        font: Platform.canvas.font = __font\n    };\n    createRows(drawData, content, style);\n    if (padding)\n        padAutoText(padding, drawData, style, width, height);\n    layoutText(drawData, style);\n    layoutChar(drawData, style, width);\n    if (drawData.overflow)\n        clipText(drawData, style, x, width);\n    if (textDecoration !== 'none')\n        decorationText(drawData, style);\n    return drawData;\n}\nfunction padAutoText(padding, drawData, style, width, height) {\n    if (!width && style.autoSizeAlign) {\n        switch (style.textAlign) {\n            case 'left':\n                offsetText(drawData, 'x', padding[left]);\n                break;\n            case 'right': offsetText(drawData, 'x', -padding[right]);\n        }\n    }\n    if (!height && style.autoSizeAlign) {\n        switch (style.verticalAlign) {\n            case 'top':\n                offsetText(drawData, 'y', padding[top]);\n                break;\n            case 'bottom': offsetText(drawData, 'y', -padding[bottom]);\n        }\n    }\n}\nfunction offsetText(drawData, attrName, value) {\n    const { bounds, rows } = drawData;\n    bounds[attrName] += value;\n    for (let i = 0; i < rows.length; i++)\n        rows[i][attrName] += value;\n}\n\nconst TextConvertModule = {\n    getDrawData\n};\n\nfunction string(color, opacity) {\n    const doOpacity = typeof opacity === 'number' && opacity !== 1;\n    if (typeof color === 'string') {\n        if (doOpacity && ColorConvert.object)\n            color = ColorConvert.object(color);\n        else\n            return color;\n    }\n    let a = color.a === undefined ? 1 : color.a;\n    if (doOpacity)\n        a *= opacity;\n    const rgb = color.r + ',' + color.g + ',' + color.b;\n    return a === 1 ? 'rgb(' + rgb + ')' : 'rgba(' + rgb + ',' + a + ')';\n}\n\nconst ColorConvertModule = {\n    string\n};\n\nconst { setPoint, addPoint, toBounds } = TwoPointBoundsHelper;\nfunction getTrimBounds(canvas) {\n    const { width, height } = canvas.view;\n    const { data } = canvas.context.getImageData(0, 0, width, height);\n    let x, y, pointBounds, index = 0;\n    for (let i = 0; i < data.length; i += 4) {\n        if (data[i + 3] !== 0) {\n            x = index % width;\n            y = (index - x) / width;\n            pointBounds ? addPoint(pointBounds, x, y) : setPoint(pointBounds = {}, x, y);\n        }\n        index++;\n    }\n    const bounds = new Bounds();\n    toBounds(pointBounds, bounds);\n    return bounds.scale(1 / canvas.pixelRatio).ceil();\n}\n\nconst ExportModule = {\n    export(leaf, filename, options) {\n        this.running = true;\n        const fileType = FileHelper.fileType(filename);\n        const isDownload = filename.includes('.');\n        options = FileHelper.getExportOptions(options);\n        return addTask((success) => new Promise((resolve) => {\n            const over = (result) => {\n                success(result);\n                resolve();\n                this.running = false;\n            };\n            const { toURL } = Platform;\n            const { download } = Platform.origin;\n            if (fileType === 'json') {\n                isDownload && download(toURL(JSON.stringify(leaf.toJSON(options.json)), 'text'), filename);\n                return over({ data: isDownload ? true : leaf.toJSON(options.json) });\n            }\n            if (fileType === 'svg') {\n                isDownload && download(toURL(leaf.toSVG(), 'svg'), filename);\n                return over({ data: isDownload ? true : leaf.toSVG() });\n            }\n            const { leafer } = leaf;\n            if (leafer) {\n                checkLazy(leaf);\n                leafer.waitViewCompleted(() => __awaiter(this, void 0, void 0, function* () {\n                    let renderBounds, trimBounds, scaleX = 1, scaleY = 1;\n                    const { worldTransform, isLeafer, isFrame } = leaf;\n                    const { slice, trim, onCanvas } = options;\n                    const smooth = options.smooth === undefined ? leafer.config.smooth : options.smooth;\n                    const contextSettings = options.contextSettings || leafer.config.contextSettings;\n                    const screenshot = options.screenshot || leaf.isApp;\n                    const fill = (isLeafer && screenshot) ? (options.fill === undefined ? leaf.fill : options.fill) : options.fill;\n                    const needFill = FileHelper.isOpaqueImage(filename) || fill, matrix = new Matrix();\n                    if (screenshot) {\n                        renderBounds = screenshot === true ? (isLeafer ? leafer.canvas.bounds : leaf.worldRenderBounds) : screenshot;\n                    }\n                    else {\n                        let relative = options.relative || (isLeafer ? 'inner' : 'local');\n                        scaleX = worldTransform.scaleX;\n                        scaleY = worldTransform.scaleY;\n                        switch (relative) {\n                            case 'inner':\n                                matrix.set(worldTransform);\n                                break;\n                            case 'local':\n                                matrix.set(worldTransform).divide(leaf.localTransform);\n                                scaleX /= leaf.scaleX;\n                                scaleY /= leaf.scaleY;\n                                break;\n                            case 'world':\n                                scaleX = 1;\n                                scaleY = 1;\n                                break;\n                            case 'page':\n                                relative = leaf.leafer;\n                            default:\n                                matrix.set(worldTransform).divide(leaf.getTransform(relative));\n                                const l = relative.worldTransform;\n                                scaleX /= scaleX / l.scaleX;\n                                scaleY /= scaleY / l.scaleY;\n                        }\n                        renderBounds = leaf.getBounds('render', relative);\n                    }\n                    const scaleData = { scaleX: 1, scaleY: 1 };\n                    MathHelper.getScaleData(options.scale, options.size, renderBounds, scaleData);\n                    let pixelRatio = options.pixelRatio || 1;\n                    if (leaf.isApp) {\n                        scaleData.scaleX *= pixelRatio;\n                        scaleData.scaleY *= pixelRatio;\n                        pixelRatio = leaf.app.pixelRatio;\n                    }\n                    const { x, y, width, height } = new Bounds(renderBounds).scale(scaleData.scaleX, scaleData.scaleY);\n                    const renderOptions = { matrix: matrix.scale(1 / scaleData.scaleX, 1 / scaleData.scaleY).invert().translate(-x, -y).withScale(1 / scaleX * scaleData.scaleX, 1 / scaleY * scaleData.scaleY) };\n                    let canvas = Creator.canvas({ width: Math.round(width), height: Math.round(height), pixelRatio, smooth, contextSettings });\n                    let sliceLeaf;\n                    if (slice) {\n                        sliceLeaf = leaf;\n                        sliceLeaf.__worldOpacity = 0;\n                        leaf = leafer;\n                        renderOptions.bounds = canvas.bounds;\n                    }\n                    canvas.save();\n                    if (isFrame && fill !== undefined) {\n                        const oldFill = leaf.get('fill');\n                        leaf.fill = '';\n                        leaf.__render(canvas, renderOptions);\n                        leaf.fill = oldFill;\n                    }\n                    else {\n                        leaf.__render(canvas, renderOptions);\n                    }\n                    canvas.restore();\n                    if (sliceLeaf)\n                        sliceLeaf.__updateWorldOpacity();\n                    if (trim) {\n                        trimBounds = getTrimBounds(canvas);\n                        const old = canvas, { width, height } = trimBounds;\n                        const config = { x: 0, y: 0, width, height, pixelRatio };\n                        canvas = Creator.canvas(config);\n                        canvas.copyWorld(old, trimBounds, config);\n                    }\n                    if (needFill)\n                        canvas.fillWorld(canvas.bounds, fill || '#FFFFFF', 'destination-over');\n                    if (onCanvas)\n                        onCanvas(canvas);\n                    const data = filename === 'canvas' ? canvas : yield canvas.export(filename, options);\n                    over({ data, width: canvas.pixelWidth, height: canvas.pixelHeight, renderBounds, trimBounds });\n                }));\n            }\n            else {\n                over({ data: false });\n            }\n        }));\n    }\n};\nlet tasker;\nfunction addTask(task) {\n    if (!tasker)\n        tasker = new TaskProcessor();\n    return new Promise((resolve) => {\n        tasker.add(() => __awaiter(this, void 0, void 0, function* () { return yield task(resolve); }), { parallel: false });\n    });\n}\nfunction checkLazy(leaf) {\n    if (leaf.__.__needComputePaint)\n        leaf.__.__computePaint();\n    if (leaf.isBranch)\n        leaf.children.forEach(child => checkLazy(child));\n}\n\nconst canvas = LeaferCanvasBase.prototype;\nconst debug = Debug.get('@leafer-ui/export');\ncanvas.export = function (filename, options) {\n    const { quality, blob } = FileHelper.getExportOptions(options);\n    if (filename.includes('.'))\n        return this.saveAs(filename, quality);\n    else if (blob)\n        return this.toBlob(filename, quality);\n    else\n        return this.toDataURL(filename, quality);\n};\ncanvas.toBlob = function (type, quality) {\n    return new Promise((resolve) => {\n        Platform.origin.canvasToBolb(this.view, type, quality).then((blob) => {\n            resolve(blob);\n        }).catch((e) => {\n            debug.error(e);\n            resolve(null);\n        });\n    });\n};\ncanvas.toDataURL = function (type, quality) {\n    return Platform.origin.canvasToDataURL(this.view, type, quality);\n};\ncanvas.saveAs = function (filename, quality) {\n    return new Promise((resolve) => {\n        Platform.origin.canvasSaveAs(this.view, filename, quality).then(() => {\n            resolve(true);\n        }).catch((e) => {\n            debug.error(e);\n            resolve(false);\n        });\n    });\n};\n\nObject.assign(TextConvert, TextConvertModule);\nObject.assign(ColorConvert, ColorConvertModule);\nObject.assign(Paint, PaintModule);\nObject.assign(PaintImage, PaintImageModule);\nObject.assign(PaintGradient, PaintGradientModule);\nObject.assign(Effect, EffectModule);\nObject.assign(Export, ExportModule);\n\nObject.assign(Creator, {\n    interaction: (target, canvas, selector, options) => new Interaction(target, canvas, selector, options),\n    hitCanvas: (options, manager) => new LeaferCanvas(options, manager),\n    hitCanvasManager: () => new HitCanvasManager()\n});\nuseCanvas();\n\nexport { Interaction, Layouter, LeaferCanvas, Renderer, Selector, Watcher, useCanvas };\n"],
  "mappings": "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",
  "names": ["fileType", "min", "a", "scale", "t", "c", "matrix", "origin", "tempMatrix", "s", "inner", "cosR", "point", "bounds", "spread", "list", "fourNumber", "top", "right", "bottom", "left", "Direction4", "Direction9", "UI", "ui", "Event", "canvas", "leaf", "Answer", "P", "a", "c", "image", "config", "s", "matrix", "blur", "canvas", "bounds", "toBounds", "ceil", "right", "bottom", "t", "radius", "setPointBounds", "setEndPoint", "radiusX", "radiusY", "t2", "v", "setPoint", "point", "char", "list", "l", "transform", "leaf", "exclude", "origin", "m", "leafer", "map", "once", "type", "item", "create", "Leaf", "off", "inner", "box", "destroy", "Branch", "__decorate", "c", "debug$1", "ui", "t", "leafer", "fill", "stroke", "shadow", "innerShadow", "blur", "backgroundBlur", "canvas", "shape", "UI", "__decorate", "Group", "debug", "Leafer", "config", "bounds", "emit", "off", "list", "Rect", "copy", "add", "rect", "Box", "Frame", "ellipse", "Ellipse", "toBounds", "Line", "sin$1", "cos$1", "PI$1", "drawPoints", "Polygon", "sin", "cos", "PI", "moveTo", "lineTo", "closePath", "Star", "Image", "Canvas", "image", "scale", "matrix", "m", "copyAndSpread", "Text", "row", "top", "right", "bottom", "left", "Path", "Pen", "__decorate", "c", "App", "canvas", "leafer", "bounds", "m", "config", "__decorate", "PointerEvent", "DragEvent", "leaf", "move", "right", "bottom", "boundsRight", "boundsBottom", "DropEvent", "MoveEvent", "RotateEvent", "SwipeEvent", "ZoomEvent", "KeyEvent", "document", "debug$1", "list", "min", "scale", "startPoint", "I", "off", "debug", "emit", "emitEvent", "a", "copy", "point", "inner", "matrix", "h", "rect", "group", "ui", "radiusX", "radiusY", "debug$3", "config", "canvas", "origin", "updateAllMatrix$1", "updateAllWorldOpacity", "pushAllChildBranch", "updateMatrix", "leaf", "updateBounds", "list", "updateAllMatrix", "updateAllChange", "debug$2", "t", "current", "debug$1", "block", "bounds", "includes", "empty", "point", "cache", "scale", "min", "getMoveEventData", "getZoomEventData", "getRotateEventData", "pathCanDrag", "ui", "row", "rows", "fill", "fills", "stroke", "strokes", "spread", "matrix", "rotate", "box", "transform", "tempPoint", "image", "isSame", "emit", "leafer", "copy$1", "ceil", "abs$1", "__awaiter", "P", "abs", "ui", "canvas", "__awaiter", "image", "recycleMap", "toPoint$2", "box", "getAngle", "get", "rotateOfOuter", "scaleOfOuter", "toPoint$1", "transform", "getDistance", "toPoint", "copy", "tempBounds", "current", "shape", "shadow", "bounds", "matrix", "innerShadow", "origin", "blur", "excludeRenderBounds", "leaf", "char", "CharType", "row", "trimRight", "content", "rows", "word", "rowWidth", "right", "list", "bottom", "a", "setPoint", "addPoint", "toBounds", "fileType", "leafer", "fill", "l", "width", "height", "config", "debug"]
}
